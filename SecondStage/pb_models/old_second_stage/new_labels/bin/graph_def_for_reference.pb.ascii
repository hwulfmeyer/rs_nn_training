node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 35
        }
        dim {
          size: 35
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_pad/Pad"
  op: "Pad"
  input: "input_1"
  input: "conv1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1873171627521515
      }
    }
  }
}
node {
  name: "conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1873171627521515
      }
    }
  }
}
node {
  name: "conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1522578
    }
  }
}
node {
  name: "conv1/random_uniform/sub"
  op: "Sub"
  input: "conv1/random_uniform/max"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform/mul"
  op: "Mul"
  input: "conv1/random_uniform/RandomUniform"
  input: "conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform"
  op: "Add"
  input: "conv1/random_uniform/mul"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1/kernel"
    }
  }
}
node {
  name: "conv1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1/kernel"
}
node {
  name: "conv1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv1/kernel"
  input: "conv1/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/convolution"
  op: "Conv2D"
  input: "conv1_pad/Pad"
  input: "conv1/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1_bn/gamma"
    }
  }
}
node {
  name: "conv1_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1_bn/gamma"
}
node {
  name: "conv1_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv1_bn/gamma"
  input: "conv1_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1_bn/beta"
    }
  }
}
node {
  name: "conv1_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1_bn/beta"
}
node {
  name: "conv1_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv1_bn/beta"
  input: "conv1_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1_bn/moving_mean"
    }
  }
}
node {
  name: "conv1_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1_bn/moving_mean"
}
node {
  name: "conv1_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv1_bn/moving_variance"
    }
  }
}
node {
  name: "conv1_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1_bn/moving_variance"
}
node {
  name: "conv1_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv1_bn/moving_variance"
}
node {
  name: "conv1_bn/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv1_bn/gamma"
}
node {
  name: "conv1_bn/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "conv1/kernel"
}
node {
  name: "conv1_bn/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "conv1_bn/beta"
}
node {
  name: "conv1_bn/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "conv1_bn/moving_mean"
}
node {
  name: "conv1_bn/init"
  op: "NoOp"
  input: "^conv1/kernel/Assign"
  input: "^conv1_bn/beta/Assign"
  input: "^conv1_bn/gamma/Assign"
  input: "^conv1_bn/moving_mean/Assign"
  input: "^conv1_bn/moving_variance/Assign"
}
node {
  name: "conv1_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1_bn/ReadVariableOp"
  input: "conv1_bn/ReadVariableOp_1"
  input: "conv1_bn/Const_4"
  input: "conv1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Shape"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv1_bn/Shape"
  input: "conv1_bn/strided_slice/stack"
  input: "conv1_bn/strided_slice/stack_1"
  input: "conv1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_1"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv1_bn/Shape_1"
  input: "conv1_bn/strided_slice_1/stack"
  input: "conv1_bn/strided_slice_1/stack_1"
  input: "conv1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_2"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv1_bn/Shape_2"
  input: "conv1_bn/strided_slice_2/stack"
  input: "conv1_bn/strided_slice_2/stack_1"
  input: "conv1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Rank/packed"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range"
  op: "Range"
  input: "conv1_bn/range/start"
  input: "conv1_bn/Rank"
  input: "conv1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/Prod/input"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Prod"
  op: "Prod"
  input: "conv1_bn/Prod/input"
  input: "conv1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/Cast"
  op: "Cast"
  input: "conv1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv1_bn/sub"
  op: "Sub"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/truediv"
  op: "RealDiv"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/mul"
  op: "Mul"
  input: "conv1_bn/FusedBatchNorm:2"
  input: "conv1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/sub_1"
  op: "Sub"
  input: "conv1_bn/ReadVariableOp_2"
  input: "conv1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/mul_1"
  op: "Mul"
  input: "conv1_bn/sub_1"
  input: "conv1_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_mean"
  input: "^conv1_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/sub_2"
  op: "Sub"
  input: "conv1_bn/ReadVariableOp_4"
  input: "conv1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/mul_2"
  op: "Mul"
  input: "conv1_bn/sub_2"
  input: "conv1_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_variance"
  input: "^conv1_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1_bn/ReadVariableOp_6"
  input: "conv1_bn/ReadVariableOp_7"
  input: "conv1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_relu/Relu6"
  op: "Relu6"
  input: "conv1_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1980295032262802
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1980295032262802
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1312561
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_1/random_uniform/max"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_1/random_uniform/RandomUniform"
  input: "conv_dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform"
  op: "Add"
  input: "conv_dw_1/random_uniform/mul"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_1/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_1/depthwise_kernel"
}
node {
  name: "conv_dw_1/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  input: "conv_dw_1/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv1_relu/Relu6"
  input: "conv_dw_1/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_1_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/gamma"
}
node {
  name: "conv_dw_1_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/gamma"
  input: "conv_dw_1_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_1_bn/beta"
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/beta"
}
node {
  name: "conv_dw_1_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/beta"
  input: "conv_dw_1_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_1_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/moving_mean"
}
node {
  name: "conv_dw_1_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_1_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/moving_variance"
}
node {
  name: "conv_dw_1_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/ReadVariableOp"
  input: "conv_dw_1_bn/ReadVariableOp_1"
  input: "conv_dw_1_bn/Const_4"
  input: "conv_dw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape"
  input: "conv_dw_1_bn/strided_slice/stack"
  input: "conv_dw_1_bn/strided_slice/stack_1"
  input: "conv_dw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_1"
  input: "conv_dw_1_bn/strided_slice_1/stack"
  input: "conv_dw_1_bn/strided_slice_1/stack_1"
  input: "conv_dw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_2"
  input: "conv_dw_1_bn/strided_slice_2/stack"
  input: "conv_dw_1_bn/strided_slice_2/stack_1"
  input: "conv_dw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range"
  op: "Range"
  input: "conv_dw_1_bn/range/start"
  input: "conv_dw_1_bn/Rank"
  input: "conv_dw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod"
  op: "Prod"
  input: "conv_dw_1_bn/Prod/input"
  input: "conv_dw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/Cast"
  op: "Cast"
  input: "conv_dw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/sub"
  op: "Sub"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/mul"
  op: "Mul"
  input: "conv_dw_1_bn/FusedBatchNorm:2"
  input: "conv_dw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/sub_1"
  op: "Sub"
  input: "conv_dw_1_bn/ReadVariableOp_2"
  input: "conv_dw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/mul_1"
  op: "Mul"
  input: "conv_dw_1_bn/sub_1"
  input: "conv_dw_1_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  input: "^conv_dw_1_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/sub_2"
  op: "Sub"
  input: "conv_dw_1_bn/ReadVariableOp_4"
  input: "conv_dw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/mul_2"
  op: "Mul"
  input: "conv_dw_1_bn/sub_2"
  input: "conv_dw_1_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  input: "^conv_dw_1_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/ReadVariableOp_6"
  input: "conv_dw_1_bn/ReadVariableOp_7"
  input: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_1_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 640020
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_1/random_uniform/max"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_1/random_uniform/RandomUniform"
  input: "conv_pw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform"
  op: "Add"
  input: "conv_pw_1/random_uniform/mul"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_1/kernel"
    }
  }
}
node {
  name: "conv_pw_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_1/kernel"
}
node {
  name: "conv_pw_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_1/kernel"
  input: "conv_pw_1/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/convolution"
  op: "Conv2D"
  input: "conv_dw_1_relu/Relu6"
  input: "conv_pw_1/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_1_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/gamma"
}
node {
  name: "conv_pw_1_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/gamma"
  input: "conv_pw_1_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_1_bn/beta"
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/beta"
}
node {
  name: "conv_pw_1_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/beta"
  input: "conv_pw_1_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_1_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/moving_mean"
}
node {
  name: "conv_pw_1_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_1_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/moving_variance"
}
node {
  name: "conv_pw_1_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/ReadVariableOp"
  input: "conv_pw_1_bn/ReadVariableOp_1"
  input: "conv_pw_1_bn/Const_4"
  input: "conv_pw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape"
  input: "conv_pw_1_bn/strided_slice/stack"
  input: "conv_pw_1_bn/strided_slice/stack_1"
  input: "conv_pw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_1"
  input: "conv_pw_1_bn/strided_slice_1/stack"
  input: "conv_pw_1_bn/strided_slice_1/stack_1"
  input: "conv_pw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_2"
  input: "conv_pw_1_bn/strided_slice_2/stack"
  input: "conv_pw_1_bn/strided_slice_2/stack_1"
  input: "conv_pw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range"
  op: "Range"
  input: "conv_pw_1_bn/range/start"
  input: "conv_pw_1_bn/Rank"
  input: "conv_pw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod"
  op: "Prod"
  input: "conv_pw_1_bn/Prod/input"
  input: "conv_pw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/Cast"
  op: "Cast"
  input: "conv_pw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/sub"
  op: "Sub"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/mul"
  op: "Mul"
  input: "conv_pw_1_bn/FusedBatchNorm:2"
  input: "conv_pw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/sub_1"
  op: "Sub"
  input: "conv_pw_1_bn/ReadVariableOp_2"
  input: "conv_pw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/mul_1"
  op: "Mul"
  input: "conv_pw_1_bn/sub_1"
  input: "conv_pw_1_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  input: "^conv_pw_1_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/sub_2"
  op: "Sub"
  input: "conv_pw_1_bn/ReadVariableOp_4"
  input: "conv_pw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/mul_2"
  op: "Mul"
  input: "conv_pw_1_bn/sub_2"
  input: "conv_pw_1_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  input: "^conv_pw_1_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/ReadVariableOp_6"
  input: "conv_pw_1_bn/ReadVariableOp_7"
  input: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_1_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_2/Pad"
  op: "Pad"
  input: "conv_pw_1_relu/Relu6"
  input: "conv_pad_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6586150
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_2/random_uniform/max"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_2/random_uniform/RandomUniform"
  input: "conv_dw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform"
  op: "Add"
  input: "conv_dw_2/random_uniform/mul"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_2/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_2/depthwise_kernel"
}
node {
  name: "conv_dw_2/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  input: "conv_dw_2/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_2/Pad"
  input: "conv_dw_2/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_2_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/gamma"
}
node {
  name: "conv_dw_2_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/gamma"
  input: "conv_dw_2_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_2_bn/beta"
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/beta"
}
node {
  name: "conv_dw_2_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/beta"
  input: "conv_dw_2_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_2_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/moving_mean"
}
node {
  name: "conv_dw_2_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_2_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/moving_variance"
}
node {
  name: "conv_dw_2_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/ReadVariableOp"
  input: "conv_dw_2_bn/ReadVariableOp_1"
  input: "conv_dw_2_bn/Const_4"
  input: "conv_dw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape"
  input: "conv_dw_2_bn/strided_slice/stack"
  input: "conv_dw_2_bn/strided_slice/stack_1"
  input: "conv_dw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_1"
  input: "conv_dw_2_bn/strided_slice_1/stack"
  input: "conv_dw_2_bn/strided_slice_1/stack_1"
  input: "conv_dw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_2"
  input: "conv_dw_2_bn/strided_slice_2/stack"
  input: "conv_dw_2_bn/strided_slice_2/stack_1"
  input: "conv_dw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range"
  op: "Range"
  input: "conv_dw_2_bn/range/start"
  input: "conv_dw_2_bn/Rank"
  input: "conv_dw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod"
  op: "Prod"
  input: "conv_dw_2_bn/Prod/input"
  input: "conv_dw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/Cast"
  op: "Cast"
  input: "conv_dw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/sub"
  op: "Sub"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/mul"
  op: "Mul"
  input: "conv_dw_2_bn/FusedBatchNorm:2"
  input: "conv_dw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/sub_1"
  op: "Sub"
  input: "conv_dw_2_bn/ReadVariableOp_2"
  input: "conv_dw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/mul_1"
  op: "Mul"
  input: "conv_dw_2_bn/sub_1"
  input: "conv_dw_2_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  input: "^conv_dw_2_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/sub_2"
  op: "Sub"
  input: "conv_dw_2_bn/ReadVariableOp_4"
  input: "conv_dw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/mul_2"
  op: "Mul"
  input: "conv_dw_2_bn/sub_2"
  input: "conv_dw_2_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  input: "^conv_dw_2_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/ReadVariableOp_6"
  input: "conv_dw_2_bn/ReadVariableOp_7"
  input: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_2_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8264755
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_2/random_uniform/max"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_2/random_uniform/RandomUniform"
  input: "conv_pw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform"
  op: "Add"
  input: "conv_pw_2/random_uniform/mul"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_2/kernel"
    }
  }
}
node {
  name: "conv_pw_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_2/kernel"
}
node {
  name: "conv_pw_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_2/kernel"
  input: "conv_pw_2/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/convolution"
  op: "Conv2D"
  input: "conv_dw_2_relu/Relu6"
  input: "conv_pw_2/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_2_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/gamma"
}
node {
  name: "conv_pw_2_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/gamma"
  input: "conv_pw_2_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_2_bn/beta"
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/beta"
}
node {
  name: "conv_pw_2_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/beta"
  input: "conv_pw_2_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_2_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/moving_mean"
}
node {
  name: "conv_pw_2_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_2_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/moving_variance"
}
node {
  name: "conv_pw_2_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/ReadVariableOp"
  input: "conv_pw_2_bn/ReadVariableOp_1"
  input: "conv_pw_2_bn/Const_4"
  input: "conv_pw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape"
  input: "conv_pw_2_bn/strided_slice/stack"
  input: "conv_pw_2_bn/strided_slice/stack_1"
  input: "conv_pw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_1"
  input: "conv_pw_2_bn/strided_slice_1/stack"
  input: "conv_pw_2_bn/strided_slice_1/stack_1"
  input: "conv_pw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_2"
  input: "conv_pw_2_bn/strided_slice_2/stack"
  input: "conv_pw_2_bn/strided_slice_2/stack_1"
  input: "conv_pw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range"
  op: "Range"
  input: "conv_pw_2_bn/range/start"
  input: "conv_pw_2_bn/Rank"
  input: "conv_pw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod"
  op: "Prod"
  input: "conv_pw_2_bn/Prod/input"
  input: "conv_pw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/Cast"
  op: "Cast"
  input: "conv_pw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/sub"
  op: "Sub"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/mul"
  op: "Mul"
  input: "conv_pw_2_bn/FusedBatchNorm:2"
  input: "conv_pw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/sub_1"
  op: "Sub"
  input: "conv_pw_2_bn/ReadVariableOp_2"
  input: "conv_pw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/mul_1"
  op: "Mul"
  input: "conv_pw_2_bn/sub_1"
  input: "conv_pw_2_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  input: "^conv_pw_2_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/sub_2"
  op: "Sub"
  input: "conv_pw_2_bn/ReadVariableOp_4"
  input: "conv_pw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/mul_2"
  op: "Mul"
  input: "conv_pw_2_bn/sub_2"
  input: "conv_pw_2_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  input: "^conv_pw_2_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/ReadVariableOp_6"
  input: "conv_pw_2_bn/ReadVariableOp_7"
  input: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_2_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5413971
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_3/random_uniform/max"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_3/random_uniform/RandomUniform"
  input: "conv_dw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform"
  op: "Add"
  input: "conv_dw_3/random_uniform/mul"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_3/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_3/depthwise_kernel"
}
node {
  name: "conv_dw_3/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  input: "conv_dw_3/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_2_relu/Relu6"
  input: "conv_dw_3/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_3_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/gamma"
}
node {
  name: "conv_dw_3_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/gamma"
  input: "conv_dw_3_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_3_bn/beta"
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/beta"
}
node {
  name: "conv_dw_3_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/beta"
  input: "conv_dw_3_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_3_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/moving_mean"
}
node {
  name: "conv_dw_3_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_3_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/moving_variance"
}
node {
  name: "conv_dw_3_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/ReadVariableOp"
  input: "conv_dw_3_bn/ReadVariableOp_1"
  input: "conv_dw_3_bn/Const_4"
  input: "conv_dw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape"
  input: "conv_dw_3_bn/strided_slice/stack"
  input: "conv_dw_3_bn/strided_slice/stack_1"
  input: "conv_dw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_1"
  input: "conv_dw_3_bn/strided_slice_1/stack"
  input: "conv_dw_3_bn/strided_slice_1/stack_1"
  input: "conv_dw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_2"
  input: "conv_dw_3_bn/strided_slice_2/stack"
  input: "conv_dw_3_bn/strided_slice_2/stack_1"
  input: "conv_dw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range"
  op: "Range"
  input: "conv_dw_3_bn/range/start"
  input: "conv_dw_3_bn/Rank"
  input: "conv_dw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod"
  op: "Prod"
  input: "conv_dw_3_bn/Prod/input"
  input: "conv_dw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/Cast"
  op: "Cast"
  input: "conv_dw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/sub"
  op: "Sub"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/mul"
  op: "Mul"
  input: "conv_dw_3_bn/FusedBatchNorm:2"
  input: "conv_dw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/sub_1"
  op: "Sub"
  input: "conv_dw_3_bn/ReadVariableOp_2"
  input: "conv_dw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/mul_1"
  op: "Mul"
  input: "conv_dw_3_bn/sub_1"
  input: "conv_dw_3_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  input: "^conv_dw_3_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/sub_2"
  op: "Sub"
  input: "conv_dw_3_bn/ReadVariableOp_4"
  input: "conv_dw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/mul_2"
  op: "Mul"
  input: "conv_dw_3_bn/sub_2"
  input: "conv_dw_3_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  input: "^conv_dw_3_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/ReadVariableOp_6"
  input: "conv_dw_3_bn/ReadVariableOp_7"
  input: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_3_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9900806
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_3/random_uniform/max"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_3/random_uniform/RandomUniform"
  input: "conv_pw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform"
  op: "Add"
  input: "conv_pw_3/random_uniform/mul"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_3/kernel"
    }
  }
}
node {
  name: "conv_pw_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_3/kernel"
}
node {
  name: "conv_pw_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_3/kernel"
  input: "conv_pw_3/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/convolution"
  op: "Conv2D"
  input: "conv_dw_3_relu/Relu6"
  input: "conv_pw_3/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_3_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/gamma"
}
node {
  name: "conv_pw_3_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/gamma"
  input: "conv_pw_3_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_3_bn/beta"
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/beta"
}
node {
  name: "conv_pw_3_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/beta"
  input: "conv_pw_3_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_3_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/moving_mean"
}
node {
  name: "conv_pw_3_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_3_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/moving_variance"
}
node {
  name: "conv_pw_3_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/ReadVariableOp"
  input: "conv_pw_3_bn/ReadVariableOp_1"
  input: "conv_pw_3_bn/Const_4"
  input: "conv_pw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape"
  input: "conv_pw_3_bn/strided_slice/stack"
  input: "conv_pw_3_bn/strided_slice/stack_1"
  input: "conv_pw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_1"
  input: "conv_pw_3_bn/strided_slice_1/stack"
  input: "conv_pw_3_bn/strided_slice_1/stack_1"
  input: "conv_pw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_2"
  input: "conv_pw_3_bn/strided_slice_2/stack"
  input: "conv_pw_3_bn/strided_slice_2/stack_1"
  input: "conv_pw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range"
  op: "Range"
  input: "conv_pw_3_bn/range/start"
  input: "conv_pw_3_bn/Rank"
  input: "conv_pw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod"
  op: "Prod"
  input: "conv_pw_3_bn/Prod/input"
  input: "conv_pw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/Cast"
  op: "Cast"
  input: "conv_pw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/sub"
  op: "Sub"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/mul"
  op: "Mul"
  input: "conv_pw_3_bn/FusedBatchNorm:2"
  input: "conv_pw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/sub_1"
  op: "Sub"
  input: "conv_pw_3_bn/ReadVariableOp_2"
  input: "conv_pw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/mul_1"
  op: "Mul"
  input: "conv_pw_3_bn/sub_1"
  input: "conv_pw_3_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  input: "^conv_pw_3_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/sub_2"
  op: "Sub"
  input: "conv_pw_3_bn/ReadVariableOp_4"
  input: "conv_pw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/mul_2"
  op: "Mul"
  input: "conv_pw_3_bn/sub_2"
  input: "conv_pw_3_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  input: "^conv_pw_3_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/ReadVariableOp_6"
  input: "conv_pw_3_bn/ReadVariableOp_7"
  input: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_3_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_4/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_4/Pad"
  op: "Pad"
  input: "conv_pw_3_relu/Relu6"
  input: "conv_pad_4/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5838550
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_4/random_uniform/max"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_4/random_uniform/RandomUniform"
  input: "conv_dw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform"
  op: "Add"
  input: "conv_dw_4/random_uniform/mul"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_4/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_4/depthwise_kernel"
}
node {
  name: "conv_dw_4/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  input: "conv_dw_4/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_4/Pad"
  input: "conv_dw_4/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_4_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/gamma"
}
node {
  name: "conv_dw_4_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/gamma"
  input: "conv_dw_4_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_4_bn/beta"
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/beta"
}
node {
  name: "conv_dw_4_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/beta"
  input: "conv_dw_4_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_4_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/moving_mean"
}
node {
  name: "conv_dw_4_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_4_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/moving_variance"
}
node {
  name: "conv_dw_4_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/ReadVariableOp"
  input: "conv_dw_4_bn/ReadVariableOp_1"
  input: "conv_dw_4_bn/Const_4"
  input: "conv_dw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape"
  input: "conv_dw_4_bn/strided_slice/stack"
  input: "conv_dw_4_bn/strided_slice/stack_1"
  input: "conv_dw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_1"
  input: "conv_dw_4_bn/strided_slice_1/stack"
  input: "conv_dw_4_bn/strided_slice_1/stack_1"
  input: "conv_dw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_2"
  input: "conv_dw_4_bn/strided_slice_2/stack"
  input: "conv_dw_4_bn/strided_slice_2/stack_1"
  input: "conv_dw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range"
  op: "Range"
  input: "conv_dw_4_bn/range/start"
  input: "conv_dw_4_bn/Rank"
  input: "conv_dw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod"
  op: "Prod"
  input: "conv_dw_4_bn/Prod/input"
  input: "conv_dw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/Cast"
  op: "Cast"
  input: "conv_dw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/sub"
  op: "Sub"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/mul"
  op: "Mul"
  input: "conv_dw_4_bn/FusedBatchNorm:2"
  input: "conv_dw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/sub_1"
  op: "Sub"
  input: "conv_dw_4_bn/ReadVariableOp_2"
  input: "conv_dw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/mul_1"
  op: "Mul"
  input: "conv_dw_4_bn/sub_1"
  input: "conv_dw_4_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  input: "^conv_dw_4_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/sub_2"
  op: "Sub"
  input: "conv_dw_4_bn/ReadVariableOp_4"
  input: "conv_dw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/mul_2"
  op: "Mul"
  input: "conv_dw_4_bn/sub_2"
  input: "conv_dw_4_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  input: "^conv_dw_4_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/ReadVariableOp_6"
  input: "conv_dw_4_bn/ReadVariableOp_7"
  input: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_4_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7835791
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_4/random_uniform/max"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_4/random_uniform/RandomUniform"
  input: "conv_pw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform"
  op: "Add"
  input: "conv_pw_4/random_uniform/mul"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_4/kernel"
    }
  }
}
node {
  name: "conv_pw_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_4/kernel"
}
node {
  name: "conv_pw_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_4/kernel"
  input: "conv_pw_4/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/convolution"
  op: "Conv2D"
  input: "conv_dw_4_relu/Relu6"
  input: "conv_pw_4/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_4_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/gamma"
}
node {
  name: "conv_pw_4_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/gamma"
  input: "conv_pw_4_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_4_bn/beta"
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/beta"
}
node {
  name: "conv_pw_4_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/beta"
  input: "conv_pw_4_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_4_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/moving_mean"
}
node {
  name: "conv_pw_4_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_4_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/moving_variance"
}
node {
  name: "conv_pw_4_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/ReadVariableOp"
  input: "conv_pw_4_bn/ReadVariableOp_1"
  input: "conv_pw_4_bn/Const_4"
  input: "conv_pw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape"
  input: "conv_pw_4_bn/strided_slice/stack"
  input: "conv_pw_4_bn/strided_slice/stack_1"
  input: "conv_pw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_1"
  input: "conv_pw_4_bn/strided_slice_1/stack"
  input: "conv_pw_4_bn/strided_slice_1/stack_1"
  input: "conv_pw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_2"
  input: "conv_pw_4_bn/strided_slice_2/stack"
  input: "conv_pw_4_bn/strided_slice_2/stack_1"
  input: "conv_pw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range"
  op: "Range"
  input: "conv_pw_4_bn/range/start"
  input: "conv_pw_4_bn/Rank"
  input: "conv_pw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod"
  op: "Prod"
  input: "conv_pw_4_bn/Prod/input"
  input: "conv_pw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/Cast"
  op: "Cast"
  input: "conv_pw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/sub"
  op: "Sub"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/mul"
  op: "Mul"
  input: "conv_pw_4_bn/FusedBatchNorm:2"
  input: "conv_pw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/sub_1"
  op: "Sub"
  input: "conv_pw_4_bn/ReadVariableOp_2"
  input: "conv_pw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/mul_1"
  op: "Mul"
  input: "conv_pw_4_bn/sub_1"
  input: "conv_pw_4_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  input: "^conv_pw_4_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/sub_2"
  op: "Sub"
  input: "conv_pw_4_bn/ReadVariableOp_4"
  input: "conv_pw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/mul_2"
  op: "Mul"
  input: "conv_pw_4_bn/sub_2"
  input: "conv_pw_4_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  input: "^conv_pw_4_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/ReadVariableOp_6"
  input: "conv_pw_4_bn/ReadVariableOp_7"
  input: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_4_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5097477
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_5/random_uniform/max"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_5/random_uniform/RandomUniform"
  input: "conv_dw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform"
  op: "Add"
  input: "conv_dw_5/random_uniform/mul"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_5/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_5/depthwise_kernel"
}
node {
  name: "conv_dw_5/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  input: "conv_dw_5/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_4_relu/Relu6"
  input: "conv_dw_5/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_5_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/gamma"
}
node {
  name: "conv_dw_5_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/gamma"
  input: "conv_dw_5_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_5_bn/beta"
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/beta"
}
node {
  name: "conv_dw_5_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/beta"
  input: "conv_dw_5_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_5_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/moving_mean"
}
node {
  name: "conv_dw_5_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_5_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/moving_variance"
}
node {
  name: "conv_dw_5_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/ReadVariableOp"
  input: "conv_dw_5_bn/ReadVariableOp_1"
  input: "conv_dw_5_bn/Const_4"
  input: "conv_dw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape"
  input: "conv_dw_5_bn/strided_slice/stack"
  input: "conv_dw_5_bn/strided_slice/stack_1"
  input: "conv_dw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_1"
  input: "conv_dw_5_bn/strided_slice_1/stack"
  input: "conv_dw_5_bn/strided_slice_1/stack_1"
  input: "conv_dw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_2"
  input: "conv_dw_5_bn/strided_slice_2/stack"
  input: "conv_dw_5_bn/strided_slice_2/stack_1"
  input: "conv_dw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range"
  op: "Range"
  input: "conv_dw_5_bn/range/start"
  input: "conv_dw_5_bn/Rank"
  input: "conv_dw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod"
  op: "Prod"
  input: "conv_dw_5_bn/Prod/input"
  input: "conv_dw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/Cast"
  op: "Cast"
  input: "conv_dw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/sub"
  op: "Sub"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/mul"
  op: "Mul"
  input: "conv_dw_5_bn/FusedBatchNorm:2"
  input: "conv_dw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/sub_1"
  op: "Sub"
  input: "conv_dw_5_bn/ReadVariableOp_2"
  input: "conv_dw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/mul_1"
  op: "Mul"
  input: "conv_dw_5_bn/sub_1"
  input: "conv_dw_5_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  input: "^conv_dw_5_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/sub_2"
  op: "Sub"
  input: "conv_dw_5_bn/ReadVariableOp_4"
  input: "conv_dw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/mul_2"
  op: "Mul"
  input: "conv_dw_5_bn/sub_2"
  input: "conv_dw_5_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  input: "^conv_dw_5_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/ReadVariableOp_6"
  input: "conv_dw_5_bn/ReadVariableOp_7"
  input: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_5_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4141983
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_5/random_uniform/max"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_5/random_uniform/RandomUniform"
  input: "conv_pw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform"
  op: "Add"
  input: "conv_pw_5/random_uniform/mul"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_5/kernel"
    }
  }
}
node {
  name: "conv_pw_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_5/kernel"
}
node {
  name: "conv_pw_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_5/kernel"
  input: "conv_pw_5/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/convolution"
  op: "Conv2D"
  input: "conv_dw_5_relu/Relu6"
  input: "conv_pw_5/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_5_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/gamma"
}
node {
  name: "conv_pw_5_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/gamma"
  input: "conv_pw_5_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_5_bn/beta"
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/beta"
}
node {
  name: "conv_pw_5_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/beta"
  input: "conv_pw_5_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_5_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/moving_mean"
}
node {
  name: "conv_pw_5_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_5_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/moving_variance"
}
node {
  name: "conv_pw_5_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/ReadVariableOp"
  input: "conv_pw_5_bn/ReadVariableOp_1"
  input: "conv_pw_5_bn/Const_4"
  input: "conv_pw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape"
  input: "conv_pw_5_bn/strided_slice/stack"
  input: "conv_pw_5_bn/strided_slice/stack_1"
  input: "conv_pw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_1"
  input: "conv_pw_5_bn/strided_slice_1/stack"
  input: "conv_pw_5_bn/strided_slice_1/stack_1"
  input: "conv_pw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_2"
  input: "conv_pw_5_bn/strided_slice_2/stack"
  input: "conv_pw_5_bn/strided_slice_2/stack_1"
  input: "conv_pw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range"
  op: "Range"
  input: "conv_pw_5_bn/range/start"
  input: "conv_pw_5_bn/Rank"
  input: "conv_pw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod"
  op: "Prod"
  input: "conv_pw_5_bn/Prod/input"
  input: "conv_pw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/Cast"
  op: "Cast"
  input: "conv_pw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/sub"
  op: "Sub"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/mul"
  op: "Mul"
  input: "conv_pw_5_bn/FusedBatchNorm:2"
  input: "conv_pw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/sub_1"
  op: "Sub"
  input: "conv_pw_5_bn/ReadVariableOp_2"
  input: "conv_pw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/mul_1"
  op: "Mul"
  input: "conv_pw_5_bn/sub_1"
  input: "conv_pw_5_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  input: "^conv_pw_5_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/sub_2"
  op: "Sub"
  input: "conv_pw_5_bn/ReadVariableOp_4"
  input: "conv_pw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/mul_2"
  op: "Mul"
  input: "conv_pw_5_bn/sub_2"
  input: "conv_pw_5_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  input: "^conv_pw_5_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/ReadVariableOp_6"
  input: "conv_pw_5_bn/ReadVariableOp_7"
  input: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_5_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_6/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_6/Pad"
  op: "Pad"
  input: "conv_pw_5_relu/Relu6"
  input: "conv_pad_6/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6167636
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_6/random_uniform/max"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_6/random_uniform/RandomUniform"
  input: "conv_dw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform"
  op: "Add"
  input: "conv_dw_6/random_uniform/mul"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_6/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_6/depthwise_kernel"
}
node {
  name: "conv_dw_6/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  input: "conv_dw_6/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_6/Pad"
  input: "conv_dw_6/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_6_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/gamma"
}
node {
  name: "conv_dw_6_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/gamma"
  input: "conv_dw_6_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_6_bn/beta"
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/beta"
}
node {
  name: "conv_dw_6_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/beta"
  input: "conv_dw_6_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_6_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/moving_mean"
}
node {
  name: "conv_dw_6_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_6_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/moving_variance"
}
node {
  name: "conv_dw_6_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/ReadVariableOp"
  input: "conv_dw_6_bn/ReadVariableOp_1"
  input: "conv_dw_6_bn/Const_4"
  input: "conv_dw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape"
  input: "conv_dw_6_bn/strided_slice/stack"
  input: "conv_dw_6_bn/strided_slice/stack_1"
  input: "conv_dw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_1"
  input: "conv_dw_6_bn/strided_slice_1/stack"
  input: "conv_dw_6_bn/strided_slice_1/stack_1"
  input: "conv_dw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_2"
  input: "conv_dw_6_bn/strided_slice_2/stack"
  input: "conv_dw_6_bn/strided_slice_2/stack_1"
  input: "conv_dw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range"
  op: "Range"
  input: "conv_dw_6_bn/range/start"
  input: "conv_dw_6_bn/Rank"
  input: "conv_dw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod"
  op: "Prod"
  input: "conv_dw_6_bn/Prod/input"
  input: "conv_dw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/Cast"
  op: "Cast"
  input: "conv_dw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/sub"
  op: "Sub"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/mul"
  op: "Mul"
  input: "conv_dw_6_bn/FusedBatchNorm:2"
  input: "conv_dw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/sub_1"
  op: "Sub"
  input: "conv_dw_6_bn/ReadVariableOp_2"
  input: "conv_dw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/mul_1"
  op: "Mul"
  input: "conv_dw_6_bn/sub_1"
  input: "conv_dw_6_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  input: "^conv_dw_6_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/sub_2"
  op: "Sub"
  input: "conv_dw_6_bn/ReadVariableOp_4"
  input: "conv_dw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/mul_2"
  op: "Mul"
  input: "conv_dw_6_bn/sub_2"
  input: "conv_dw_6_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  input: "^conv_dw_6_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/ReadVariableOp_6"
  input: "conv_dw_6_bn/ReadVariableOp_7"
  input: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_6_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2646239
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_6/random_uniform/max"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_6/random_uniform/RandomUniform"
  input: "conv_pw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform"
  op: "Add"
  input: "conv_pw_6/random_uniform/mul"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_6/kernel"
    }
  }
}
node {
  name: "conv_pw_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_6/kernel"
}
node {
  name: "conv_pw_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_6/kernel"
  input: "conv_pw_6/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/convolution"
  op: "Conv2D"
  input: "conv_dw_6_relu/Relu6"
  input: "conv_pw_6/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_6_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/gamma"
}
node {
  name: "conv_pw_6_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/gamma"
  input: "conv_pw_6_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_6_bn/beta"
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/beta"
}
node {
  name: "conv_pw_6_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/beta"
  input: "conv_pw_6_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_6_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/moving_mean"
}
node {
  name: "conv_pw_6_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_6_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/moving_variance"
}
node {
  name: "conv_pw_6_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/ReadVariableOp"
  input: "conv_pw_6_bn/ReadVariableOp_1"
  input: "conv_pw_6_bn/Const_4"
  input: "conv_pw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape"
  input: "conv_pw_6_bn/strided_slice/stack"
  input: "conv_pw_6_bn/strided_slice/stack_1"
  input: "conv_pw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_1"
  input: "conv_pw_6_bn/strided_slice_1/stack"
  input: "conv_pw_6_bn/strided_slice_1/stack_1"
  input: "conv_pw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_2"
  input: "conv_pw_6_bn/strided_slice_2/stack"
  input: "conv_pw_6_bn/strided_slice_2/stack_1"
  input: "conv_pw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range"
  op: "Range"
  input: "conv_pw_6_bn/range/start"
  input: "conv_pw_6_bn/Rank"
  input: "conv_pw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod"
  op: "Prod"
  input: "conv_pw_6_bn/Prod/input"
  input: "conv_pw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/Cast"
  op: "Cast"
  input: "conv_pw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/sub"
  op: "Sub"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/mul"
  op: "Mul"
  input: "conv_pw_6_bn/FusedBatchNorm:2"
  input: "conv_pw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/sub_1"
  op: "Sub"
  input: "conv_pw_6_bn/ReadVariableOp_2"
  input: "conv_pw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/mul_1"
  op: "Mul"
  input: "conv_pw_6_bn/sub_1"
  input: "conv_pw_6_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  input: "^conv_pw_6_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/sub_2"
  op: "Sub"
  input: "conv_pw_6_bn/ReadVariableOp_4"
  input: "conv_pw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/mul_2"
  op: "Mul"
  input: "conv_pw_6_bn/sub_2"
  input: "conv_pw_6_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  input: "^conv_pw_6_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/ReadVariableOp_6"
  input: "conv_pw_6_bn/ReadVariableOp_7"
  input: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_6_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6330961
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_7/random_uniform/max"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_7/random_uniform/RandomUniform"
  input: "conv_dw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform"
  op: "Add"
  input: "conv_dw_7/random_uniform/mul"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_7/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_7/depthwise_kernel"
}
node {
  name: "conv_dw_7/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  input: "conv_dw_7/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_6_relu/Relu6"
  input: "conv_dw_7/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_7_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/gamma"
}
node {
  name: "conv_dw_7_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/gamma"
  input: "conv_dw_7_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_7_bn/beta"
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/beta"
}
node {
  name: "conv_dw_7_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/beta"
  input: "conv_dw_7_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_7_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/moving_mean"
}
node {
  name: "conv_dw_7_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_7_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/moving_variance"
}
node {
  name: "conv_dw_7_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/ReadVariableOp"
  input: "conv_dw_7_bn/ReadVariableOp_1"
  input: "conv_dw_7_bn/Const_4"
  input: "conv_dw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape"
  input: "conv_dw_7_bn/strided_slice/stack"
  input: "conv_dw_7_bn/strided_slice/stack_1"
  input: "conv_dw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_1"
  input: "conv_dw_7_bn/strided_slice_1/stack"
  input: "conv_dw_7_bn/strided_slice_1/stack_1"
  input: "conv_dw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_2"
  input: "conv_dw_7_bn/strided_slice_2/stack"
  input: "conv_dw_7_bn/strided_slice_2/stack_1"
  input: "conv_dw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range"
  op: "Range"
  input: "conv_dw_7_bn/range/start"
  input: "conv_dw_7_bn/Rank"
  input: "conv_dw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod"
  op: "Prod"
  input: "conv_dw_7_bn/Prod/input"
  input: "conv_dw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/Cast"
  op: "Cast"
  input: "conv_dw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/sub"
  op: "Sub"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/mul"
  op: "Mul"
  input: "conv_dw_7_bn/FusedBatchNorm:2"
  input: "conv_dw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/sub_1"
  op: "Sub"
  input: "conv_dw_7_bn/ReadVariableOp_2"
  input: "conv_dw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/mul_1"
  op: "Mul"
  input: "conv_dw_7_bn/sub_1"
  input: "conv_dw_7_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  input: "^conv_dw_7_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/sub_2"
  op: "Sub"
  input: "conv_dw_7_bn/ReadVariableOp_4"
  input: "conv_dw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/mul_2"
  op: "Mul"
  input: "conv_dw_7_bn/sub_2"
  input: "conv_dw_7_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  input: "^conv_dw_7_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/ReadVariableOp_6"
  input: "conv_dw_7_bn/ReadVariableOp_7"
  input: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_7_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8782890
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_7/random_uniform/max"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_7/random_uniform/RandomUniform"
  input: "conv_pw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform"
  op: "Add"
  input: "conv_pw_7/random_uniform/mul"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_7/kernel"
    }
  }
}
node {
  name: "conv_pw_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_7/kernel"
}
node {
  name: "conv_pw_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_7/kernel"
  input: "conv_pw_7/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/convolution"
  op: "Conv2D"
  input: "conv_dw_7_relu/Relu6"
  input: "conv_pw_7/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_7_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/gamma"
}
node {
  name: "conv_pw_7_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/gamma"
  input: "conv_pw_7_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_7_bn/beta"
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/beta"
}
node {
  name: "conv_pw_7_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/beta"
  input: "conv_pw_7_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_7_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/moving_mean"
}
node {
  name: "conv_pw_7_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_7_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/moving_variance"
}
node {
  name: "conv_pw_7_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/ReadVariableOp"
  input: "conv_pw_7_bn/ReadVariableOp_1"
  input: "conv_pw_7_bn/Const_4"
  input: "conv_pw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape"
  input: "conv_pw_7_bn/strided_slice/stack"
  input: "conv_pw_7_bn/strided_slice/stack_1"
  input: "conv_pw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_1"
  input: "conv_pw_7_bn/strided_slice_1/stack"
  input: "conv_pw_7_bn/strided_slice_1/stack_1"
  input: "conv_pw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_2"
  input: "conv_pw_7_bn/strided_slice_2/stack"
  input: "conv_pw_7_bn/strided_slice_2/stack_1"
  input: "conv_pw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range"
  op: "Range"
  input: "conv_pw_7_bn/range/start"
  input: "conv_pw_7_bn/Rank"
  input: "conv_pw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod"
  op: "Prod"
  input: "conv_pw_7_bn/Prod/input"
  input: "conv_pw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/Cast"
  op: "Cast"
  input: "conv_pw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/sub"
  op: "Sub"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/mul"
  op: "Mul"
  input: "conv_pw_7_bn/FusedBatchNorm:2"
  input: "conv_pw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/sub_1"
  op: "Sub"
  input: "conv_pw_7_bn/ReadVariableOp_2"
  input: "conv_pw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/mul_1"
  op: "Mul"
  input: "conv_pw_7_bn/sub_1"
  input: "conv_pw_7_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  input: "^conv_pw_7_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/sub_2"
  op: "Sub"
  input: "conv_pw_7_bn/ReadVariableOp_4"
  input: "conv_pw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/mul_2"
  op: "Mul"
  input: "conv_pw_7_bn/sub_2"
  input: "conv_pw_7_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  input: "^conv_pw_7_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/ReadVariableOp_6"
  input: "conv_pw_7_bn/ReadVariableOp_7"
  input: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_7_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4386468
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_8/random_uniform/max"
  input: "conv_dw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_8/random_uniform/RandomUniform"
  input: "conv_dw_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/random_uniform"
  op: "Add"
  input: "conv_dw_8/random_uniform/mul"
  input: "conv_dw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_8/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_8/depthwise_kernel"
}
node {
  name: "conv_dw_8/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  input: "conv_dw_8/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_8/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_7_relu/Relu6"
  input: "conv_dw_8/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_8_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/gamma"
}
node {
  name: "conv_dw_8_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/gamma"
  input: "conv_dw_8_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_8_bn/beta"
    }
  }
}
node {
  name: "conv_dw_8_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/beta"
}
node {
  name: "conv_dw_8_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/beta"
  input: "conv_dw_8_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_8_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/moving_mean"
}
node {
  name: "conv_dw_8_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  input: "conv_dw_8_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_8_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/moving_variance"
}
node {
  name: "conv_dw_8_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  input: "conv_dw_8_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_8/depthwise"
  input: "conv_dw_8_bn/ReadVariableOp"
  input: "conv_dw_8_bn/ReadVariableOp_1"
  input: "conv_dw_8_bn/Const_4"
  input: "conv_dw_8_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape"
  input: "conv_dw_8_bn/strided_slice/stack"
  input: "conv_dw_8_bn/strided_slice/stack_1"
  input: "conv_dw_8_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape_1"
  input: "conv_dw_8_bn/strided_slice_1/stack"
  input: "conv_dw_8_bn/strided_slice_1/stack_1"
  input: "conv_dw_8_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_8/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_8_bn/Shape_2"
  input: "conv_dw_8_bn/strided_slice_2/stack"
  input: "conv_dw_8_bn/strided_slice_2/stack_1"
  input: "conv_dw_8_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_8_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_8_bn/strided_slice"
  input: "conv_dw_8_bn/strided_slice_1"
  input: "conv_dw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_8_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/range"
  op: "Range"
  input: "conv_dw_8_bn/range/start"
  input: "conv_dw_8_bn/Rank"
  input: "conv_dw_8_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_8_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_8_bn/strided_slice"
  input: "conv_dw_8_bn/strided_slice_1"
  input: "conv_dw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_8_bn/Prod"
  op: "Prod"
  input: "conv_dw_8_bn/Prod/input"
  input: "conv_dw_8_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/Cast"
  op: "Cast"
  input: "conv_dw_8_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/sub"
  op: "Sub"
  input: "conv_dw_8_bn/Cast"
  input: "conv_dw_8_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_8_bn/Cast"
  input: "conv_dw_8_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/mul"
  op: "Mul"
  input: "conv_dw_8_bn/FusedBatchNorm:2"
  input: "conv_dw_8_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/sub_1"
  op: "Sub"
  input: "conv_dw_8_bn/ReadVariableOp_2"
  input: "conv_dw_8_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/mul_1"
  op: "Mul"
  input: "conv_dw_8_bn/sub_1"
  input: "conv_dw_8_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  input: "conv_dw_8_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  input: "^conv_dw_8_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/sub_2"
  op: "Sub"
  input: "conv_dw_8_bn/ReadVariableOp_4"
  input: "conv_dw_8_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/mul_2"
  op: "Mul"
  input: "conv_dw_8_bn/sub_2"
  input: "conv_dw_8_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_8_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  input: "conv_dw_8_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  input: "^conv_dw_8_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_8_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_8/depthwise"
  input: "conv_dw_8_bn/ReadVariableOp_6"
  input: "conv_dw_8_bn/ReadVariableOp_7"
  input: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_8_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_8_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5917606
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_8/random_uniform/max"
  input: "conv_pw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_8/random_uniform/RandomUniform"
  input: "conv_pw_8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/random_uniform"
  op: "Add"
  input: "conv_pw_8/random_uniform/mul"
  input: "conv_pw_8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_8/kernel"
    }
  }
}
node {
  name: "conv_pw_8/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_8/kernel"
}
node {
  name: "conv_pw_8/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_8/kernel"
  input: "conv_pw_8/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8/convolution"
  op: "Conv2D"
  input: "conv_dw_8_relu/Relu6"
  input: "conv_pw_8/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_8_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/gamma"
}
node {
  name: "conv_pw_8_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/gamma"
  input: "conv_pw_8_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_8_bn/beta"
    }
  }
}
node {
  name: "conv_pw_8_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/beta"
}
node {
  name: "conv_pw_8_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/beta"
  input: "conv_pw_8_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_8_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/moving_mean"
}
node {
  name: "conv_pw_8_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  input: "conv_pw_8_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_8_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/moving_variance"
}
node {
  name: "conv_pw_8_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  input: "conv_pw_8_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_8/convolution"
  input: "conv_pw_8_bn/ReadVariableOp"
  input: "conv_pw_8_bn/ReadVariableOp_1"
  input: "conv_pw_8_bn/Const_4"
  input: "conv_pw_8_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape"
  input: "conv_pw_8_bn/strided_slice/stack"
  input: "conv_pw_8_bn/strided_slice/stack_1"
  input: "conv_pw_8_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape_1"
  input: "conv_pw_8_bn/strided_slice_1/stack"
  input: "conv_pw_8_bn/strided_slice_1/stack_1"
  input: "conv_pw_8_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_8_bn/Shape_2"
  input: "conv_pw_8_bn/strided_slice_2/stack"
  input: "conv_pw_8_bn/strided_slice_2/stack_1"
  input: "conv_pw_8_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_8_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_8_bn/strided_slice"
  input: "conv_pw_8_bn/strided_slice_1"
  input: "conv_pw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_8_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/range"
  op: "Range"
  input: "conv_pw_8_bn/range/start"
  input: "conv_pw_8_bn/Rank"
  input: "conv_pw_8_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_8_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_8_bn/strided_slice"
  input: "conv_pw_8_bn/strided_slice_1"
  input: "conv_pw_8_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_8_bn/Prod"
  op: "Prod"
  input: "conv_pw_8_bn/Prod/input"
  input: "conv_pw_8_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/Cast"
  op: "Cast"
  input: "conv_pw_8_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/sub"
  op: "Sub"
  input: "conv_pw_8_bn/Cast"
  input: "conv_pw_8_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_8_bn/Cast"
  input: "conv_pw_8_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/mul"
  op: "Mul"
  input: "conv_pw_8_bn/FusedBatchNorm:2"
  input: "conv_pw_8_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/sub_1"
  op: "Sub"
  input: "conv_pw_8_bn/ReadVariableOp_2"
  input: "conv_pw_8_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/mul_1"
  op: "Mul"
  input: "conv_pw_8_bn/sub_1"
  input: "conv_pw_8_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  input: "conv_pw_8_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  input: "^conv_pw_8_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/sub_2"
  op: "Sub"
  input: "conv_pw_8_bn/ReadVariableOp_4"
  input: "conv_pw_8_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/mul_2"
  op: "Mul"
  input: "conv_pw_8_bn/sub_2"
  input: "conv_pw_8_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_8_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  input: "conv_pw_8_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  input: "^conv_pw_8_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_8_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_8/convolution"
  input: "conv_pw_8_bn/ReadVariableOp_6"
  input: "conv_pw_8_bn/ReadVariableOp_7"
  input: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_8_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_8_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9962568
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_9/random_uniform/max"
  input: "conv_dw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_9/random_uniform/RandomUniform"
  input: "conv_dw_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/random_uniform"
  op: "Add"
  input: "conv_dw_9/random_uniform/mul"
  input: "conv_dw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_9/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_9/depthwise_kernel"
}
node {
  name: "conv_dw_9/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  input: "conv_dw_9/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_9/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_8_relu/Relu6"
  input: "conv_dw_9/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_9_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/gamma"
}
node {
  name: "conv_dw_9_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/gamma"
  input: "conv_dw_9_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_9_bn/beta"
    }
  }
}
node {
  name: "conv_dw_9_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/beta"
}
node {
  name: "conv_dw_9_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/beta"
  input: "conv_dw_9_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_9_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/moving_mean"
}
node {
  name: "conv_dw_9_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  input: "conv_dw_9_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_9_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/moving_variance"
}
node {
  name: "conv_dw_9_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  input: "conv_dw_9_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_9/depthwise"
  input: "conv_dw_9_bn/ReadVariableOp"
  input: "conv_dw_9_bn/ReadVariableOp_1"
  input: "conv_dw_9_bn/Const_4"
  input: "conv_dw_9_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape"
  input: "conv_dw_9_bn/strided_slice/stack"
  input: "conv_dw_9_bn/strided_slice/stack_1"
  input: "conv_dw_9_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape_1"
  input: "conv_dw_9_bn/strided_slice_1/stack"
  input: "conv_dw_9_bn/strided_slice_1/stack_1"
  input: "conv_dw_9_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_9/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_9_bn/Shape_2"
  input: "conv_dw_9_bn/strided_slice_2/stack"
  input: "conv_dw_9_bn/strided_slice_2/stack_1"
  input: "conv_dw_9_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_9_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_9_bn/strided_slice"
  input: "conv_dw_9_bn/strided_slice_1"
  input: "conv_dw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_9_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/range"
  op: "Range"
  input: "conv_dw_9_bn/range/start"
  input: "conv_dw_9_bn/Rank"
  input: "conv_dw_9_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_9_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_9_bn/strided_slice"
  input: "conv_dw_9_bn/strided_slice_1"
  input: "conv_dw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_9_bn/Prod"
  op: "Prod"
  input: "conv_dw_9_bn/Prod/input"
  input: "conv_dw_9_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/Cast"
  op: "Cast"
  input: "conv_dw_9_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/sub"
  op: "Sub"
  input: "conv_dw_9_bn/Cast"
  input: "conv_dw_9_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_9_bn/Cast"
  input: "conv_dw_9_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/mul"
  op: "Mul"
  input: "conv_dw_9_bn/FusedBatchNorm:2"
  input: "conv_dw_9_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/sub_1"
  op: "Sub"
  input: "conv_dw_9_bn/ReadVariableOp_2"
  input: "conv_dw_9_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/mul_1"
  op: "Mul"
  input: "conv_dw_9_bn/sub_1"
  input: "conv_dw_9_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  input: "conv_dw_9_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  input: "^conv_dw_9_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/sub_2"
  op: "Sub"
  input: "conv_dw_9_bn/ReadVariableOp_4"
  input: "conv_dw_9_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/mul_2"
  op: "Mul"
  input: "conv_dw_9_bn/sub_2"
  input: "conv_dw_9_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_9_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  input: "conv_dw_9_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  input: "^conv_dw_9_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_9_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_9/depthwise"
  input: "conv_dw_9_bn/ReadVariableOp_6"
  input: "conv_dw_9_bn/ReadVariableOp_7"
  input: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_9_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_9_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5124470
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_9/random_uniform/max"
  input: "conv_pw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_9/random_uniform/RandomUniform"
  input: "conv_pw_9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/random_uniform"
  op: "Add"
  input: "conv_pw_9/random_uniform/mul"
  input: "conv_pw_9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_9/kernel"
    }
  }
}
node {
  name: "conv_pw_9/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_9/kernel"
}
node {
  name: "conv_pw_9/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_9/kernel"
  input: "conv_pw_9/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9/convolution"
  op: "Conv2D"
  input: "conv_dw_9_relu/Relu6"
  input: "conv_pw_9/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_9_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/gamma"
}
node {
  name: "conv_pw_9_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/gamma"
  input: "conv_pw_9_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_9_bn/beta"
    }
  }
}
node {
  name: "conv_pw_9_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/beta"
}
node {
  name: "conv_pw_9_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/beta"
  input: "conv_pw_9_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_9_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/moving_mean"
}
node {
  name: "conv_pw_9_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  input: "conv_pw_9_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_9_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/moving_variance"
}
node {
  name: "conv_pw_9_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  input: "conv_pw_9_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_9/convolution"
  input: "conv_pw_9_bn/ReadVariableOp"
  input: "conv_pw_9_bn/ReadVariableOp_1"
  input: "conv_pw_9_bn/Const_4"
  input: "conv_pw_9_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape"
  input: "conv_pw_9_bn/strided_slice/stack"
  input: "conv_pw_9_bn/strided_slice/stack_1"
  input: "conv_pw_9_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape_1"
  input: "conv_pw_9_bn/strided_slice_1/stack"
  input: "conv_pw_9_bn/strided_slice_1/stack_1"
  input: "conv_pw_9_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_9_bn/Shape_2"
  input: "conv_pw_9_bn/strided_slice_2/stack"
  input: "conv_pw_9_bn/strided_slice_2/stack_1"
  input: "conv_pw_9_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_9_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_9_bn/strided_slice"
  input: "conv_pw_9_bn/strided_slice_1"
  input: "conv_pw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_9_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/range"
  op: "Range"
  input: "conv_pw_9_bn/range/start"
  input: "conv_pw_9_bn/Rank"
  input: "conv_pw_9_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_9_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_9_bn/strided_slice"
  input: "conv_pw_9_bn/strided_slice_1"
  input: "conv_pw_9_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_9_bn/Prod"
  op: "Prod"
  input: "conv_pw_9_bn/Prod/input"
  input: "conv_pw_9_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/Cast"
  op: "Cast"
  input: "conv_pw_9_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/sub"
  op: "Sub"
  input: "conv_pw_9_bn/Cast"
  input: "conv_pw_9_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_9_bn/Cast"
  input: "conv_pw_9_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/mul"
  op: "Mul"
  input: "conv_pw_9_bn/FusedBatchNorm:2"
  input: "conv_pw_9_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/sub_1"
  op: "Sub"
  input: "conv_pw_9_bn/ReadVariableOp_2"
  input: "conv_pw_9_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/mul_1"
  op: "Mul"
  input: "conv_pw_9_bn/sub_1"
  input: "conv_pw_9_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  input: "conv_pw_9_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  input: "^conv_pw_9_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/sub_2"
  op: "Sub"
  input: "conv_pw_9_bn/ReadVariableOp_4"
  input: "conv_pw_9_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/mul_2"
  op: "Mul"
  input: "conv_pw_9_bn/sub_2"
  input: "conv_pw_9_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_9_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  input: "conv_pw_9_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  input: "^conv_pw_9_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_9_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_9/convolution"
  input: "conv_pw_9_bn/ReadVariableOp_6"
  input: "conv_pw_9_bn/ReadVariableOp_7"
  input: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_9_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_9_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4155912
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_10/random_uniform/max"
  input: "conv_dw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_10/random_uniform/RandomUniform"
  input: "conv_dw_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/random_uniform"
  op: "Add"
  input: "conv_dw_10/random_uniform/mul"
  input: "conv_dw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_10/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_10/depthwise_kernel"
}
node {
  name: "conv_dw_10/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  input: "conv_dw_10/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_10/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_9_relu/Relu6"
  input: "conv_dw_10/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_10_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/gamma"
}
node {
  name: "conv_dw_10_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/gamma"
  input: "conv_dw_10_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_10_bn/beta"
    }
  }
}
node {
  name: "conv_dw_10_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/beta"
}
node {
  name: "conv_dw_10_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/beta"
  input: "conv_dw_10_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_10_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/moving_mean"
}
node {
  name: "conv_dw_10_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  input: "conv_dw_10_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_10_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/moving_variance"
}
node {
  name: "conv_dw_10_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  input: "conv_dw_10_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_10/depthwise"
  input: "conv_dw_10_bn/ReadVariableOp"
  input: "conv_dw_10_bn/ReadVariableOp_1"
  input: "conv_dw_10_bn/Const_4"
  input: "conv_dw_10_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape"
  input: "conv_dw_10_bn/strided_slice/stack"
  input: "conv_dw_10_bn/strided_slice/stack_1"
  input: "conv_dw_10_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape_1"
  input: "conv_dw_10_bn/strided_slice_1/stack"
  input: "conv_dw_10_bn/strided_slice_1/stack_1"
  input: "conv_dw_10_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_10/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_10_bn/Shape_2"
  input: "conv_dw_10_bn/strided_slice_2/stack"
  input: "conv_dw_10_bn/strided_slice_2/stack_1"
  input: "conv_dw_10_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_10_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_10_bn/strided_slice"
  input: "conv_dw_10_bn/strided_slice_1"
  input: "conv_dw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_10_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/range"
  op: "Range"
  input: "conv_dw_10_bn/range/start"
  input: "conv_dw_10_bn/Rank"
  input: "conv_dw_10_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_10_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_10_bn/strided_slice"
  input: "conv_dw_10_bn/strided_slice_1"
  input: "conv_dw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_10_bn/Prod"
  op: "Prod"
  input: "conv_dw_10_bn/Prod/input"
  input: "conv_dw_10_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/Cast"
  op: "Cast"
  input: "conv_dw_10_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/sub"
  op: "Sub"
  input: "conv_dw_10_bn/Cast"
  input: "conv_dw_10_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_10_bn/Cast"
  input: "conv_dw_10_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/mul"
  op: "Mul"
  input: "conv_dw_10_bn/FusedBatchNorm:2"
  input: "conv_dw_10_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/sub_1"
  op: "Sub"
  input: "conv_dw_10_bn/ReadVariableOp_2"
  input: "conv_dw_10_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/mul_1"
  op: "Mul"
  input: "conv_dw_10_bn/sub_1"
  input: "conv_dw_10_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  input: "conv_dw_10_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  input: "^conv_dw_10_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/sub_2"
  op: "Sub"
  input: "conv_dw_10_bn/ReadVariableOp_4"
  input: "conv_dw_10_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/mul_2"
  op: "Mul"
  input: "conv_dw_10_bn/sub_2"
  input: "conv_dw_10_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_10_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  input: "conv_dw_10_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  input: "^conv_dw_10_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_10_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_10/depthwise"
  input: "conv_dw_10_bn/ReadVariableOp_6"
  input: "conv_dw_10_bn/ReadVariableOp_7"
  input: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_10_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_10_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7679481
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_10/random_uniform/max"
  input: "conv_pw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_10/random_uniform/RandomUniform"
  input: "conv_pw_10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/random_uniform"
  op: "Add"
  input: "conv_pw_10/random_uniform/mul"
  input: "conv_pw_10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_10/kernel"
    }
  }
}
node {
  name: "conv_pw_10/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_10/kernel"
}
node {
  name: "conv_pw_10/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_10/kernel"
  input: "conv_pw_10/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10/convolution"
  op: "Conv2D"
  input: "conv_dw_10_relu/Relu6"
  input: "conv_pw_10/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_10_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/gamma"
}
node {
  name: "conv_pw_10_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/gamma"
  input: "conv_pw_10_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_10_bn/beta"
    }
  }
}
node {
  name: "conv_pw_10_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/beta"
}
node {
  name: "conv_pw_10_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/beta"
  input: "conv_pw_10_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_10_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/moving_mean"
}
node {
  name: "conv_pw_10_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  input: "conv_pw_10_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_10_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/moving_variance"
}
node {
  name: "conv_pw_10_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  input: "conv_pw_10_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_10/convolution"
  input: "conv_pw_10_bn/ReadVariableOp"
  input: "conv_pw_10_bn/ReadVariableOp_1"
  input: "conv_pw_10_bn/Const_4"
  input: "conv_pw_10_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape"
  input: "conv_pw_10_bn/strided_slice/stack"
  input: "conv_pw_10_bn/strided_slice/stack_1"
  input: "conv_pw_10_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape_1"
  input: "conv_pw_10_bn/strided_slice_1/stack"
  input: "conv_pw_10_bn/strided_slice_1/stack_1"
  input: "conv_pw_10_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_10_bn/Shape_2"
  input: "conv_pw_10_bn/strided_slice_2/stack"
  input: "conv_pw_10_bn/strided_slice_2/stack_1"
  input: "conv_pw_10_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_10_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_10_bn/strided_slice"
  input: "conv_pw_10_bn/strided_slice_1"
  input: "conv_pw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_10_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/range"
  op: "Range"
  input: "conv_pw_10_bn/range/start"
  input: "conv_pw_10_bn/Rank"
  input: "conv_pw_10_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_10_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_10_bn/strided_slice"
  input: "conv_pw_10_bn/strided_slice_1"
  input: "conv_pw_10_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_10_bn/Prod"
  op: "Prod"
  input: "conv_pw_10_bn/Prod/input"
  input: "conv_pw_10_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/Cast"
  op: "Cast"
  input: "conv_pw_10_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/sub"
  op: "Sub"
  input: "conv_pw_10_bn/Cast"
  input: "conv_pw_10_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_10_bn/Cast"
  input: "conv_pw_10_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/mul"
  op: "Mul"
  input: "conv_pw_10_bn/FusedBatchNorm:2"
  input: "conv_pw_10_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/sub_1"
  op: "Sub"
  input: "conv_pw_10_bn/ReadVariableOp_2"
  input: "conv_pw_10_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/mul_1"
  op: "Mul"
  input: "conv_pw_10_bn/sub_1"
  input: "conv_pw_10_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  input: "conv_pw_10_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  input: "^conv_pw_10_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/sub_2"
  op: "Sub"
  input: "conv_pw_10_bn/ReadVariableOp_4"
  input: "conv_pw_10_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/mul_2"
  op: "Mul"
  input: "conv_pw_10_bn/sub_2"
  input: "conv_pw_10_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_10_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  input: "conv_pw_10_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  input: "^conv_pw_10_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_10_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_10/convolution"
  input: "conv_pw_10_bn/ReadVariableOp_6"
  input: "conv_pw_10_bn/ReadVariableOp_7"
  input: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_10_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_10_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5160708
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_11/random_uniform/max"
  input: "conv_dw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_11/random_uniform/RandomUniform"
  input: "conv_dw_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/random_uniform"
  op: "Add"
  input: "conv_dw_11/random_uniform/mul"
  input: "conv_dw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_11/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_11/depthwise_kernel"
}
node {
  name: "conv_dw_11/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  input: "conv_dw_11/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_11/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_10_relu/Relu6"
  input: "conv_dw_11/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_11_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/gamma"
}
node {
  name: "conv_dw_11_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/gamma"
  input: "conv_dw_11_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_11_bn/beta"
    }
  }
}
node {
  name: "conv_dw_11_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/beta"
}
node {
  name: "conv_dw_11_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/beta"
  input: "conv_dw_11_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_11_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/moving_mean"
}
node {
  name: "conv_dw_11_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  input: "conv_dw_11_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_11_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/moving_variance"
}
node {
  name: "conv_dw_11_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  input: "conv_dw_11_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_11/depthwise"
  input: "conv_dw_11_bn/ReadVariableOp"
  input: "conv_dw_11_bn/ReadVariableOp_1"
  input: "conv_dw_11_bn/Const_4"
  input: "conv_dw_11_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape"
  input: "conv_dw_11_bn/strided_slice/stack"
  input: "conv_dw_11_bn/strided_slice/stack_1"
  input: "conv_dw_11_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape_1"
  input: "conv_dw_11_bn/strided_slice_1/stack"
  input: "conv_dw_11_bn/strided_slice_1/stack_1"
  input: "conv_dw_11_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_11/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_11_bn/Shape_2"
  input: "conv_dw_11_bn/strided_slice_2/stack"
  input: "conv_dw_11_bn/strided_slice_2/stack_1"
  input: "conv_dw_11_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_11_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_11_bn/strided_slice"
  input: "conv_dw_11_bn/strided_slice_1"
  input: "conv_dw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_11_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/range"
  op: "Range"
  input: "conv_dw_11_bn/range/start"
  input: "conv_dw_11_bn/Rank"
  input: "conv_dw_11_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_11_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_11_bn/strided_slice"
  input: "conv_dw_11_bn/strided_slice_1"
  input: "conv_dw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_11_bn/Prod"
  op: "Prod"
  input: "conv_dw_11_bn/Prod/input"
  input: "conv_dw_11_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/Cast"
  op: "Cast"
  input: "conv_dw_11_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/sub"
  op: "Sub"
  input: "conv_dw_11_bn/Cast"
  input: "conv_dw_11_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_11_bn/Cast"
  input: "conv_dw_11_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/mul"
  op: "Mul"
  input: "conv_dw_11_bn/FusedBatchNorm:2"
  input: "conv_dw_11_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/sub_1"
  op: "Sub"
  input: "conv_dw_11_bn/ReadVariableOp_2"
  input: "conv_dw_11_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/mul_1"
  op: "Mul"
  input: "conv_dw_11_bn/sub_1"
  input: "conv_dw_11_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  input: "conv_dw_11_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  input: "^conv_dw_11_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/sub_2"
  op: "Sub"
  input: "conv_dw_11_bn/ReadVariableOp_4"
  input: "conv_dw_11_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/mul_2"
  op: "Mul"
  input: "conv_dw_11_bn/sub_2"
  input: "conv_dw_11_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_11_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  input: "conv_dw_11_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  input: "^conv_dw_11_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_11_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_11/depthwise"
  input: "conv_dw_11_bn/ReadVariableOp_6"
  input: "conv_dw_11_bn/ReadVariableOp_7"
  input: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_11_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_11_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3660634
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_11/random_uniform/max"
  input: "conv_pw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_11/random_uniform/RandomUniform"
  input: "conv_pw_11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/random_uniform"
  op: "Add"
  input: "conv_pw_11/random_uniform/mul"
  input: "conv_pw_11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_11/kernel"
    }
  }
}
node {
  name: "conv_pw_11/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_11/kernel"
}
node {
  name: "conv_pw_11/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_11/kernel"
  input: "conv_pw_11/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11/convolution"
  op: "Conv2D"
  input: "conv_dw_11_relu/Relu6"
  input: "conv_pw_11/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_11_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/gamma"
}
node {
  name: "conv_pw_11_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/gamma"
  input: "conv_pw_11_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_11_bn/beta"
    }
  }
}
node {
  name: "conv_pw_11_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/beta"
}
node {
  name: "conv_pw_11_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/beta"
  input: "conv_pw_11_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_11_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/moving_mean"
}
node {
  name: "conv_pw_11_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  input: "conv_pw_11_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_11_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/moving_variance"
}
node {
  name: "conv_pw_11_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  input: "conv_pw_11_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_11/convolution"
  input: "conv_pw_11_bn/ReadVariableOp"
  input: "conv_pw_11_bn/ReadVariableOp_1"
  input: "conv_pw_11_bn/Const_4"
  input: "conv_pw_11_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape"
  input: "conv_pw_11_bn/strided_slice/stack"
  input: "conv_pw_11_bn/strided_slice/stack_1"
  input: "conv_pw_11_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape_1"
  input: "conv_pw_11_bn/strided_slice_1/stack"
  input: "conv_pw_11_bn/strided_slice_1/stack_1"
  input: "conv_pw_11_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_11_bn/Shape_2"
  input: "conv_pw_11_bn/strided_slice_2/stack"
  input: "conv_pw_11_bn/strided_slice_2/stack_1"
  input: "conv_pw_11_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_11_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_11_bn/strided_slice"
  input: "conv_pw_11_bn/strided_slice_1"
  input: "conv_pw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_11_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/range"
  op: "Range"
  input: "conv_pw_11_bn/range/start"
  input: "conv_pw_11_bn/Rank"
  input: "conv_pw_11_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_11_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_11_bn/strided_slice"
  input: "conv_pw_11_bn/strided_slice_1"
  input: "conv_pw_11_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_11_bn/Prod"
  op: "Prod"
  input: "conv_pw_11_bn/Prod/input"
  input: "conv_pw_11_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/Cast"
  op: "Cast"
  input: "conv_pw_11_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/sub"
  op: "Sub"
  input: "conv_pw_11_bn/Cast"
  input: "conv_pw_11_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_11_bn/Cast"
  input: "conv_pw_11_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/mul"
  op: "Mul"
  input: "conv_pw_11_bn/FusedBatchNorm:2"
  input: "conv_pw_11_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/sub_1"
  op: "Sub"
  input: "conv_pw_11_bn/ReadVariableOp_2"
  input: "conv_pw_11_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/mul_1"
  op: "Mul"
  input: "conv_pw_11_bn/sub_1"
  input: "conv_pw_11_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  input: "conv_pw_11_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  input: "^conv_pw_11_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/sub_2"
  op: "Sub"
  input: "conv_pw_11_bn/ReadVariableOp_4"
  input: "conv_pw_11_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/mul_2"
  op: "Mul"
  input: "conv_pw_11_bn/sub_2"
  input: "conv_pw_11_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_11_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  input: "conv_pw_11_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  input: "^conv_pw_11_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_11_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_11/convolution"
  input: "conv_pw_11_bn/ReadVariableOp_6"
  input: "conv_pw_11_bn/ReadVariableOp_7"
  input: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_11_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_11_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_12/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_12/Pad"
  op: "Pad"
  input: "conv_pw_11_relu/Relu6"
  input: "conv_pad_12/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7514996
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_12/random_uniform/max"
  input: "conv_dw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_12/random_uniform/RandomUniform"
  input: "conv_dw_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/random_uniform"
  op: "Add"
  input: "conv_dw_12/random_uniform/mul"
  input: "conv_dw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_12/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_12/depthwise_kernel"
}
node {
  name: "conv_dw_12/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  input: "conv_dw_12/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_12/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_12/Pad"
  input: "conv_dw_12/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_12_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/gamma"
}
node {
  name: "conv_dw_12_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/gamma"
  input: "conv_dw_12_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_12_bn/beta"
    }
  }
}
node {
  name: "conv_dw_12_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/beta"
}
node {
  name: "conv_dw_12_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/beta"
  input: "conv_dw_12_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_12_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/moving_mean"
}
node {
  name: "conv_dw_12_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  input: "conv_dw_12_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_12_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/moving_variance"
}
node {
  name: "conv_dw_12_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  input: "conv_dw_12_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_12/depthwise"
  input: "conv_dw_12_bn/ReadVariableOp"
  input: "conv_dw_12_bn/ReadVariableOp_1"
  input: "conv_dw_12_bn/Const_4"
  input: "conv_dw_12_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape"
  input: "conv_dw_12_bn/strided_slice/stack"
  input: "conv_dw_12_bn/strided_slice/stack_1"
  input: "conv_dw_12_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape_1"
  input: "conv_dw_12_bn/strided_slice_1/stack"
  input: "conv_dw_12_bn/strided_slice_1/stack_1"
  input: "conv_dw_12_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_12/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_12_bn/Shape_2"
  input: "conv_dw_12_bn/strided_slice_2/stack"
  input: "conv_dw_12_bn/strided_slice_2/stack_1"
  input: "conv_dw_12_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_12_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_12_bn/strided_slice"
  input: "conv_dw_12_bn/strided_slice_1"
  input: "conv_dw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_12_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/range"
  op: "Range"
  input: "conv_dw_12_bn/range/start"
  input: "conv_dw_12_bn/Rank"
  input: "conv_dw_12_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_12_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_12_bn/strided_slice"
  input: "conv_dw_12_bn/strided_slice_1"
  input: "conv_dw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_12_bn/Prod"
  op: "Prod"
  input: "conv_dw_12_bn/Prod/input"
  input: "conv_dw_12_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/Cast"
  op: "Cast"
  input: "conv_dw_12_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/sub"
  op: "Sub"
  input: "conv_dw_12_bn/Cast"
  input: "conv_dw_12_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_12_bn/Cast"
  input: "conv_dw_12_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/mul"
  op: "Mul"
  input: "conv_dw_12_bn/FusedBatchNorm:2"
  input: "conv_dw_12_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/sub_1"
  op: "Sub"
  input: "conv_dw_12_bn/ReadVariableOp_2"
  input: "conv_dw_12_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/mul_1"
  op: "Mul"
  input: "conv_dw_12_bn/sub_1"
  input: "conv_dw_12_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  input: "conv_dw_12_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  input: "^conv_dw_12_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/sub_2"
  op: "Sub"
  input: "conv_dw_12_bn/ReadVariableOp_4"
  input: "conv_dw_12_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/mul_2"
  op: "Mul"
  input: "conv_dw_12_bn/sub_2"
  input: "conv_dw_12_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_12_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  input: "conv_dw_12_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  input: "^conv_dw_12_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_12_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_12/depthwise"
  input: "conv_dw_12_bn/ReadVariableOp_6"
  input: "conv_dw_12_bn/ReadVariableOp_7"
  input: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_12_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_12_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3593922
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_12/random_uniform/max"
  input: "conv_pw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_12/random_uniform/RandomUniform"
  input: "conv_pw_12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/random_uniform"
  op: "Add"
  input: "conv_pw_12/random_uniform/mul"
  input: "conv_pw_12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_12/kernel"
    }
  }
}
node {
  name: "conv_pw_12/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_12/kernel"
}
node {
  name: "conv_pw_12/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_12/kernel"
  input: "conv_pw_12/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12/convolution"
  op: "Conv2D"
  input: "conv_dw_12_relu/Relu6"
  input: "conv_pw_12/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_12_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/gamma"
}
node {
  name: "conv_pw_12_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/gamma"
  input: "conv_pw_12_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_12_bn/beta"
    }
  }
}
node {
  name: "conv_pw_12_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/beta"
}
node {
  name: "conv_pw_12_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/beta"
  input: "conv_pw_12_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_12_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/moving_mean"
}
node {
  name: "conv_pw_12_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  input: "conv_pw_12_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_12_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/moving_variance"
}
node {
  name: "conv_pw_12_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  input: "conv_pw_12_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_12/convolution"
  input: "conv_pw_12_bn/ReadVariableOp"
  input: "conv_pw_12_bn/ReadVariableOp_1"
  input: "conv_pw_12_bn/Const_4"
  input: "conv_pw_12_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape"
  input: "conv_pw_12_bn/strided_slice/stack"
  input: "conv_pw_12_bn/strided_slice/stack_1"
  input: "conv_pw_12_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape_1"
  input: "conv_pw_12_bn/strided_slice_1/stack"
  input: "conv_pw_12_bn/strided_slice_1/stack_1"
  input: "conv_pw_12_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_12_bn/Shape_2"
  input: "conv_pw_12_bn/strided_slice_2/stack"
  input: "conv_pw_12_bn/strided_slice_2/stack_1"
  input: "conv_pw_12_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_12_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_12_bn/strided_slice"
  input: "conv_pw_12_bn/strided_slice_1"
  input: "conv_pw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_12_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/range"
  op: "Range"
  input: "conv_pw_12_bn/range/start"
  input: "conv_pw_12_bn/Rank"
  input: "conv_pw_12_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_12_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_12_bn/strided_slice"
  input: "conv_pw_12_bn/strided_slice_1"
  input: "conv_pw_12_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_12_bn/Prod"
  op: "Prod"
  input: "conv_pw_12_bn/Prod/input"
  input: "conv_pw_12_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/Cast"
  op: "Cast"
  input: "conv_pw_12_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/sub"
  op: "Sub"
  input: "conv_pw_12_bn/Cast"
  input: "conv_pw_12_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_12_bn/Cast"
  input: "conv_pw_12_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/mul"
  op: "Mul"
  input: "conv_pw_12_bn/FusedBatchNorm:2"
  input: "conv_pw_12_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/sub_1"
  op: "Sub"
  input: "conv_pw_12_bn/ReadVariableOp_2"
  input: "conv_pw_12_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/mul_1"
  op: "Mul"
  input: "conv_pw_12_bn/sub_1"
  input: "conv_pw_12_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  input: "conv_pw_12_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  input: "^conv_pw_12_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/sub_2"
  op: "Sub"
  input: "conv_pw_12_bn/ReadVariableOp_4"
  input: "conv_pw_12_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/mul_2"
  op: "Mul"
  input: "conv_pw_12_bn/sub_2"
  input: "conv_pw_12_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_12_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  input: "conv_pw_12_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  input: "^conv_pw_12_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_12_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_12/convolution"
  input: "conv_pw_12_bn/ReadVariableOp_6"
  input: "conv_pw_12_bn/ReadVariableOp_7"
  input: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_12_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_12_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 633371
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_13/random_uniform/max"
  input: "conv_dw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_13/random_uniform/RandomUniform"
  input: "conv_dw_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/random_uniform"
  op: "Add"
  input: "conv_dw_13/random_uniform/mul"
  input: "conv_dw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_13/depthwise_kernel"
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13/depthwise_kernel"
}
node {
  name: "conv_dw_13/depthwise_kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  input: "conv_dw_13/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/depthwise_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/depthwise/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_13/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_12_relu/Relu6"
  input: "conv_dw_13/depthwise/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_13_bn/gamma"
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/gamma"
}
node {
  name: "conv_dw_13_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/gamma"
  input: "conv_dw_13_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_13_bn/beta"
    }
  }
}
node {
  name: "conv_dw_13_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/beta"
}
node {
  name: "conv_dw_13_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/beta"
  input: "conv_dw_13_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_13_bn/moving_mean"
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/moving_mean"
}
node {
  name: "conv_dw_13_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  input: "conv_dw_13_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_dw_13_bn/moving_variance"
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/moving_variance"
}
node {
  name: "conv_dw_13_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  input: "conv_dw_13_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_13/depthwise"
  input: "conv_dw_13_bn/ReadVariableOp"
  input: "conv_dw_13_bn/ReadVariableOp_1"
  input: "conv_dw_13_bn/Const_4"
  input: "conv_dw_13_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape"
  input: "conv_dw_13_bn/strided_slice/stack"
  input: "conv_dw_13_bn/strided_slice/stack_1"
  input: "conv_dw_13_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape_1"
  input: "conv_dw_13_bn/strided_slice_1/stack"
  input: "conv_dw_13_bn/strided_slice_1/stack_1"
  input: "conv_dw_13_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_13/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_13_bn/Shape_2"
  input: "conv_dw_13_bn/strided_slice_2/stack"
  input: "conv_dw_13_bn/strided_slice_2/stack_1"
  input: "conv_dw_13_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_13_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_13_bn/strided_slice"
  input: "conv_dw_13_bn/strided_slice_1"
  input: "conv_dw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_13_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/range"
  op: "Range"
  input: "conv_dw_13_bn/range/start"
  input: "conv_dw_13_bn/Rank"
  input: "conv_dw_13_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_13_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_13_bn/strided_slice"
  input: "conv_dw_13_bn/strided_slice_1"
  input: "conv_dw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_13_bn/Prod"
  op: "Prod"
  input: "conv_dw_13_bn/Prod/input"
  input: "conv_dw_13_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/Cast"
  op: "Cast"
  input: "conv_dw_13_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/sub"
  op: "Sub"
  input: "conv_dw_13_bn/Cast"
  input: "conv_dw_13_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_13_bn/Cast"
  input: "conv_dw_13_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/mul"
  op: "Mul"
  input: "conv_dw_13_bn/FusedBatchNorm:2"
  input: "conv_dw_13_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/sub_1"
  op: "Sub"
  input: "conv_dw_13_bn/ReadVariableOp_2"
  input: "conv_dw_13_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/mul_1"
  op: "Mul"
  input: "conv_dw_13_bn/sub_1"
  input: "conv_dw_13_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  input: "conv_dw_13_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  input: "^conv_dw_13_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/sub_2"
  op: "Sub"
  input: "conv_dw_13_bn/ReadVariableOp_4"
  input: "conv_dw_13_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/mul_2"
  op: "Mul"
  input: "conv_dw_13_bn/sub_2"
  input: "conv_dw_13_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_13_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  input: "conv_dw_13_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  input: "^conv_dw_13_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_13_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_dw_13/depthwise"
  input: "conv_dw_13_bn/ReadVariableOp_6"
  input: "conv_dw_13_bn/ReadVariableOp_7"
  input: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_13_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_13_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4430287
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_13/random_uniform/max"
  input: "conv_pw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_13/random_uniform/RandomUniform"
  input: "conv_pw_13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/random_uniform"
  op: "Add"
  input: "conv_pw_13/random_uniform/mul"
  input: "conv_pw_13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_13/kernel"
    }
  }
}
node {
  name: "conv_pw_13/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_13/kernel"
}
node {
  name: "conv_pw_13/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_13/kernel"
  input: "conv_pw_13/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13/convolution"
  op: "Conv2D"
  input: "conv_dw_13_relu/Relu6"
  input: "conv_pw_13/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_13_bn/gamma"
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/gamma"
}
node {
  name: "conv_pw_13_bn/gamma/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/gamma"
  input: "conv_pw_13_bn/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_13_bn/beta"
    }
  }
}
node {
  name: "conv_pw_13_bn/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/beta"
}
node {
  name: "conv_pw_13_bn/beta/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/beta"
  input: "conv_pw_13_bn/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_13_bn/moving_mean"
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/moving_mean"
}
node {
  name: "conv_pw_13_bn/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  input: "conv_pw_13_bn/Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_pw_13_bn/moving_variance"
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/moving_variance"
}
node {
  name: "conv_pw_13_bn/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  input: "conv_pw_13_bn/Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_13/convolution"
  input: "conv_pw_13_bn/ReadVariableOp"
  input: "conv_pw_13_bn/ReadVariableOp_1"
  input: "conv_pw_13_bn/Const_4"
  input: "conv_pw_13_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape"
  input: "conv_pw_13_bn/strided_slice/stack"
  input: "conv_pw_13_bn/strided_slice/stack_1"
  input: "conv_pw_13_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape_1"
  input: "conv_pw_13_bn/strided_slice_1/stack"
  input: "conv_pw_13_bn/strided_slice_1/stack_1"
  input: "conv_pw_13_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_13_bn/Shape_2"
  input: "conv_pw_13_bn/strided_slice_2/stack"
  input: "conv_pw_13_bn/strided_slice_2/stack_1"
  input: "conv_pw_13_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_13_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_13_bn/strided_slice"
  input: "conv_pw_13_bn/strided_slice_1"
  input: "conv_pw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_13_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/range"
  op: "Range"
  input: "conv_pw_13_bn/range/start"
  input: "conv_pw_13_bn/Rank"
  input: "conv_pw_13_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_13_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_13_bn/strided_slice"
  input: "conv_pw_13_bn/strided_slice_1"
  input: "conv_pw_13_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_13_bn/Prod"
  op: "Prod"
  input: "conv_pw_13_bn/Prod/input"
  input: "conv_pw_13_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/Cast"
  op: "Cast"
  input: "conv_pw_13_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/sub"
  op: "Sub"
  input: "conv_pw_13_bn/Cast"
  input: "conv_pw_13_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_13_bn/Cast"
  input: "conv_pw_13_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/mul"
  op: "Mul"
  input: "conv_pw_13_bn/FusedBatchNorm:2"
  input: "conv_pw_13_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_6"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/sub_1"
  op: "Sub"
  input: "conv_pw_13_bn/ReadVariableOp_2"
  input: "conv_pw_13_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/mul_1"
  op: "Mul"
  input: "conv_pw_13_bn/sub_1"
  input: "conv_pw_13_bn/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  input: "conv_pw_13_bn/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  input: "^conv_pw_13_bn/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/Const_7"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/sub_2"
  op: "Sub"
  input: "conv_pw_13_bn/ReadVariableOp_4"
  input: "conv_pw_13_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/mul_2"
  op: "Mul"
  input: "conv_pw_13_bn/sub_2"
  input: "conv_pw_13_bn/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_13_bn/AssignSubVariableOp_1"
  op: "AssignSubVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  input: "conv_pw_13_bn/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  input: "^conv_pw_13_bn/AssignSubVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_13_bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv_pw_13/convolution"
  input: "conv_pw_13_bn/ReadVariableOp_6"
  input: "conv_pw_13_bn/ReadVariableOp_7"
  input: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_13_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_13_bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean"
  op: "Mean"
  input: "conv_pw_13_relu/Relu6"
  input: "global_average_pooling2d_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "reshape_1/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape_1/strided_slice"
  op: "StridedSlice"
  input: "reshape_1/Shape"
  input: "reshape_1/strided_slice/stack"
  input: "reshape_1/strided_slice/stack_1"
  input: "reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reshape_1/Reshape/shape/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "reshape_1/Reshape/shape"
  op: "Pack"
  input: "reshape_1/strided_slice"
  input: "reshape_1/Reshape/shape/1"
  input: "reshape_1/Reshape/shape/2"
  input: "reshape_1/Reshape/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "reshape_1/Reshape"
  op: "Reshape"
  input: "global_average_pooling2d_1/Mean"
  input: "reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/Identity"
  op: "Identity"
  input: "reshape_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\0007\000\000\000"
      }
    }
  }
}
node {
  name: "conv_cat/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10286889970302582
      }
    }
  }
}
node {
  name: "conv_cat/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10286889970302582
      }
    }
  }
}
node {
  name: "conv_cat/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_cat/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9302720
    }
  }
}
node {
  name: "conv_cat/random_uniform/sub"
  op: "Sub"
  input: "conv_cat/random_uniform/max"
  input: "conv_cat/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/random_uniform/mul"
  op: "Mul"
  input: "conv_cat/random_uniform/RandomUniform"
  input: "conv_cat/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/random_uniform"
  op: "Add"
  input: "conv_cat/random_uniform/mul"
  input: "conv_cat/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_cat/kernel"
    }
  }
}
node {
  name: "conv_cat/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_cat/kernel"
}
node {
  name: "conv_cat/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_cat/kernel"
  input: "conv_cat/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_cat/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_cat/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_cat/bias"
    }
  }
}
node {
  name: "conv_cat/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_cat/bias"
}
node {
  name: "conv_cat/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_cat/bias"
  input: "conv_cat/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_cat/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_cat/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/convolution"
  op: "Conv2D"
  input: "dropout/Identity"
  input: "conv_cat/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_cat/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_cat/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_cat/BiasAdd"
  op: "BiasAdd"
  input: "conv_cat/convolution"
  input: "conv_cat/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv_reg/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_reg/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10814761370420456
      }
    }
  }
}
node {
  name: "conv_reg/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10814761370420456
      }
    }
  }
}
node {
  name: "conv_reg/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_reg/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 742650
    }
  }
}
node {
  name: "conv_reg/random_uniform/sub"
  op: "Sub"
  input: "conv_reg/random_uniform/max"
  input: "conv_reg/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/random_uniform/mul"
  op: "Mul"
  input: "conv_reg/random_uniform/RandomUniform"
  input: "conv_reg/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/random_uniform"
  op: "Add"
  input: "conv_reg/random_uniform/mul"
  input: "conv_reg/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_reg/kernel"
    }
  }
}
node {
  name: "conv_reg/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_reg/kernel"
}
node {
  name: "conv_reg/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_reg/kernel"
  input: "conv_reg/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_reg/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_reg/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_reg/bias"
    }
  }
}
node {
  name: "conv_reg/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_reg/bias"
}
node {
  name: "conv_reg/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_reg/bias"
  input: "conv_reg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_reg/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_reg/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/convolution"
  op: "Conv2D"
  input: "dropout/Identity"
  input: "conv_reg/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_reg/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_reg/BiasAdd"
  op: "BiasAdd"
  input: "conv_reg/convolution"
  input: "conv_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv_bin/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000h\001\000\000"
      }
    }
  }
}
node {
  name: "conv_bin/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08295018970966339
      }
    }
  }
}
node {
  name: "conv_bin/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08295018970966339
      }
    }
  }
}
node {
  name: "conv_bin/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_bin/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 554485
    }
  }
}
node {
  name: "conv_bin/random_uniform/sub"
  op: "Sub"
  input: "conv_bin/random_uniform/max"
  input: "conv_bin/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/random_uniform/mul"
  op: "Mul"
  input: "conv_bin/random_uniform/RandomUniform"
  input: "conv_bin/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/random_uniform"
  op: "Add"
  input: "conv_bin/random_uniform/mul"
  input: "conv_bin/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bin/kernel"
    }
  }
}
node {
  name: "conv_bin/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bin/kernel"
}
node {
  name: "conv_bin/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv_bin/kernel"
  input: "conv_bin/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bin/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 360
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_bin/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv_bin/bias"
    }
  }
}
node {
  name: "conv_bin/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_bin/bias"
}
node {
  name: "conv_bin/bias/Assign"
  op: "AssignVariableOp"
  input: "conv_bin/bias"
  input: "conv_bin/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bin/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/convolution/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bin/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/convolution"
  op: "Conv2D"
  input: "dropout/Identity"
  input: "conv_bin/convolution/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_bin/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv_bin/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_bin/BiasAdd"
  op: "BiasAdd"
  input: "conv_bin/convolution"
  input: "conv_bin/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "act_softmax/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "act_softmax/Max"
  op: "Max"
  input: "conv_cat/BiasAdd"
  input: "act_softmax/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "act_softmax/sub"
  op: "Sub"
  input: "conv_cat/BiasAdd"
  input: "act_softmax/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_softmax/Exp"
  op: "Exp"
  input: "act_softmax/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_softmax/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "act_softmax/Sum"
  op: "Sum"
  input: "act_softmax/Exp"
  input: "act_softmax/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "act_softmax/truediv"
  op: "RealDiv"
  input: "act_softmax/Exp"
  input: "act_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_linear/Identity"
  op: "Identity"
  input: "conv_reg/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_bin/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "act_bin/Max"
  op: "Max"
  input: "conv_bin/BiasAdd"
  input: "act_bin/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "act_bin/sub"
  op: "Sub"
  input: "conv_bin/BiasAdd"
  input: "act_bin/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_bin/Exp"
  op: "Exp"
  input: "act_bin/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "act_bin/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "act_bin/Sum"
  op: "Sum"
  input: "act_bin/Exp"
  input: "act_bin/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "act_bin/truediv"
  op: "RealDiv"
  input: "act_bin/Exp"
  input: "act_bin/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cat_out/Shape"
  op: "Shape"
  input: "act_softmax/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cat_out/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cat_out/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cat_out/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cat_out/strided_slice"
  op: "StridedSlice"
  input: "cat_out/Shape"
  input: "cat_out/strided_slice/stack"
  input: "cat_out/strided_slice/stack_1"
  input: "cat_out/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cat_out/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 55
      }
    }
  }
}
node {
  name: "cat_out/Reshape/shape"
  op: "Pack"
  input: "cat_out/strided_slice"
  input: "cat_out/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cat_out/Reshape"
  op: "Reshape"
  input: "act_softmax/truediv"
  input: "cat_out/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reg_out/Shape"
  op: "Shape"
  input: "act_linear/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "reg_out/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "reg_out/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reg_out/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reg_out/strided_slice"
  op: "StridedSlice"
  input: "reg_out/Shape"
  input: "reg_out/strided_slice/stack"
  input: "reg_out/strided_slice/stack_1"
  input: "reg_out/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "reg_out/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "reg_out/Reshape/shape"
  op: "Pack"
  input: "reg_out/strided_slice"
  input: "reg_out/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "reg_out/Reshape"
  op: "Reshape"
  input: "act_linear/Identity"
  input: "reg_out/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bin_out/Shape"
  op: "Shape"
  input: "act_bin/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "bin_out/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "bin_out/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bin_out/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "bin_out/strided_slice"
  op: "StridedSlice"
  input: "bin_out/Shape"
  input: "bin_out/strided_slice/stack"
  input: "bin_out/strided_slice/stack_1"
  input: "bin_out/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "bin_out/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 360
      }
    }
  }
}
node {
  name: "bin_out/Reshape/shape"
  op: "Pack"
  input: "bin_out/strided_slice"
  input: "bin_out/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "bin_out/Reshape"
  op: "Reshape"
  input: "act_bin/truediv"
  input: "bin_out/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "conv1/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv1/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv1_bn/gamma"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "conv1_bn/beta"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "conv1_bn/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_mean"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "conv1_bn/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv1_bn/moving_variance"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/gamma"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/beta"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_mean"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/moving_variance"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "conv_pw_1/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "conv_pw_1/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/gamma"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/beta"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_mean"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/moving_variance"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/gamma"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/beta"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_mean"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/moving_variance"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "conv_pw_2/kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "conv_pw_2/kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/gamma"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/beta"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_mean"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/moving_variance"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/gamma"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/beta"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_mean"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/moving_variance"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "conv_pw_3/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "conv_pw_3/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/gamma"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/beta"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_mean"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/moving_variance"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/gamma"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/beta"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_mean"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/moving_variance"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "conv_pw_4/kernel"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "conv_pw_4/kernel"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/gamma"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/beta"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_mean"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/moving_variance"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/gamma"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/beta"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_mean"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/moving_variance"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "conv_pw_5/kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "conv_pw_5/kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/gamma"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/beta"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_mean"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/moving_variance"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/gamma"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/beta"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_mean"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/moving_variance"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "conv_pw_6/kernel"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "conv_pw_6/kernel"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/gamma"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/beta"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_mean"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/moving_variance"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/gamma"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/beta"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_mean"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/moving_variance"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "conv_pw_7/kernel"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "conv_pw_7/kernel"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/gamma"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/beta"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_mean"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/moving_variance"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/gamma"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/beta"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_mean"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/moving_variance"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv_pw_8/kernel"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "conv_pw_8/kernel"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/gamma"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/beta"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_mean"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/moving_variance"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/gamma"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/beta"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_mean"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/moving_variance"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "conv_pw_9/kernel"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "conv_pw_9/kernel"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/gamma"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/beta"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_mean"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/moving_variance"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/gamma"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/beta"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_mean"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/moving_variance"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "conv_pw_10/kernel"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "conv_pw_10/kernel"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/gamma"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/beta"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_mean"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/moving_variance"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/gamma"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/beta"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_mean"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/moving_variance"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "conv_pw_11/kernel"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "conv_pw_11/kernel"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/gamma"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/beta"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_mean"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/moving_variance"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/gamma"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/beta"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_mean"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/moving_variance"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "conv_pw_12/kernel"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "conv_pw_12/kernel"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/gamma"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/beta"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_mean"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/moving_variance"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/gamma"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/beta"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_mean"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/moving_variance"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "conv_pw_13/kernel"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "conv_pw_13/kernel"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/gamma"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/beta"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_mean"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/moving_variance"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "conv_cat/kernel"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "conv_cat/kernel"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "conv_cat/bias"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "conv_cat/bias"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "conv_reg/kernel"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "conv_reg/kernel"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "conv_reg/bias"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "conv_reg/bias"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "conv_bin/kernel"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "conv_bin/kernel"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "conv_bin/bias"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "conv_bin/bias"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/beta"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "conv_dw_9/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/beta"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/gamma"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/gamma"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/beta"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/beta"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/beta"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/beta"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/beta"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/beta"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "conv_dw_6_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "conv_pw_10/kernel"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/gamma"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/gamma"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "conv_pw_2/kernel"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/beta"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/beta"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/gamma"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "conv_pw_7/kernel"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/gamma"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "conv_dw_13_bn/gamma"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "conv_dw_8_bn/gamma"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "conv_dw_5/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "conv_dw_1_bn/gamma"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "conv_dw_11_bn/gamma"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "conv_pw_5/kernel"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/gamma"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "conv_dw_10_bn/gamma"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/gamma"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "conv_pw_7_bn/beta"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/gamma"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "conv_pw_9_bn/beta"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/gamma"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "conv_pw_3_bn/beta"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "conv_pw_2_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/beta"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "conv_pw_6/kernel"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/beta"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "conv_pw_11_bn/gamma"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "conv_pw_13/kernel"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "conv_dw_1/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "conv_reg/kernel"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "conv_dw_7/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "conv_dw_8/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/beta"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "conv_bin/kernel"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "conv_dw_3_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/beta"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/beta"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "conv_dw_2_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "conv_dw_2/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "conv_cat/bias"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "conv_dw_4/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "conv_dw_12/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "conv_pw_1/kernel"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "conv_pw_13_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "conv_pw_3/kernel"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "conv_dw_6/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "conv_pw_11/kernel"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/gamma"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/beta"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/beta"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "conv_pw_12_bn/gamma"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "conv_pw_4/kernel"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/beta"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/gamma"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "conv_bin/bias"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "conv_dw_4_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "conv_pw_5_bn/gamma"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "conv_pw_8/kernel"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "conv_dw_10/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "conv_dw_7_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/beta"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "conv_pw_9/kernel"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "conv_dw_9_bn/gamma"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "conv_dw_13/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "conv_dw_12_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/gamma"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "conv_pw_6_bn/beta"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "conv_cat/kernel"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "conv_pw_4_bn/gamma"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/gamma"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "conv_pw_8_bn/beta"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "conv_dw_11/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/gamma"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "conv_pw_1_bn/beta"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/moving_mean"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "conv_dw_3/depthwise_kernel"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/gamma"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "conv_pw_10_bn/beta"
}
node {
  name: "VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "conv_pw_12/kernel"
}
node {
  name: "VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "conv_dw_5_bn/moving_variance"
}
node {
  name: "VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "conv_reg/bias"
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv_bin/bias/Assign"
  input: "^conv_bin/kernel/Assign"
  input: "^conv_cat/bias/Assign"
  input: "^conv_cat/kernel/Assign"
  input: "^conv_dw_1/depthwise_kernel/Assign"
  input: "^conv_dw_10/depthwise_kernel/Assign"
  input: "^conv_dw_10_bn/beta/Assign"
  input: "^conv_dw_10_bn/gamma/Assign"
  input: "^conv_dw_10_bn/moving_mean/Assign"
  input: "^conv_dw_10_bn/moving_variance/Assign"
  input: "^conv_dw_11/depthwise_kernel/Assign"
  input: "^conv_dw_11_bn/beta/Assign"
  input: "^conv_dw_11_bn/gamma/Assign"
  input: "^conv_dw_11_bn/moving_mean/Assign"
  input: "^conv_dw_11_bn/moving_variance/Assign"
  input: "^conv_dw_12/depthwise_kernel/Assign"
  input: "^conv_dw_12_bn/beta/Assign"
  input: "^conv_dw_12_bn/gamma/Assign"
  input: "^conv_dw_12_bn/moving_mean/Assign"
  input: "^conv_dw_12_bn/moving_variance/Assign"
  input: "^conv_dw_13/depthwise_kernel/Assign"
  input: "^conv_dw_13_bn/beta/Assign"
  input: "^conv_dw_13_bn/gamma/Assign"
  input: "^conv_dw_13_bn/moving_mean/Assign"
  input: "^conv_dw_13_bn/moving_variance/Assign"
  input: "^conv_dw_1_bn/beta/Assign"
  input: "^conv_dw_1_bn/gamma/Assign"
  input: "^conv_dw_1_bn/moving_mean/Assign"
  input: "^conv_dw_1_bn/moving_variance/Assign"
  input: "^conv_dw_2/depthwise_kernel/Assign"
  input: "^conv_dw_2_bn/beta/Assign"
  input: "^conv_dw_2_bn/gamma/Assign"
  input: "^conv_dw_2_bn/moving_mean/Assign"
  input: "^conv_dw_2_bn/moving_variance/Assign"
  input: "^conv_dw_3/depthwise_kernel/Assign"
  input: "^conv_dw_3_bn/beta/Assign"
  input: "^conv_dw_3_bn/gamma/Assign"
  input: "^conv_dw_3_bn/moving_mean/Assign"
  input: "^conv_dw_3_bn/moving_variance/Assign"
  input: "^conv_dw_4/depthwise_kernel/Assign"
  input: "^conv_dw_4_bn/beta/Assign"
  input: "^conv_dw_4_bn/gamma/Assign"
  input: "^conv_dw_4_bn/moving_mean/Assign"
  input: "^conv_dw_4_bn/moving_variance/Assign"
  input: "^conv_dw_5/depthwise_kernel/Assign"
  input: "^conv_dw_5_bn/beta/Assign"
  input: "^conv_dw_5_bn/gamma/Assign"
  input: "^conv_dw_5_bn/moving_mean/Assign"
  input: "^conv_dw_5_bn/moving_variance/Assign"
  input: "^conv_dw_6/depthwise_kernel/Assign"
  input: "^conv_dw_6_bn/beta/Assign"
  input: "^conv_dw_6_bn/gamma/Assign"
  input: "^conv_dw_6_bn/moving_mean/Assign"
  input: "^conv_dw_6_bn/moving_variance/Assign"
  input: "^conv_dw_7/depthwise_kernel/Assign"
  input: "^conv_dw_7_bn/beta/Assign"
  input: "^conv_dw_7_bn/gamma/Assign"
  input: "^conv_dw_7_bn/moving_mean/Assign"
  input: "^conv_dw_7_bn/moving_variance/Assign"
  input: "^conv_dw_8/depthwise_kernel/Assign"
  input: "^conv_dw_8_bn/beta/Assign"
  input: "^conv_dw_8_bn/gamma/Assign"
  input: "^conv_dw_8_bn/moving_mean/Assign"
  input: "^conv_dw_8_bn/moving_variance/Assign"
  input: "^conv_dw_9/depthwise_kernel/Assign"
  input: "^conv_dw_9_bn/beta/Assign"
  input: "^conv_dw_9_bn/gamma/Assign"
  input: "^conv_dw_9_bn/moving_mean/Assign"
  input: "^conv_dw_9_bn/moving_variance/Assign"
  input: "^conv_pw_1/kernel/Assign"
  input: "^conv_pw_10/kernel/Assign"
  input: "^conv_pw_10_bn/beta/Assign"
  input: "^conv_pw_10_bn/gamma/Assign"
  input: "^conv_pw_10_bn/moving_mean/Assign"
  input: "^conv_pw_10_bn/moving_variance/Assign"
  input: "^conv_pw_11/kernel/Assign"
  input: "^conv_pw_11_bn/beta/Assign"
  input: "^conv_pw_11_bn/gamma/Assign"
  input: "^conv_pw_11_bn/moving_mean/Assign"
  input: "^conv_pw_11_bn/moving_variance/Assign"
  input: "^conv_pw_12/kernel/Assign"
  input: "^conv_pw_12_bn/beta/Assign"
  input: "^conv_pw_12_bn/gamma/Assign"
  input: "^conv_pw_12_bn/moving_mean/Assign"
  input: "^conv_pw_12_bn/moving_variance/Assign"
  input: "^conv_pw_13/kernel/Assign"
  input: "^conv_pw_13_bn/beta/Assign"
  input: "^conv_pw_13_bn/gamma/Assign"
  input: "^conv_pw_13_bn/moving_mean/Assign"
  input: "^conv_pw_13_bn/moving_variance/Assign"
  input: "^conv_pw_1_bn/beta/Assign"
  input: "^conv_pw_1_bn/gamma/Assign"
  input: "^conv_pw_1_bn/moving_mean/Assign"
  input: "^conv_pw_1_bn/moving_variance/Assign"
  input: "^conv_pw_2/kernel/Assign"
  input: "^conv_pw_2_bn/beta/Assign"
  input: "^conv_pw_2_bn/gamma/Assign"
  input: "^conv_pw_2_bn/moving_mean/Assign"
  input: "^conv_pw_2_bn/moving_variance/Assign"
  input: "^conv_pw_3/kernel/Assign"
  input: "^conv_pw_3_bn/beta/Assign"
  input: "^conv_pw_3_bn/gamma/Assign"
  input: "^conv_pw_3_bn/moving_mean/Assign"
  input: "^conv_pw_3_bn/moving_variance/Assign"
  input: "^conv_pw_4/kernel/Assign"
  input: "^conv_pw_4_bn/beta/Assign"
  input: "^conv_pw_4_bn/gamma/Assign"
  input: "^conv_pw_4_bn/moving_mean/Assign"
  input: "^conv_pw_4_bn/moving_variance/Assign"
  input: "^conv_pw_5/kernel/Assign"
  input: "^conv_pw_5_bn/beta/Assign"
  input: "^conv_pw_5_bn/gamma/Assign"
  input: "^conv_pw_5_bn/moving_mean/Assign"
  input: "^conv_pw_5_bn/moving_variance/Assign"
  input: "^conv_pw_6/kernel/Assign"
  input: "^conv_pw_6_bn/beta/Assign"
  input: "^conv_pw_6_bn/gamma/Assign"
  input: "^conv_pw_6_bn/moving_mean/Assign"
  input: "^conv_pw_6_bn/moving_variance/Assign"
  input: "^conv_pw_7/kernel/Assign"
  input: "^conv_pw_7_bn/beta/Assign"
  input: "^conv_pw_7_bn/gamma/Assign"
  input: "^conv_pw_7_bn/moving_mean/Assign"
  input: "^conv_pw_7_bn/moving_variance/Assign"
  input: "^conv_pw_8/kernel/Assign"
  input: "^conv_pw_8_bn/beta/Assign"
  input: "^conv_pw_8_bn/gamma/Assign"
  input: "^conv_pw_8_bn/moving_mean/Assign"
  input: "^conv_pw_8_bn/moving_variance/Assign"
  input: "^conv_pw_9/kernel/Assign"
  input: "^conv_pw_9_bn/beta/Assign"
  input: "^conv_pw_9_bn/gamma/Assign"
  input: "^conv_pw_9_bn/moving_mean/Assign"
  input: "^conv_pw_9_bn/moving_variance/Assign"
  input: "^conv_reg/bias/Assign"
  input: "^conv_reg/kernel/Assign"
}
node {
  name: "Adam/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/iterations"
    }
  }
}
node {
  name: "Adam/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "Adam/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Adam/iterations/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003000000142492354
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/learning_rate"
    }
  }
}
node {
  name: "Adam/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/learning_rate"
}
node {
  name: "Adam/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "Adam/learning_rate"
  input: "Adam/learning_rate/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_1"
    }
  }
}
node {
  name: "Adam/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "Adam/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_1"
  input: "Adam/beta_1/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_2"
    }
  }
}
node {
  name: "Adam/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "Adam/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_2"
  input: "Adam/beta_2/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/decay"
    }
  }
}
node {
  name: "Adam/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "Adam/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam/decay"
  input: "Adam/decay/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cat_out_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "reg_out_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "bin_out_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cat_out_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "reg_out_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "bin_out_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_1"
    }
  }
}
node {
  name: "total_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "total_1/Assign"
  op: "AssignVariableOp"
  input: "total_1"
  input: "Const_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_1"
    }
  }
}
node {
  name: "count_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "count_1/Assign"
  op: "AssignVariableOp"
  input: "count_1"
  input: "Const_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_2"
    }
  }
}
node {
  name: "total_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "total_2/Assign"
  op: "AssignVariableOp"
  input: "total_2"
  input: "Const_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_2"
    }
  }
}
node {
  name: "count_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "count_2/Assign"
  op: "AssignVariableOp"
  input: "count_2"
  input: "Const_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_3"
    }
  }
}
node {
  name: "total_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_3"
}
node {
  name: "total_3/Assign"
  op: "AssignVariableOp"
  input: "total_3"
  input: "Const_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_3"
    }
  }
}
node {
  name: "count_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_3"
}
node {
  name: "count_3/Assign"
  op: "AssignVariableOp"
  input: "count_3"
  input: "Const_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_4"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_4"
    }
  }
}
node {
  name: "total_4/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_4"
}
node {
  name: "total_4/Assign"
  op: "AssignVariableOp"
  input: "total_4"
  input: "Const_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_4/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_4"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_4"
    }
  }
}
node {
  name: "count_4/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_4"
}
node {
  name: "count_4/Assign"
  op: "AssignVariableOp"
  input: "count_4"
  input: "Const_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_4/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_5"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_5"
    }
  }
}
node {
  name: "total_5/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_5"
}
node {
  name: "total_5/Assign"
  op: "AssignVariableOp"
  input: "total_5"
  input: "Const_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_5/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_5"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_5"
    }
  }
}
node {
  name: "count_5/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_5"
}
node {
  name: "count_5/Assign"
  op: "AssignVariableOp"
  input: "count_5"
  input: "Const_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_5/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ArgMax"
  op: "ArgMax"
  input: "cat_out_target"
  input: "metrics/cat_out_accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ArgMax_1"
  op: "ArgMax"
  input: "cat_out/Reshape"
  input: "metrics/cat_out_accuracy/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Equal"
  op: "Equal"
  input: "metrics/cat_out_accuracy/ArgMax"
  input: "metrics/cat_out_accuracy/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Cast"
  op: "Cast"
  input: "metrics/cat_out_accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Sum"
  op: "Sum"
  input: "metrics/cat_out_accuracy/Cast"
  input: "metrics/cat_out_accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/cat_out_accuracy/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Size"
  op: "Size"
  input: "metrics/cat_out_accuracy/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Cast_1"
  op: "Cast"
  input: "metrics/cat_out_accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/cat_out_accuracy/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/truediv"
  op: "RealDiv"
  input: "metrics/cat_out_accuracy/ReadVariableOp_2"
  input: "metrics/cat_out_accuracy/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/cat_out_accuracy/Identity"
  op: "Identity"
  input: "metrics/cat_out_accuracy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/sub"
  op: "Sub"
  input: "reg_out_target"
  input: "reg_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 180.0
      }
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/add"
  op: "Add"
  input: "metrics/reg_out_angle_mae/sub"
  input: "metrics/reg_out_angle_mae/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/FloorMod/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 360.0
      }
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/FloorMod"
  op: "FloorMod"
  input: "metrics/reg_out_angle_mae/add"
  input: "metrics/reg_out_angle_mae/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 180.0
      }
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/sub_1"
  op: "Sub"
  input: "metrics/reg_out_angle_mae/FloorMod"
  input: "metrics/reg_out_angle_mae/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Abs"
  op: "Abs"
  input: "metrics/reg_out_angle_mae/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Mean"
  op: "Mean"
  input: "metrics/reg_out_angle_mae/Abs"
  input: "metrics/reg_out_angle_mae/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Sum"
  op: "Sum"
  input: "metrics/reg_out_angle_mae/Mean"
  input: "metrics/reg_out_angle_mae/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_1"
  input: "metrics/reg_out_angle_mae/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Size"
  op: "Size"
  input: "metrics/reg_out_angle_mae/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Cast"
  op: "Cast"
  input: "metrics/reg_out_angle_mae/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_1"
  input: "metrics/reg_out_angle_mae/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/truediv"
  op: "RealDiv"
  input: "metrics/reg_out_angle_mae/ReadVariableOp_2"
  input: "metrics/reg_out_angle_mae/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/reg_out_angle_mae/Identity"
  op: "Identity"
  input: "metrics/reg_out_angle_mae/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ArgMax"
  op: "ArgMax"
  input: "bin_out_target"
  input: "metrics/bin_out_angle_bin_error/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/mul"
  op: "Mul"
  input: "metrics/bin_out_angle_bin_error/ArgMax"
  input: "metrics/bin_out_angle_bin_error/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ArgMax_1"
  op: "ArgMax"
  input: "bin_out/Reshape"
  input: "metrics/bin_out_angle_bin_error/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/mul_1"
  op: "Mul"
  input: "metrics/bin_out_angle_bin_error/ArgMax_1"
  input: "metrics/bin_out_angle_bin_error/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/sub"
  op: "Sub"
  input: "metrics/bin_out_angle_bin_error/mul"
  input: "metrics/bin_out_angle_bin_error/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 180
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/add"
  op: "Add"
  input: "metrics/bin_out_angle_bin_error/sub"
  input: "metrics/bin_out_angle_bin_error/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/FloorMod/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 360
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/FloorMod"
  op: "FloorMod"
  input: "metrics/bin_out_angle_bin_error/add"
  input: "metrics/bin_out_angle_bin_error/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 180
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/sub_1"
  op: "Sub"
  input: "metrics/bin_out_angle_bin_error/FloorMod"
  input: "metrics/bin_out_angle_bin_error/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Abs"
  op: "Abs"
  input: "metrics/bin_out_angle_bin_error/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Cast"
  op: "Cast"
  input: "metrics/bin_out_angle_bin_error/Abs"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Mean"
  op: "Mean"
  input: "metrics/bin_out_angle_bin_error/Cast"
  input: "metrics/bin_out_angle_bin_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Sum"
  op: "Sum"
  input: "metrics/bin_out_angle_bin_error/Mean"
  input: "metrics/bin_out_angle_bin_error/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_2"
  input: "metrics/bin_out_angle_bin_error/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Cast_1"
  op: "Cast"
  input: "metrics/bin_out_angle_bin_error/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_2"
  input: "metrics/bin_out_angle_bin_error/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/truediv"
  op: "RealDiv"
  input: "metrics/bin_out_angle_bin_error/ReadVariableOp_2"
  input: "metrics/bin_out_angle_bin_error/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/bin_out_angle_bin_error/Identity"
  op: "Identity"
  input: "metrics/bin_out_angle_bin_error/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Sum"
  op: "Sum"
  input: "cat_out/Reshape"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/truediv"
  op: "RealDiv"
  input: "cat_out/Reshape"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/sub"
  op: "Sub"
  input: "loss/cat_out_loss/categorical_crossentropy/sub/x"
  input: "loss/cat_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss/cat_out_loss/categorical_crossentropy/truediv"
  input: "loss/cat_out_loss/categorical_crossentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/clip_by_value"
  op: "Maximum"
  input: "loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  input: "loss/cat_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Log"
  op: "Log"
  input: "loss/cat_out_loss/categorical_crossentropy/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/mul"
  op: "Mul"
  input: "cat_out_target"
  input: "loss/cat_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Sum_1"
  op: "Sum"
  input: "loss/cat_out_loss/categorical_crossentropy/mul"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/Neg"
  op: "Neg"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "cat_out_sample_weights"
  input: "loss/cat_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/Sum"
  op: "Sum"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_3"
  input: "loss/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_3"
  input: "^loss/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Cast"
  op: "Cast"
  input: "loss/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_3"
  input: "loss/Cast"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_3"
  input: "^loss/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_3"
  input: "^loss/AssignAddVariableOp"
  input: "^loss/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_3"
  input: "^loss/AssignAddVariableOp"
  input: "^loss/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv"
  op: "RealDiv"
  input: "loss/ReadVariableOp_2"
  input: "loss/truediv/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Identity"
  op: "Identity"
  input: "loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/sub"
  op: "Sub"
  input: "reg_out_target"
  input: "reg_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 180.0
      }
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/add"
  op: "Add"
  input: "loss/reg_out_loss/angle_mse/sub"
  input: "loss/reg_out_loss/angle_mse/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/FloorMod/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 360.0
      }
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/FloorMod"
  op: "FloorMod"
  input: "loss/reg_out_loss/angle_mse/add"
  input: "loss/reg_out_loss/angle_mse/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 180.0
      }
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/sub_1"
  op: "Sub"
  input: "loss/reg_out_loss/angle_mse/FloorMod"
  input: "loss/reg_out_loss/angle_mse/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/Square"
  op: "Square"
  input: "loss/reg_out_loss/angle_mse/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/Mean"
  op: "Mean"
  input: "loss/reg_out_loss/angle_mse/Square"
  input: "loss/reg_out_loss/angle_mse/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/mul"
  op: "Mul"
  input: "reg_out_sample_weights"
  input: "loss/reg_out_loss/angle_mse/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/Sum"
  op: "Sum"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/mul"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/reg_out_loss/angle_mse/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/Sum"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/Sum_1"
  op: "Sum"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/truediv"
  input: "loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp_2"
  op: "AssignAddVariableOp"
  input: "total_4"
  input: "loss/Sum_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "total_4"
  input: "^loss/AssignAddVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Cast_1"
  op: "Cast"
  input: "loss/Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp_3"
  op: "AssignAddVariableOp"
  input: "count_4"
  input: "loss/Cast_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "count_4"
  input: "^loss/AssignAddVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "total_4"
  input: "^loss/AssignAddVariableOp_2"
  input: "^loss/AssignAddVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_4"
  input: "^loss/AssignAddVariableOp_2"
  input: "^loss/AssignAddVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_1"
  op: "RealDiv"
  input: "loss/ReadVariableOp_5"
  input: "loss/truediv_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Identity_1"
  op: "Identity"
  input: "loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "loss/mul_1/x"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "Add"
  input: "loss/mul"
  input: "loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Sum"
  op: "Sum"
  input: "bin_out/Reshape"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/truediv"
  op: "RealDiv"
  input: "bin_out/Reshape"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/sub"
  op: "Sub"
  input: "loss/bin_out_loss/categorical_crossentropy/sub/x"
  input: "loss/bin_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss/bin_out_loss/categorical_crossentropy/truediv"
  input: "loss/bin_out_loss/categorical_crossentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/clip_by_value"
  op: "Maximum"
  input: "loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  input: "loss/bin_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Log"
  op: "Log"
  input: "loss/bin_out_loss/categorical_crossentropy/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/mul"
  op: "Mul"
  input: "bin_out_target"
  input: "loss/bin_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Sum_1"
  op: "Sum"
  input: "loss/bin_out_loss/categorical_crossentropy/mul"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/Neg"
  op: "Neg"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
  op: "Mul"
  input: "bin_out_sample_weights"
  input: "loss/bin_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
  op: "Sum"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Size"
  op: "Size"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
  op: "RealDiv"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/Sum_2"
  op: "Sum"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
  input: "loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp_4"
  op: "AssignAddVariableOp"
  input: "total_5"
  input: "loss/Sum_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "total_5"
  input: "^loss/AssignAddVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Size_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Cast_2"
  op: "Cast"
  input: "loss/Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/AssignAddVariableOp_5"
  op: "AssignAddVariableOp"
  input: "count_5"
  input: "loss/Cast_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "count_5"
  input: "^loss/AssignAddVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "total_5"
  input: "^loss/AssignAddVariableOp_4"
  input: "^loss/AssignAddVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_5"
  input: "^loss/AssignAddVariableOp_4"
  input: "^loss/AssignAddVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/truediv_2"
  op: "RealDiv"
  input: "loss/ReadVariableOp_8"
  input: "loss/truediv_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Identity_2"
  op: "Identity"
  input: "loss/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul_2"
  op: "Mul"
  input: "loss/mul_2/x"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_1"
  op: "Add"
  input: "loss/add"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "loss/add_1"
  input: "Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Fill"
  op: "Fill"
  input: "training/Adam/gradients/Shape"
  input: "training/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/Fill"
  input: "training/Adam/gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/Mean_grad/Reshape"
  input: "training/Adam/gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/Mean_grad/Tile"
  input: "training/Adam/gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_2_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Mean_grad/truediv"
  input: "loss/mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/mul_2_grad/Mul_1"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/mul_2_grad/Mul_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/mul_grad/Mul_1"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Neg"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/mul_1_grad/Mul_1"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Neg"
  op: "Neg"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Neg"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv_1"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/mul_1_grad/Mul_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/weighted_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "bin_out_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss/bin_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "bin_out_sample_weights"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "cat_out_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  input: "loss/cat_out_loss/categorical_crossentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "cat_out_sample_weights"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape"
  op: "Shape"
  input: "reg_out_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Tile"
  input: "loss/reg_out_loss/angle_mse/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "reg_out_sample_weights"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/weighted_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Neg"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/weighted_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Neg"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/add"
  op: "Add"
  input: "loss/reg_out_loss/angle_mse/Mean/reduction_indices"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/add"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range/start"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Size"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/range"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/mod"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/weighted_loss/mul_grad/Reshape_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_2"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Shape_3"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Prod_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Prod"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Tile"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/add"
  op: "Add"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/add"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range/start"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Shape_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/range"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/mod"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Neg_grad/Neg"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/add"
  op: "Add"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum_1/reduction_indices"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/add"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range/start"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Size"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Shape_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/range"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/mod"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Neg_grad/Neg"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Const"
  op: "Const"
  input: "^training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Mul"
  op: "Mul"
  input: "loss/reg_out_loss/angle_mse/sub_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Mean_grad/truediv"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/Square"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape"
  op: "Shape"
  input: "bin_out_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  input: "loss/bin_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "bin_out_target"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape"
  op: "Shape"
  input: "cat_out_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  input: "loss/cat_out_loss/categorical_crossentropy/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "cat_out_target"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/FloorMod"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Mul_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/Square_grad/Mul_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Neg"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/bin_out_loss/categorical_crossentropy/clip_by_value"
  input: "^training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/cat_out_loss/categorical_crossentropy/clip_by_value"
  input: "^training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/mul_grad/Reshape_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/FloorDiv"
  op: "FloorDiv"
  input: "loss/reg_out_loss/angle_mse/add"
  input: "loss/reg_out_loss/angle_mse/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/FloorDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_1_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/mul"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Sum_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/FloorMod"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_2"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  input: "loss/bin_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Select_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_2"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
  input: "loss/cat_out_loss/categorical_crossentropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/zeros"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Select_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape"
  op: "Shape"
  input: "loss/reg_out_loss/angle_mse/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/FloorMod_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Sum_1"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/bin_out_loss/categorical_crossentropy/truediv"
  input: "loss/bin_out_loss/categorical_crossentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_2"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/cat_out_loss/categorical_crossentropy/truediv"
  input: "loss/cat_out_loss/categorical_crossentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/zeros"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Select_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape"
  op: "Shape"
  input: "reg_out_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape_1"
  op: "Shape"
  input: "reg_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/add_grad/Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Neg"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/reg_out_loss/angle_mse/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape"
  op: "Shape"
  input: "bin_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Neg"
  op: "Neg"
  input: "bin_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Neg"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv_1"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/mul"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape"
  op: "Shape"
  input: "cat_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Neg"
  op: "Neg"
  input: "cat_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Neg"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv_1"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/clip_by_value/Minimum_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/mul"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/reg_out/Reshape_grad/Shape"
  op: "Shape"
  input: "act_linear/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@reg_out/Reshape"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/reg_out/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/reg_out_loss/angle_mse/sub_grad/Reshape_1"
  input: "training/Adam/gradients/reg_out/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@reg_out/Reshape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Shape"
  op: "Shape"
  input: "bin_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/add"
  op: "Add"
  input: "loss/bin_out_loss/categorical_crossentropy/Sum/reduction_indices"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/add"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range/start"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Size"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Shape_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/range"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/mod"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Reshape_1"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Shape"
  op: "Shape"
  input: "cat_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/add"
  op: "Add"
  input: "loss/cat_out_loss/categorical_crossentropy/Sum/reduction_indices"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/add"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range/start"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Size"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Shape_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/range"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/mod"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Reshape_1"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN"
  op: "AddN"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/bin_out_loss/categorical_crossentropy/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/bin_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/bin_out/Reshape_grad/Shape"
  op: "Shape"
  input: "act_bin/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bin_out/Reshape"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/bin_out/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/AddN"
  input: "training/Adam/gradients/bin_out/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bin_out/Reshape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/cat_out_loss/categorical_crossentropy/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/cat_out_loss/categorical_crossentropy/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/cat_out/Reshape_grad/Shape"
  op: "Shape"
  input: "act_softmax/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cat_out/Reshape"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/cat_out/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/AddN_1"
  input: "training/Adam/gradients/cat_out/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@cat_out/Reshape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_reg/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/reg_out/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Shape"
  op: "Shape"
  input: "act_bin/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Shape_1"
  op: "Shape"
  input: "act_bin/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/act_bin/truediv_grad/Shape"
  input: "training/Adam/gradients/act_bin/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/bin_out/Reshape_grad/Reshape"
  input: "act_bin/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_bin/truediv_grad/RealDiv"
  input: "training/Adam/gradients/act_bin/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/truediv_grad/Sum"
  input: "training/Adam/gradients/act_bin/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Neg"
  op: "Neg"
  input: "act_bin/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/act_bin/truediv_grad/Neg"
  input: "act_bin/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/act_bin/truediv_grad/RealDiv_1"
  input: "act_bin/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/bin_out/Reshape_grad/Reshape"
  input: "training/Adam/gradients/act_bin/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/act_bin/truediv_grad/mul"
  input: "training/Adam/gradients/act_bin/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/truediv_grad/Sum_1"
  input: "training/Adam/gradients/act_bin/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Shape"
  op: "Shape"
  input: "act_softmax/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Shape_1"
  op: "Shape"
  input: "act_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Shape"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/cat_out/Reshape_grad/Reshape"
  input: "act_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv"
  input: "training/Adam/gradients/act_softmax/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Sum"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Neg"
  op: "Neg"
  input: "act_softmax/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Neg"
  input: "act_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv_1"
  input: "act_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/cat_out/Reshape_grad/Reshape"
  input: "training/Adam/gradients/act_softmax/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/act_softmax/truediv_grad/mul"
  input: "training/Adam/gradients/act_softmax/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Sum_1"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_reg/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "dropout/Identity"
  input: "conv_reg/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_reg/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_reg/convolution_grad/ShapeN"
  input: "conv_reg/convolution/ReadVariableOp"
  input: "training/Adam/gradients/reg_out/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_reg/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout/Identity"
  input: "training/Adam/gradients/conv_reg/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/reg_out/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Shape"
  op: "Shape"
  input: "act_bin/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/add"
  op: "Add"
  input: "act_bin/Sum/reduction_indices"
  input: "training/Adam/gradients/act_bin/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/act_bin/Sum_grad/add"
  input: "training/Adam/gradients/act_bin/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/range"
  op: "Range"
  input: "training/Adam/gradients/act_bin/Sum_grad/range/start"
  input: "training/Adam/gradients/act_bin/Sum_grad/Size"
  input: "training/Adam/gradients/act_bin/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/act_bin/Sum_grad/Shape_1"
  input: "training/Adam/gradients/act_bin/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/act_bin/Sum_grad/range"
  input: "training/Adam/gradients/act_bin/Sum_grad/mod"
  input: "training/Adam/gradients/act_bin/Sum_grad/Shape"
  input: "training/Adam/gradients/act_bin/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/act_bin/Sum_grad/DynamicStitch"
  input: "training/Adam/gradients/act_bin/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/act_bin/Sum_grad/Shape"
  input: "training/Adam/gradients/act_bin/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/truediv_grad/Reshape_1"
  input: "training/Adam/gradients/act_bin/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/act_bin/Sum_grad/Reshape"
  input: "training/Adam/gradients/act_bin/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Shape"
  op: "Shape"
  input: "act_softmax/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/add"
  op: "Add"
  input: "act_softmax/Sum/reduction_indices"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/act_softmax/Sum_grad/add"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/range"
  op: "Range"
  input: "training/Adam/gradients/act_softmax/Sum_grad/range/start"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Size"
  input: "training/Adam/gradients/act_softmax/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Shape_1"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/act_softmax/Sum_grad/range"
  input: "training/Adam/gradients/act_softmax/Sum_grad/mod"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Shape"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/act_softmax/Sum_grad/DynamicStitch"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Shape"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Reshape_1"
  input: "training/Adam/gradients/act_softmax/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Reshape"
  input: "training/Adam/gradients/act_softmax/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training/Adam/gradients/act_bin/truediv_grad/Reshape"
  input: "training/Adam/gradients/act_bin/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Exp_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/AddN_2"
  input: "act_bin/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Exp"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_3"
  op: "AddN"
  input: "training/Adam/gradients/act_softmax/truediv_grad/Reshape"
  input: "training/Adam/gradients/act_softmax/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Exp_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/AddN_3"
  input: "act_softmax/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Exp"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Shape"
  op: "Shape"
  input: "conv_bin/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Shape_1"
  op: "Shape"
  input: "act_bin/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/act_bin/sub_grad/Shape"
  input: "training/Adam/gradients/act_bin/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_bin/Exp_grad/mul"
  input: "training/Adam/gradients/act_bin/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/sub_grad/Sum"
  input: "training/Adam/gradients/act_bin/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/act_bin/Exp_grad/mul"
  input: "training/Adam/gradients/act_bin/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/act_bin/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/sub_grad/Neg"
  input: "training/Adam/gradients/act_bin/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Shape"
  op: "Shape"
  input: "conv_cat/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Shape_1"
  op: "Shape"
  input: "act_softmax/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/act_softmax/sub_grad/Shape"
  input: "training/Adam/gradients/act_softmax/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_softmax/Exp_grad/mul"
  input: "training/Adam/gradients/act_softmax/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/sub_grad/Sum"
  input: "training/Adam/gradients/act_softmax/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/act_softmax/Exp_grad/mul"
  input: "training/Adam/gradients/act_softmax/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/act_softmax/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/sub_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/sub_grad/Neg"
  input: "training/Adam/gradients/act_softmax/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Shape"
  op: "Shape"
  input: "conv_bin/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/add"
  op: "Add"
  input: "act_bin/Max/reduction_indices"
  input: "training/Adam/gradients/act_bin/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/act_bin/Max_grad/add"
  input: "training/Adam/gradients/act_bin/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/range"
  op: "Range"
  input: "training/Adam/gradients/act_bin/Max_grad/range/start"
  input: "training/Adam/gradients/act_bin/Max_grad/Size"
  input: "training/Adam/gradients/act_bin/Max_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/act_bin/Max_grad/Shape_1"
  input: "training/Adam/gradients/act_bin/Max_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/act_bin/Max_grad/range"
  input: "training/Adam/gradients/act_bin/Max_grad/mod"
  input: "training/Adam/gradients/act_bin/Max_grad/Shape"
  input: "training/Adam/gradients/act_bin/Max_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Reshape"
  op: "Reshape"
  input: "act_bin/Max"
  input: "training/Adam/gradients/act_bin/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/sub_grad/Reshape_1"
  input: "training/Adam/gradients/act_bin/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Equal"
  op: "Equal"
  input: "training/Adam/gradients/act_bin/Max_grad/Reshape"
  input: "conv_bin/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/act_bin/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_bin/Max_grad/Cast"
  input: "act_bin/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/Reshape_2"
  op: "Reshape"
  input: "training/Adam/gradients/act_bin/Max_grad/Sum"
  input: "training/Adam/gradients/act_bin/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/act_bin/Max_grad/Cast"
  input: "training/Adam/gradients/act_bin/Max_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_bin/Max_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/act_bin/Max_grad/truediv"
  input: "training/Adam/gradients/act_bin/Max_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Shape"
  op: "Shape"
  input: "conv_cat/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/add"
  op: "Add"
  input: "act_softmax/Max/reduction_indices"
  input: "training/Adam/gradients/act_softmax/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/act_softmax/Max_grad/add"
  input: "training/Adam/gradients/act_softmax/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/range"
  op: "Range"
  input: "training/Adam/gradients/act_softmax/Max_grad/range/start"
  input: "training/Adam/gradients/act_softmax/Max_grad/Size"
  input: "training/Adam/gradients/act_softmax/Max_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/act_softmax/Max_grad/Shape_1"
  input: "training/Adam/gradients/act_softmax/Max_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/act_softmax/Max_grad/range"
  input: "training/Adam/gradients/act_softmax/Max_grad/mod"
  input: "training/Adam/gradients/act_softmax/Max_grad/Shape"
  input: "training/Adam/gradients/act_softmax/Max_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Reshape"
  op: "Reshape"
  input: "act_softmax/Max"
  input: "training/Adam/gradients/act_softmax/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/sub_grad/Reshape_1"
  input: "training/Adam/gradients/act_softmax/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Equal"
  op: "Equal"
  input: "training/Adam/gradients/act_softmax/Max_grad/Reshape"
  input: "conv_cat/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/act_softmax/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/act_softmax/Max_grad/Cast"
  input: "act_softmax/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/Reshape_2"
  op: "Reshape"
  input: "training/Adam/gradients/act_softmax/Max_grad/Sum"
  input: "training/Adam/gradients/act_softmax/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/act_softmax/Max_grad/Cast"
  input: "training/Adam/gradients/act_softmax/Max_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/act_softmax/Max_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/act_softmax/Max_grad/truediv"
  input: "training/Adam/gradients/act_softmax/Max_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/Max"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_4"
  op: "AddN"
  input: "training/Adam/gradients/act_bin/sub_grad/Reshape"
  input: "training/Adam/gradients/act_bin/Max_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_bin/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_bin/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_5"
  op: "AddN"
  input: "training/Adam/gradients/act_softmax/sub_grad/Reshape"
  input: "training/Adam/gradients/act_softmax/Max_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@act_softmax/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_cat/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv_bin/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "dropout/Identity"
  input: "conv_bin/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_bin/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_bin/convolution_grad/ShapeN"
  input: "conv_bin/convolution/ReadVariableOp"
  input: "training/Adam/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_bin/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout/Identity"
  input: "training/Adam/gradients/conv_bin/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_bin/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_cat/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "dropout/Identity"
  input: "conv_cat/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_cat/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_cat/convolution_grad/ShapeN"
  input: "conv_cat/convolution/ReadVariableOp"
  input: "training/Adam/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_cat/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout/Identity"
  input: "training/Adam/gradients/conv_cat/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_cat/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_6"
  op: "AddN"
  input: "training/Adam/gradients/conv_reg/convolution_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_bin/convolution_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_cat/convolution_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_reg/convolution"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/reshape_1/Reshape_grad/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@reshape_1/Reshape"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/reshape_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/AddN_6"
  input: "training/Adam/gradients/reshape_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@reshape_1/Reshape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  op: "Shape"
  input: "conv_pw_13_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/add"
  op: "Add"
  input: "global_average_pooling2d_1/Mean/reduction_indices"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/add"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/start"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_1"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/mod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/reshape_1/Reshape_grad/Reshape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Reshape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_2"
  op: "Shape"
  input: "conv_pw_13_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_2"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_3"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod_1"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Tile"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_13_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/truediv"
  input: "conv_pw_13_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like"
  op: "ZerosLike"
  input: "conv_pw_13_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "conv_pw_13_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "conv_pw_13_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "conv_pw_13_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_13_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_13/convolution"
  input: "conv_pw_13_bn/ReadVariableOp_6"
  input: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_13/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_13_relu/Relu6"
  input: "conv_pw_13/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_13/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_13/convolution_grad/ShapeN"
  input: "conv_pw_13/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_13/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_13_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_13/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_13/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_13/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_13_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "conv_dw_13_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "conv_dw_13_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "conv_dw_13_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "conv_dw_13_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_13_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_13/depthwise"
  input: "conv_dw_13_bn/ReadVariableOp_6"
  input: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_13_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_12_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_13/depthwise_grad/Shape"
  input: "conv_dw_13/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_13/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_12_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_13/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_13/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_12_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_13/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_12_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "conv_pw_12_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "conv_pw_12_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "conv_pw_12_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "conv_pw_12_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_12_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_12/convolution"
  input: "conv_pw_12_bn/ReadVariableOp_6"
  input: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_12/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_12_relu/Relu6"
  input: "conv_pw_12/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_12/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_12/convolution_grad/ShapeN"
  input: "conv_pw_12/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_12/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_12_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_12/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_12/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_12/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_12_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "conv_dw_12_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "conv_dw_12_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "conv_dw_12_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "conv_dw_12_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_12_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_12/depthwise"
  input: "conv_dw_12_bn/ReadVariableOp_6"
  input: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_12_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pad_12/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_12/depthwise_grad/Shape"
  input: "conv_dw_12/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_12/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pad_12/Pad"
  input: "training/Adam/gradients/conv_dw_12/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_12/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Rank"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice"
  op: "Slice"
  input: "conv_pad_12/Pad/paddings"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Shape"
  op: "Shape"
  input: "conv_pw_11_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/conv_dw_12/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Reshape"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_12/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_11_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pad_12/Pad_grad/Slice_1"
  input: "conv_pw_11_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "conv_pw_11_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "conv_pw_11_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "conv_pw_11_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "conv_pw_11_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_11_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_11/convolution"
  input: "conv_pw_11_bn/ReadVariableOp_6"
  input: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_11/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_11_relu/Relu6"
  input: "conv_pw_11/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_11/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_11/convolution_grad/ShapeN"
  input: "conv_pw_11/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_11/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_11_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_11/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_11/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_11/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_11_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "conv_dw_11_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "conv_dw_11_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "conv_dw_11_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "conv_dw_11_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_11_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_11/depthwise"
  input: "conv_dw_11_bn/ReadVariableOp_6"
  input: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_11_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_10_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_11/depthwise_grad/Shape"
  input: "conv_dw_11/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_11/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_10_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_11/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_11/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_10_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_11/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_10_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "conv_pw_10_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "conv_pw_10_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "conv_pw_10_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "conv_pw_10_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_10_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_10/convolution"
  input: "conv_pw_10_bn/ReadVariableOp_6"
  input: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_10/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_10_relu/Relu6"
  input: "conv_pw_10/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_10/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_10/convolution_grad/ShapeN"
  input: "conv_pw_10/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_10/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_10_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_10/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_10/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_10/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_10_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "conv_dw_10_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "conv_dw_10_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "conv_dw_10_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "conv_dw_10_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_10_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_10/depthwise"
  input: "conv_dw_10_bn/ReadVariableOp_6"
  input: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_10_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_9_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_10/depthwise_grad/Shape"
  input: "conv_dw_10/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_10/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_9_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_10/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_10/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_9_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_10/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_9_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "conv_pw_9_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "conv_pw_9_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "conv_pw_9_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "conv_pw_9_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_9_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_9/convolution"
  input: "conv_pw_9_bn/ReadVariableOp_6"
  input: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_9/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_9_relu/Relu6"
  input: "conv_pw_9/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_9/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_9/convolution_grad/ShapeN"
  input: "conv_pw_9/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_9/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_9_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_9/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_9/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_9/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_9_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "conv_dw_9_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "conv_dw_9_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "conv_dw_9_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "conv_dw_9_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_9_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_9/depthwise"
  input: "conv_dw_9_bn/ReadVariableOp_6"
  input: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_9_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_8_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_9/depthwise_grad/Shape"
  input: "conv_dw_9/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_9/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_8_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_9/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_9/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_8_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_9/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_8_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "conv_pw_8_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "conv_pw_8_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "conv_pw_8_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "conv_pw_8_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_8_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_8/convolution"
  input: "conv_pw_8_bn/ReadVariableOp_6"
  input: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_8/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_8_relu/Relu6"
  input: "conv_pw_8/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_8/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_8/convolution_grad/ShapeN"
  input: "conv_pw_8/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_8/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_8_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_8/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_8/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_8/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_8_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "conv_dw_8_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "conv_dw_8_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "conv_dw_8_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "conv_dw_8_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_8_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_8/depthwise"
  input: "conv_dw_8_bn/ReadVariableOp_6"
  input: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_8_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_7_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_8/depthwise_grad/Shape"
  input: "conv_dw_8/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_8/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_7_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_8/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_8/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_7_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_8/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_7_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "conv_pw_7_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "conv_pw_7_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "conv_pw_7_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "conv_pw_7_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_7_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/ReadVariableOp_6"
  input: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_7/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_7_relu/Relu6"
  input: "conv_pw_7/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_7/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_7/convolution_grad/ShapeN"
  input: "conv_pw_7/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_7/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_7_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_7/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_7/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_7_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "conv_dw_7_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "conv_dw_7_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "conv_dw_7_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "conv_dw_7_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_7_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/ReadVariableOp_6"
  input: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_7_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_6_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_7/depthwise_grad/Shape"
  input: "conv_dw_7/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_7/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_6_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_7/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_6_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_7/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_6_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "conv_pw_6_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "conv_pw_6_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "conv_pw_6_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "conv_pw_6_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_6_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/ReadVariableOp_6"
  input: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_6/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_6_relu/Relu6"
  input: "conv_pw_6/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_6/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_6/convolution_grad/ShapeN"
  input: "conv_pw_6/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_6/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_6_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_6/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_6/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_6_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "conv_dw_6_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "conv_dw_6_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "conv_dw_6_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "conv_dw_6_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_6_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/ReadVariableOp_6"
  input: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_6_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pad_6/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_6/depthwise_grad/Shape"
  input: "conv_dw_6/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_6/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pad_6/Pad"
  input: "training/Adam/gradients/conv_dw_6/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Rank"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice"
  op: "Slice"
  input: "conv_pad_6/Pad/paddings"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Shape"
  op: "Shape"
  input: "conv_pw_5_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/conv_dw_6/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Reshape"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_6/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_5_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pad_6/Pad_grad/Slice_1"
  input: "conv_pw_5_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "conv_pw_5_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "conv_pw_5_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "conv_pw_5_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "conv_pw_5_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_5_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/ReadVariableOp_6"
  input: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_5/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_5_relu/Relu6"
  input: "conv_pw_5/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_5/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_5/convolution_grad/ShapeN"
  input: "conv_pw_5/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_5/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_5_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_5/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_5/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_5_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "conv_dw_5_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "conv_dw_5_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "conv_dw_5_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "conv_dw_5_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_5_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/ReadVariableOp_6"
  input: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_5_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_4_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_5/depthwise_grad/Shape"
  input: "conv_dw_5/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_5/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_4_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_5/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_4_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_5/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_4_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "conv_pw_4_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "conv_pw_4_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "conv_pw_4_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "conv_pw_4_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_4_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/ReadVariableOp_6"
  input: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_4/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_4_relu/Relu6"
  input: "conv_pw_4/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_4/convolution_grad/ShapeN"
  input: "conv_pw_4/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_4_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_4/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_4/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_4_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "conv_dw_4_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "conv_dw_4_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "conv_dw_4_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "conv_dw_4_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_4_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/ReadVariableOp_6"
  input: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_4_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pad_4/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_4/depthwise_grad/Shape"
  input: "conv_dw_4/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_4/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pad_4/Pad"
  input: "training/Adam/gradients/conv_dw_4/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Rank"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice"
  op: "Slice"
  input: "conv_pad_4/Pad/paddings"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Shape"
  op: "Shape"
  input: "conv_pw_3_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/conv_dw_4/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Reshape"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_4/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_3_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pad_4/Pad_grad/Slice_1"
  input: "conv_pw_3_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "conv_pw_3_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "conv_pw_3_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "conv_pw_3_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "conv_pw_3_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_3_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/ReadVariableOp_6"
  input: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_3_relu/Relu6"
  input: "conv_pw_3/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_3/convolution_grad/ShapeN"
  input: "conv_pw_3/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_3_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_3/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_3/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_3_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "conv_dw_3_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "conv_dw_3_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "conv_dw_3_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_87"
  op: "ZerosLike"
  input: "conv_dw_3_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_3_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/ReadVariableOp_6"
  input: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_3_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pw_2_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_3/depthwise_grad/Shape"
  input: "conv_dw_3/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_3/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pw_2_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_3/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_2_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_3/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv_pw_2_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_88"
  op: "ZerosLike"
  input: "conv_pw_2_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_89"
  op: "ZerosLike"
  input: "conv_pw_2_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_90"
  op: "ZerosLike"
  input: "conv_pw_2_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_91"
  op: "ZerosLike"
  input: "conv_pw_2_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_2_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/ReadVariableOp_6"
  input: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_2/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_2_relu/Relu6"
  input: "conv_pw_2/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_2/convolution_grad/ShapeN"
  input: "conv_pw_2/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_2_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_2/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_2/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_2_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_92"
  op: "ZerosLike"
  input: "conv_dw_2_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_93"
  op: "ZerosLike"
  input: "conv_dw_2_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_94"
  op: "ZerosLike"
  input: "conv_dw_2_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_95"
  op: "ZerosLike"
  input: "conv_dw_2_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_2_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/ReadVariableOp_6"
  input: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_2_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2/depthwise_grad/Shape"
  op: "Shape"
  input: "conv_pad_2/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_2/depthwise_grad/Shape"
  input: "conv_dw_2/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_2/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv_pad_2/Pad"
  input: "training/Adam/gradients/conv_dw_2/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Rank"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice"
  op: "Slice"
  input: "conv_pad_2/Pad/paddings"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Shape"
  op: "Shape"
  input: "conv_pw_1_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/conv_dw_2/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Reshape"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pad_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_1_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pad_2/Pad_grad/Slice_1"
  input: "conv_pw_1_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_96"
  op: "ZerosLike"
  input: "conv_pw_1_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_97"
  op: "ZerosLike"
  input: "conv_pw_1_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_98"
  op: "ZerosLike"
  input: "conv_pw_1_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_99"
  op: "ZerosLike"
  input: "conv_pw_1_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_pw_1_relu/Relu6_grad/Relu6Grad"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/ReadVariableOp_6"
  input: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_pw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv_dw_1_relu/Relu6"
  input: "conv_pw_1/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv_pw_1/convolution_grad/ShapeN"
  input: "conv_pw_1/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_pw_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_dw_1_relu/Relu6"
  input: "training/Adam/gradients/conv_pw_1/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_pw_1/convolution_grad/Conv2DBackpropInput"
  input: "conv_dw_1_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_100"
  op: "ZerosLike"
  input: "conv_dw_1_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_101"
  op: "ZerosLike"
  input: "conv_dw_1_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_102"
  op: "ZerosLike"
  input: "conv_dw_1_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_103"
  op: "ZerosLike"
  input: "conv_dw_1_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv_dw_1_relu/Relu6_grad/Relu6Grad"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/ReadVariableOp_6"
  input: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv_dw_1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1/depthwise_grad/Shape"
  op: "Shape"
  input: "conv1_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "training/Adam/gradients/conv_dw_1/depthwise_grad/Shape"
  input: "conv_dw_1/depthwise/ReadVariableOp"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv_dw_1/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "conv1_relu/Relu6"
  input: "training/Adam/gradients/conv_dw_1/depthwise_grad/Shape_1"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv1_relu/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "training/Adam/gradients/conv_dw_1/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "conv1_relu/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_relu/Relu6"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_104"
  op: "ZerosLike"
  input: "conv1_bn/FusedBatchNorm_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_105"
  op: "ZerosLike"
  input: "conv1_bn/FusedBatchNorm_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_106"
  op: "ZerosLike"
  input: "conv1_bn/FusedBatchNorm_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_107"
  op: "ZerosLike"
  input: "conv1_bn/FusedBatchNorm_1:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/conv1_relu/Relu6_grad/Relu6Grad"
  input: "conv1/convolution"
  input: "conv1_bn/ReadVariableOp_6"
  input: "conv1_bn/FusedBatchNorm_1/ReadVariableOp"
  input: "conv1_bn/FusedBatchNorm_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv1_pad/Pad"
  input: "conv1/convolution/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv1/convolution_grad/ShapeN"
  input: "conv1/convolution/ReadVariableOp"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1_pad/Pad"
  input: "training/Adam/gradients/conv1/convolution_grad/ShapeN:1"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam/iterations"
  input: "training/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^training/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast"
  op: "Cast"
  input: "training/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/add"
  op: "Add"
  input: "training/Adam/Cast"
  input: "training/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow"
  op: "Pow"
  input: "training/Adam/Pow/ReadVariableOp"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub"
  op: "Sub"
  input: "training/Adam/sub/x"
  input: "training/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training/Adam/sub"
  input: "training/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value"
  op: "Maximum"
  input: "training/Adam/clip_by_value/Minimum"
  input: "training/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt"
  op: "Sqrt"
  input: "training/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1"
  op: "Pow"
  input: "training/Adam/Pow_1/ReadVariableOp"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_1"
  op: "Sub"
  input: "training/Adam/sub_1/x"
  input: "training/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv"
  op: "RealDiv"
  input: "training/Adam/Sqrt"
  input: "training/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_1"
  input: "training/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_0_1"
    }
  }
}
node {
  name: "training/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_0_1"
}
node {
  name: "training/Adam/m_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "training/Adam/m_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_1_1"
    }
  }
}
node {
  name: "training/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_1_1"
}
node {
  name: "training/Adam/m_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "training/Adam/m_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_2_1"
    }
  }
}
node {
  name: "training/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_2_1"
}
node {
  name: "training/Adam/m_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "training/Adam/m_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_3_1"
    }
  }
}
node {
  name: "training/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_3_1"
}
node {
  name: "training/Adam/m_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "training/Adam/m_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_4_1"
    }
  }
}
node {
  name: "training/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_4_1"
}
node {
  name: "training/Adam/m_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "training/Adam/m_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_5_1"
    }
  }
}
node {
  name: "training/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_5_1"
}
node {
  name: "training/Adam/m_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "training/Adam/m_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_6_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_6_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_6_1"
    }
  }
}
node {
  name: "training/Adam/m_6_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_6_1"
}
node {
  name: "training/Adam/m_6_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_6_1"
  input: "training/Adam/m_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_6_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_6_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_7_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_7_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_7_1"
    }
  }
}
node {
  name: "training/Adam/m_7_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_7_1"
}
node {
  name: "training/Adam/m_7_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_7_1"
  input: "training/Adam/m_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_7_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_7_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_8_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_8_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_8_1"
    }
  }
}
node {
  name: "training/Adam/m_8_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_8_1"
}
node {
  name: "training/Adam/m_8_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_8_1"
  input: "training/Adam/m_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_8_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_8_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_9_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_9_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_9_1"
    }
  }
}
node {
  name: "training/Adam/m_9_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_9_1"
}
node {
  name: "training/Adam/m_9_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_9_1"
  input: "training/Adam/m_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_9_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_9_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_10_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_10_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_10_1"
    }
  }
}
node {
  name: "training/Adam/m_10_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_10_1"
}
node {
  name: "training/Adam/m_10_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_10_1"
  input: "training/Adam/m_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_10_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_10_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_11_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_11_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_11_1"
    }
  }
}
node {
  name: "training/Adam/m_11_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_11_1"
}
node {
  name: "training/Adam/m_11_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_11_1"
  input: "training/Adam/m_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_11_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_11_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_12"
  op: "Fill"
  input: "training/Adam/m_12/shape_as_tensor"
  input: "training/Adam/m_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_12_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_12_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_12_1"
    }
  }
}
node {
  name: "training/Adam/m_12_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_12_1"
}
node {
  name: "training/Adam/m_12_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_12_1"
  input: "training/Adam/m_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_12_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_12_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_13_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_13_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_13_1"
    }
  }
}
node {
  name: "training/Adam/m_13_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_13_1"
}
node {
  name: "training/Adam/m_13_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_13_1"
  input: "training/Adam/m_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_13_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_13_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_14_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_14_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_14_1"
    }
  }
}
node {
  name: "training/Adam/m_14_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_14_1"
}
node {
  name: "training/Adam/m_14_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_14_1"
  input: "training/Adam/m_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_14_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_14_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_15_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_15_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_15_1"
    }
  }
}
node {
  name: "training/Adam/m_15_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_15_1"
}
node {
  name: "training/Adam/m_15_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_15_1"
  input: "training/Adam/m_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_15_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_15_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_16_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_16_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_16_1"
    }
  }
}
node {
  name: "training/Adam/m_16_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_16_1"
}
node {
  name: "training/Adam/m_16_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_16_1"
  input: "training/Adam/m_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_16_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_16_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_17_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_17_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_17_1"
    }
  }
}
node {
  name: "training/Adam/m_17_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_17_1"
}
node {
  name: "training/Adam/m_17_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_17_1"
  input: "training/Adam/m_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_17_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_17_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_18"
  op: "Fill"
  input: "training/Adam/m_18/shape_as_tensor"
  input: "training/Adam/m_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_18_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_18_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_18_1"
    }
  }
}
node {
  name: "training/Adam/m_18_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_18_1"
}
node {
  name: "training/Adam/m_18_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_18_1"
  input: "training/Adam/m_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_18_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_18_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_19_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_19_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_19_1"
    }
  }
}
node {
  name: "training/Adam/m_19_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_19_1"
}
node {
  name: "training/Adam/m_19_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_19_1"
  input: "training/Adam/m_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_19_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_19_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_20_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_20_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_20_1"
    }
  }
}
node {
  name: "training/Adam/m_20_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_20_1"
}
node {
  name: "training/Adam/m_20_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_20_1"
  input: "training/Adam/m_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_20_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_20_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_21_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_21_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_21_1"
    }
  }
}
node {
  name: "training/Adam/m_21_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_21_1"
}
node {
  name: "training/Adam/m_21_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_21_1"
  input: "training/Adam/m_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_21_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_21_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_22_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_22_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_22_1"
    }
  }
}
node {
  name: "training/Adam/m_22_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_22_1"
}
node {
  name: "training/Adam/m_22_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_22_1"
  input: "training/Adam/m_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_22_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_22_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_23_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_23_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_23_1"
    }
  }
}
node {
  name: "training/Adam/m_23_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_23_1"
}
node {
  name: "training/Adam/m_23_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_23_1"
  input: "training/Adam/m_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_23_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_23_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_24/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_24"
  op: "Fill"
  input: "training/Adam/m_24/shape_as_tensor"
  input: "training/Adam/m_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_24_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_24_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_24_1"
    }
  }
}
node {
  name: "training/Adam/m_24_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_24_1"
}
node {
  name: "training/Adam/m_24_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_24_1"
  input: "training/Adam/m_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_24_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_24_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_25_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_25_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_25_1"
    }
  }
}
node {
  name: "training/Adam/m_25_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_25_1"
}
node {
  name: "training/Adam/m_25_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_25_1"
  input: "training/Adam/m_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_25_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_25_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_26_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_26_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_26_1"
    }
  }
}
node {
  name: "training/Adam/m_26_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_26_1"
}
node {
  name: "training/Adam/m_26_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_26_1"
  input: "training/Adam/m_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_26_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_26_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_27/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_27"
  op: "Fill"
  input: "training/Adam/m_27/shape_as_tensor"
  input: "training/Adam/m_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_27_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_27_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_27_1"
    }
  }
}
node {
  name: "training/Adam/m_27_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_27_1"
}
node {
  name: "training/Adam/m_27_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_27_1"
  input: "training/Adam/m_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_27_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_27_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_28_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_28_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_28_1"
    }
  }
}
node {
  name: "training/Adam/m_28_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_28_1"
}
node {
  name: "training/Adam/m_28_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_28_1"
  input: "training/Adam/m_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_28_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_28_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_29_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_29_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_29_1"
    }
  }
}
node {
  name: "training/Adam/m_29_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_29_1"
}
node {
  name: "training/Adam/m_29_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_29_1"
  input: "training/Adam/m_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_29_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_29_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_30/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_30"
  op: "Fill"
  input: "training/Adam/m_30/shape_as_tensor"
  input: "training/Adam/m_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_30_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_30_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_30_1"
    }
  }
}
node {
  name: "training/Adam/m_30_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_30_1"
}
node {
  name: "training/Adam/m_30_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_30_1"
  input: "training/Adam/m_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_30_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_30_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_31_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_31_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_31_1"
    }
  }
}
node {
  name: "training/Adam/m_31_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_31_1"
}
node {
  name: "training/Adam/m_31_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_31_1"
  input: "training/Adam/m_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_31_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_31_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_32_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_32_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_32_1"
    }
  }
}
node {
  name: "training/Adam/m_32_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_32_1"
}
node {
  name: "training/Adam/m_32_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_32_1"
  input: "training/Adam/m_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_32_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_32_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_33/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_33"
  op: "Fill"
  input: "training/Adam/m_33/shape_as_tensor"
  input: "training/Adam/m_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_33_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_33_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_33_1"
    }
  }
}
node {
  name: "training/Adam/m_33_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_33_1"
}
node {
  name: "training/Adam/m_33_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_33_1"
  input: "training/Adam/m_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_33_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_33_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_34_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_34_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_34_1"
    }
  }
}
node {
  name: "training/Adam/m_34_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_34_1"
}
node {
  name: "training/Adam/m_34_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_34_1"
  input: "training/Adam/m_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_34_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_34_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_35_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_35_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_35_1"
    }
  }
}
node {
  name: "training/Adam/m_35_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_35_1"
}
node {
  name: "training/Adam/m_35_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_35_1"
  input: "training/Adam/m_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_35_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_35_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_36/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_36"
  op: "Fill"
  input: "training/Adam/m_36/shape_as_tensor"
  input: "training/Adam/m_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_36_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_36_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_36_1"
    }
  }
}
node {
  name: "training/Adam/m_36_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_36_1"
}
node {
  name: "training/Adam/m_36_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_36_1"
  input: "training/Adam/m_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_36_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_36_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_37_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_37_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_37_1"
    }
  }
}
node {
  name: "training/Adam/m_37_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_37_1"
}
node {
  name: "training/Adam/m_37_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_37_1"
  input: "training/Adam/m_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_37_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_37_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_38_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_38_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_38_1"
    }
  }
}
node {
  name: "training/Adam/m_38_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_38_1"
}
node {
  name: "training/Adam/m_38_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_38_1"
  input: "training/Adam/m_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_38_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_38_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_39/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_39"
  op: "Fill"
  input: "training/Adam/m_39/shape_as_tensor"
  input: "training/Adam/m_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_39_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_39_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_39_1"
    }
  }
}
node {
  name: "training/Adam/m_39_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_39_1"
}
node {
  name: "training/Adam/m_39_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_39_1"
  input: "training/Adam/m_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_39_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_39_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_40_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_40_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_40_1"
    }
  }
}
node {
  name: "training/Adam/m_40_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_40_1"
}
node {
  name: "training/Adam/m_40_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_40_1"
  input: "training/Adam/m_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_40_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_40_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_41_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_41_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_41_1"
    }
  }
}
node {
  name: "training/Adam/m_41_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_41_1"
}
node {
  name: "training/Adam/m_41_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_41_1"
  input: "training/Adam/m_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_41_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_41_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_42/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_42"
  op: "Fill"
  input: "training/Adam/m_42/shape_as_tensor"
  input: "training/Adam/m_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_42_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_42_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_42_1"
    }
  }
}
node {
  name: "training/Adam/m_42_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_42_1"
}
node {
  name: "training/Adam/m_42_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_42_1"
  input: "training/Adam/m_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_42_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_42_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_43_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_43_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_43_1"
    }
  }
}
node {
  name: "training/Adam/m_43_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_43_1"
}
node {
  name: "training/Adam/m_43_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_43_1"
  input: "training/Adam/m_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_43_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_43_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_44_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_44_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_44_1"
    }
  }
}
node {
  name: "training/Adam/m_44_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_44_1"
}
node {
  name: "training/Adam/m_44_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_44_1"
  input: "training/Adam/m_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_44_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_44_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_45/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_45"
  op: "Fill"
  input: "training/Adam/m_45/shape_as_tensor"
  input: "training/Adam/m_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_45_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_45_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_45_1"
    }
  }
}
node {
  name: "training/Adam/m_45_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_45_1"
}
node {
  name: "training/Adam/m_45_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_45_1"
  input: "training/Adam/m_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_45_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_45_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_46_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_46_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_46_1"
    }
  }
}
node {
  name: "training/Adam/m_46_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_46_1"
}
node {
  name: "training/Adam/m_46_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_46_1"
  input: "training/Adam/m_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_46_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_46_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_47_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_47_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_47_1"
    }
  }
}
node {
  name: "training/Adam/m_47_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_47_1"
}
node {
  name: "training/Adam/m_47_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_47_1"
  input: "training/Adam/m_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_47_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_47_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_48/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_48"
  op: "Fill"
  input: "training/Adam/m_48/shape_as_tensor"
  input: "training/Adam/m_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_48_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_48_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_48_1"
    }
  }
}
node {
  name: "training/Adam/m_48_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_48_1"
}
node {
  name: "training/Adam/m_48_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_48_1"
  input: "training/Adam/m_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_48_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_48_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_49_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_49_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_49_1"
    }
  }
}
node {
  name: "training/Adam/m_49_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_49_1"
}
node {
  name: "training/Adam/m_49_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_49_1"
  input: "training/Adam/m_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_49_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_49_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_50_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_50_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_50_1"
    }
  }
}
node {
  name: "training/Adam/m_50_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_50_1"
}
node {
  name: "training/Adam/m_50_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_50_1"
  input: "training/Adam/m_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_50_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_50_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_51/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_51/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_51"
  op: "Fill"
  input: "training/Adam/m_51/shape_as_tensor"
  input: "training/Adam/m_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_51_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_51_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_51_1"
    }
  }
}
node {
  name: "training/Adam/m_51_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_51_1"
}
node {
  name: "training/Adam/m_51_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_51_1"
  input: "training/Adam/m_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_51_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_51_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_52_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_52_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_52_1"
    }
  }
}
node {
  name: "training/Adam/m_52_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_52_1"
}
node {
  name: "training/Adam/m_52_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_52_1"
  input: "training/Adam/m_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_52_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_52_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_53_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_53_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_53_1"
    }
  }
}
node {
  name: "training/Adam/m_53_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_53_1"
}
node {
  name: "training/Adam/m_53_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_53_1"
  input: "training/Adam/m_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_53_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_53_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_54/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_54"
  op: "Fill"
  input: "training/Adam/m_54/shape_as_tensor"
  input: "training/Adam/m_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_54_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_54_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_54_1"
    }
  }
}
node {
  name: "training/Adam/m_54_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_54_1"
}
node {
  name: "training/Adam/m_54_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_54_1"
  input: "training/Adam/m_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_54_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_54_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_55_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_55_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_55_1"
    }
  }
}
node {
  name: "training/Adam/m_55_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_55_1"
}
node {
  name: "training/Adam/m_55_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_55_1"
  input: "training/Adam/m_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_55_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_55_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_56_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_56_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_56_1"
    }
  }
}
node {
  name: "training/Adam/m_56_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_56_1"
}
node {
  name: "training/Adam/m_56_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_56_1"
  input: "training/Adam/m_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_56_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_56_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_57/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_57/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_57"
  op: "Fill"
  input: "training/Adam/m_57/shape_as_tensor"
  input: "training/Adam/m_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_57_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_57_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_57_1"
    }
  }
}
node {
  name: "training/Adam/m_57_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_57_1"
}
node {
  name: "training/Adam/m_57_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_57_1"
  input: "training/Adam/m_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_57_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_57_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_58_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_58_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_58_1"
    }
  }
}
node {
  name: "training/Adam/m_58_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_58_1"
}
node {
  name: "training/Adam/m_58_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_58_1"
  input: "training/Adam/m_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_58_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_58_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_59_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_59_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_59_1"
    }
  }
}
node {
  name: "training/Adam/m_59_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_59_1"
}
node {
  name: "training/Adam/m_59_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_59_1"
  input: "training/Adam/m_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_59_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_59_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_60/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_60/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_60"
  op: "Fill"
  input: "training/Adam/m_60/shape_as_tensor"
  input: "training/Adam/m_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_60_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_60_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_60_1"
    }
  }
}
node {
  name: "training/Adam/m_60_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_60_1"
}
node {
  name: "training/Adam/m_60_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_60_1"
  input: "training/Adam/m_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_60_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_60_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_61_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_61_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_61_1"
    }
  }
}
node {
  name: "training/Adam/m_61_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_61_1"
}
node {
  name: "training/Adam/m_61_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_61_1"
  input: "training/Adam/m_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_61_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_61_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_62_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_62_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_62_1"
    }
  }
}
node {
  name: "training/Adam/m_62_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_62_1"
}
node {
  name: "training/Adam/m_62_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_62_1"
  input: "training/Adam/m_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_62_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_62_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_63/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_63/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_63"
  op: "Fill"
  input: "training/Adam/m_63/shape_as_tensor"
  input: "training/Adam/m_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_63_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_63_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_63_1"
    }
  }
}
node {
  name: "training/Adam/m_63_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_63_1"
}
node {
  name: "training/Adam/m_63_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_63_1"
  input: "training/Adam/m_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_63_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_63_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_64_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_64_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_64_1"
    }
  }
}
node {
  name: "training/Adam/m_64_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_64_1"
}
node {
  name: "training/Adam/m_64_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_64_1"
  input: "training/Adam/m_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_64_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_64_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_65_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_65_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_65_1"
    }
  }
}
node {
  name: "training/Adam/m_65_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_65_1"
}
node {
  name: "training/Adam/m_65_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_65_1"
  input: "training/Adam/m_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_65_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_65_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_66/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_66"
  op: "Fill"
  input: "training/Adam/m_66/shape_as_tensor"
  input: "training/Adam/m_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_66_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_66_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_66_1"
    }
  }
}
node {
  name: "training/Adam/m_66_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_66_1"
}
node {
  name: "training/Adam/m_66_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_66_1"
  input: "training/Adam/m_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_66_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_66_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_67_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_67_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_67_1"
    }
  }
}
node {
  name: "training/Adam/m_67_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_67_1"
}
node {
  name: "training/Adam/m_67_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_67_1"
  input: "training/Adam/m_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_67_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_67_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_68_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_68_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_68_1"
    }
  }
}
node {
  name: "training/Adam/m_68_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_68_1"
}
node {
  name: "training/Adam/m_68_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_68_1"
  input: "training/Adam/m_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_68_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_68_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_69/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_69/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_69"
  op: "Fill"
  input: "training/Adam/m_69/shape_as_tensor"
  input: "training/Adam/m_69/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_69_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_69_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_69_1"
    }
  }
}
node {
  name: "training/Adam/m_69_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_69_1"
}
node {
  name: "training/Adam/m_69_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_69_1"
  input: "training/Adam/m_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_69_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_69_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_70_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_70_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_70_1"
    }
  }
}
node {
  name: "training/Adam/m_70_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_70_1"
}
node {
  name: "training/Adam/m_70_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_70_1"
  input: "training/Adam/m_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_70_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_70_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_71_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_71_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_71_1"
    }
  }
}
node {
  name: "training/Adam/m_71_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_71_1"
}
node {
  name: "training/Adam/m_71_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_71_1"
  input: "training/Adam/m_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_71_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_71_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_72/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_72"
  op: "Fill"
  input: "training/Adam/m_72/shape_as_tensor"
  input: "training/Adam/m_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_72_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_72_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_72_1"
    }
  }
}
node {
  name: "training/Adam/m_72_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_72_1"
}
node {
  name: "training/Adam/m_72_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_72_1"
  input: "training/Adam/m_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_72_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_72_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_73_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_73_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_73_1"
    }
  }
}
node {
  name: "training/Adam/m_73_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_73_1"
}
node {
  name: "training/Adam/m_73_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_73_1"
  input: "training/Adam/m_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_73_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_73_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_74_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_74_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_74_1"
    }
  }
}
node {
  name: "training/Adam/m_74_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_74_1"
}
node {
  name: "training/Adam/m_74_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_74_1"
  input: "training/Adam/m_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_74_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_74_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_75/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_75/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_75"
  op: "Fill"
  input: "training/Adam/m_75/shape_as_tensor"
  input: "training/Adam/m_75/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_75_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_75_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_75_1"
    }
  }
}
node {
  name: "training/Adam/m_75_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_75_1"
}
node {
  name: "training/Adam/m_75_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_75_1"
  input: "training/Adam/m_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_75_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_75_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_76_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_76_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_76_1"
    }
  }
}
node {
  name: "training/Adam/m_76_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_76_1"
}
node {
  name: "training/Adam/m_76_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_76_1"
  input: "training/Adam/m_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_76_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_76_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_77_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_77_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_77_1"
    }
  }
}
node {
  name: "training/Adam/m_77_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_77_1"
}
node {
  name: "training/Adam/m_77_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_77_1"
  input: "training/Adam/m_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_77_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_77_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_78/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_78/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_78"
  op: "Fill"
  input: "training/Adam/m_78/shape_as_tensor"
  input: "training/Adam/m_78/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_78_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_78_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_78_1"
    }
  }
}
node {
  name: "training/Adam/m_78_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_78_1"
}
node {
  name: "training/Adam/m_78_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_78_1"
  input: "training/Adam/m_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_78_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_78_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_79_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_79_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_79_1"
    }
  }
}
node {
  name: "training/Adam/m_79_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_79_1"
}
node {
  name: "training/Adam/m_79_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_79_1"
  input: "training/Adam/m_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_79_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_79_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_80_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_80_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_80_1"
    }
  }
}
node {
  name: "training/Adam/m_80_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_80_1"
}
node {
  name: "training/Adam/m_80_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_80_1"
  input: "training/Adam/m_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_80_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_80_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_81/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\0007\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_81/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_81"
  op: "Fill"
  input: "training/Adam/m_81/shape_as_tensor"
  input: "training/Adam/m_81/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_81_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_81_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_81_1"
    }
  }
}
node {
  name: "training/Adam/m_81_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_81_1"
}
node {
  name: "training/Adam/m_81_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_81_1"
  input: "training/Adam/m_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_81_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_81_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_82_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_82_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_82_1"
    }
  }
}
node {
  name: "training/Adam/m_82_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_82_1"
}
node {
  name: "training/Adam/m_82_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_82_1"
  input: "training/Adam/m_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_82_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_82_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_83_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_83_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_83_1"
    }
  }
}
node {
  name: "training/Adam/m_83_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_83_1"
}
node {
  name: "training/Adam/m_83_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_83_1"
  input: "training/Adam/m_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_83_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_83_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_84_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_84_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_84_1"
    }
  }
}
node {
  name: "training/Adam/m_84_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_84_1"
}
node {
  name: "training/Adam/m_84_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_84_1"
  input: "training/Adam/m_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_84_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_84_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_85/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000h\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/m_85/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_85"
  op: "Fill"
  input: "training/Adam/m_85/shape_as_tensor"
  input: "training/Adam/m_85/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/m_85_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_85_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_85_1"
    }
  }
}
node {
  name: "training/Adam/m_85_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_85_1"
}
node {
  name: "training/Adam/m_85_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_85_1"
  input: "training/Adam/m_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_85_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_85_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 360
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/m_86_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_86_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/m_86_1"
    }
  }
}
node {
  name: "training/Adam/m_86_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_86_1"
}
node {
  name: "training/Adam/m_86_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/m_86_1"
  input: "training/Adam/m_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/m_86_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_86_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/m_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_0_1"
    }
  }
}
node {
  name: "training/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_0_1"
}
node {
  name: "training/Adam/v_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "training/Adam/v_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_1_1"
    }
  }
}
node {
  name: "training/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_1_1"
}
node {
  name: "training/Adam/v_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "training/Adam/v_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_2_1"
    }
  }
}
node {
  name: "training/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_2_1"
}
node {
  name: "training/Adam/v_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "training/Adam/v_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_3_1"
    }
  }
}
node {
  name: "training/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_3_1"
}
node {
  name: "training/Adam/v_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "training/Adam/v_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_4_1"
    }
  }
}
node {
  name: "training/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_4_1"
}
node {
  name: "training/Adam/v_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "training/Adam/v_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_5_1"
    }
  }
}
node {
  name: "training/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_5_1"
}
node {
  name: "training/Adam/v_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "training/Adam/v_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_6_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_6_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_6_1"
    }
  }
}
node {
  name: "training/Adam/v_6_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_6_1"
}
node {
  name: "training/Adam/v_6_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_6_1"
  input: "training/Adam/v_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_6_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_6_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_7_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_7_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_7_1"
    }
  }
}
node {
  name: "training/Adam/v_7_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_7_1"
}
node {
  name: "training/Adam/v_7_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_7_1"
  input: "training/Adam/v_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_7_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_7_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_8_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_8_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_8_1"
    }
  }
}
node {
  name: "training/Adam/v_8_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_8_1"
}
node {
  name: "training/Adam/v_8_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_8_1"
  input: "training/Adam/v_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_8_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_8_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_9_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_9_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_9_1"
    }
  }
}
node {
  name: "training/Adam/v_9_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_9_1"
}
node {
  name: "training/Adam/v_9_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_9_1"
  input: "training/Adam/v_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_9_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_9_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_10_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_10_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_10_1"
    }
  }
}
node {
  name: "training/Adam/v_10_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_10_1"
}
node {
  name: "training/Adam/v_10_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_10_1"
  input: "training/Adam/v_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_10_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_10_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_11_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_11_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_11_1"
    }
  }
}
node {
  name: "training/Adam/v_11_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_11_1"
}
node {
  name: "training/Adam/v_11_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_11_1"
  input: "training/Adam/v_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_11_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_11_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_12"
  op: "Fill"
  input: "training/Adam/v_12/shape_as_tensor"
  input: "training/Adam/v_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_12_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_12_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_12_1"
    }
  }
}
node {
  name: "training/Adam/v_12_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_12_1"
}
node {
  name: "training/Adam/v_12_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_12_1"
  input: "training/Adam/v_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_12_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_12_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_13_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_13_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_13_1"
    }
  }
}
node {
  name: "training/Adam/v_13_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_13_1"
}
node {
  name: "training/Adam/v_13_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_13_1"
  input: "training/Adam/v_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_13_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_13_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_14_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_14_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_14_1"
    }
  }
}
node {
  name: "training/Adam/v_14_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_14_1"
}
node {
  name: "training/Adam/v_14_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_14_1"
  input: "training/Adam/v_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_14_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_14_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_15_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_15_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_15_1"
    }
  }
}
node {
  name: "training/Adam/v_15_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_15_1"
}
node {
  name: "training/Adam/v_15_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_15_1"
  input: "training/Adam/v_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_15_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_15_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_16_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_16_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_16_1"
    }
  }
}
node {
  name: "training/Adam/v_16_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_16_1"
}
node {
  name: "training/Adam/v_16_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_16_1"
  input: "training/Adam/v_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_16_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_16_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_17_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_17_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_17_1"
    }
  }
}
node {
  name: "training/Adam/v_17_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_17_1"
}
node {
  name: "training/Adam/v_17_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_17_1"
  input: "training/Adam/v_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_17_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_17_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_18"
  op: "Fill"
  input: "training/Adam/v_18/shape_as_tensor"
  input: "training/Adam/v_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_18_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_18_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_18_1"
    }
  }
}
node {
  name: "training/Adam/v_18_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_18_1"
}
node {
  name: "training/Adam/v_18_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_18_1"
  input: "training/Adam/v_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_18_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_18_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_19_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_19_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_19_1"
    }
  }
}
node {
  name: "training/Adam/v_19_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_19_1"
}
node {
  name: "training/Adam/v_19_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_19_1"
  input: "training/Adam/v_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_19_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_19_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_20_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_20_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_20_1"
    }
  }
}
node {
  name: "training/Adam/v_20_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_20_1"
}
node {
  name: "training/Adam/v_20_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_20_1"
  input: "training/Adam/v_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_20_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_20_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_21_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_21_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_21_1"
    }
  }
}
node {
  name: "training/Adam/v_21_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_21_1"
}
node {
  name: "training/Adam/v_21_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_21_1"
  input: "training/Adam/v_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_21_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_21_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_22_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_22_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_22_1"
    }
  }
}
node {
  name: "training/Adam/v_22_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_22_1"
}
node {
  name: "training/Adam/v_22_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_22_1"
  input: "training/Adam/v_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_22_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_22_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_23_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_23_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_23_1"
    }
  }
}
node {
  name: "training/Adam/v_23_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_23_1"
}
node {
  name: "training/Adam/v_23_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_23_1"
  input: "training/Adam/v_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_23_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_23_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_24/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_24"
  op: "Fill"
  input: "training/Adam/v_24/shape_as_tensor"
  input: "training/Adam/v_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_24_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_24_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_24_1"
    }
  }
}
node {
  name: "training/Adam/v_24_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_24_1"
}
node {
  name: "training/Adam/v_24_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_24_1"
  input: "training/Adam/v_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_24_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_24_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_25_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_25_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_25_1"
    }
  }
}
node {
  name: "training/Adam/v_25_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_25_1"
}
node {
  name: "training/Adam/v_25_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_25_1"
  input: "training/Adam/v_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_25_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_25_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_26_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_26_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_26_1"
    }
  }
}
node {
  name: "training/Adam/v_26_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_26_1"
}
node {
  name: "training/Adam/v_26_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_26_1"
  input: "training/Adam/v_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_26_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_26_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_27/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_27"
  op: "Fill"
  input: "training/Adam/v_27/shape_as_tensor"
  input: "training/Adam/v_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_27_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_27_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_27_1"
    }
  }
}
node {
  name: "training/Adam/v_27_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_27_1"
}
node {
  name: "training/Adam/v_27_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_27_1"
  input: "training/Adam/v_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_27_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_27_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_28_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_28_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_28_1"
    }
  }
}
node {
  name: "training/Adam/v_28_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_28_1"
}
node {
  name: "training/Adam/v_28_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_28_1"
  input: "training/Adam/v_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_28_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_28_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_29_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_29_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_29_1"
    }
  }
}
node {
  name: "training/Adam/v_29_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_29_1"
}
node {
  name: "training/Adam/v_29_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_29_1"
  input: "training/Adam/v_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_29_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_29_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_30/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_30"
  op: "Fill"
  input: "training/Adam/v_30/shape_as_tensor"
  input: "training/Adam/v_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_30_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_30_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_30_1"
    }
  }
}
node {
  name: "training/Adam/v_30_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_30_1"
}
node {
  name: "training/Adam/v_30_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_30_1"
  input: "training/Adam/v_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_30_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_30_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_31_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_31_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_31_1"
    }
  }
}
node {
  name: "training/Adam/v_31_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_31_1"
}
node {
  name: "training/Adam/v_31_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_31_1"
  input: "training/Adam/v_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_31_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_31_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_32_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_32_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_32_1"
    }
  }
}
node {
  name: "training/Adam/v_32_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_32_1"
}
node {
  name: "training/Adam/v_32_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_32_1"
  input: "training/Adam/v_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_32_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_32_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_33/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_33"
  op: "Fill"
  input: "training/Adam/v_33/shape_as_tensor"
  input: "training/Adam/v_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_33_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_33_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_33_1"
    }
  }
}
node {
  name: "training/Adam/v_33_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_33_1"
}
node {
  name: "training/Adam/v_33_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_33_1"
  input: "training/Adam/v_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_33_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_33_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_34_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_34_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_34_1"
    }
  }
}
node {
  name: "training/Adam/v_34_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_34_1"
}
node {
  name: "training/Adam/v_34_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_34_1"
  input: "training/Adam/v_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_34_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_34_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_35_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_35_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_35_1"
    }
  }
}
node {
  name: "training/Adam/v_35_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_35_1"
}
node {
  name: "training/Adam/v_35_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_35_1"
  input: "training/Adam/v_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_35_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_35_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_36/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_36"
  op: "Fill"
  input: "training/Adam/v_36/shape_as_tensor"
  input: "training/Adam/v_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_36_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_36_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_36_1"
    }
  }
}
node {
  name: "training/Adam/v_36_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_36_1"
}
node {
  name: "training/Adam/v_36_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_36_1"
  input: "training/Adam/v_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_36_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_36_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_37_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_37_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_37_1"
    }
  }
}
node {
  name: "training/Adam/v_37_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_37_1"
}
node {
  name: "training/Adam/v_37_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_37_1"
  input: "training/Adam/v_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_37_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_37_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_38_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_38_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_38_1"
    }
  }
}
node {
  name: "training/Adam/v_38_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_38_1"
}
node {
  name: "training/Adam/v_38_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_38_1"
  input: "training/Adam/v_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_38_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_38_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_39/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_39"
  op: "Fill"
  input: "training/Adam/v_39/shape_as_tensor"
  input: "training/Adam/v_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_39_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_39_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_39_1"
    }
  }
}
node {
  name: "training/Adam/v_39_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_39_1"
}
node {
  name: "training/Adam/v_39_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_39_1"
  input: "training/Adam/v_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_39_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_39_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_40_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_40_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_40_1"
    }
  }
}
node {
  name: "training/Adam/v_40_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_40_1"
}
node {
  name: "training/Adam/v_40_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_40_1"
  input: "training/Adam/v_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_40_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_40_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_41_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_41_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_41_1"
    }
  }
}
node {
  name: "training/Adam/v_41_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_41_1"
}
node {
  name: "training/Adam/v_41_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_41_1"
  input: "training/Adam/v_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_41_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_41_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_42/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_42"
  op: "Fill"
  input: "training/Adam/v_42/shape_as_tensor"
  input: "training/Adam/v_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_42_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_42_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_42_1"
    }
  }
}
node {
  name: "training/Adam/v_42_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_42_1"
}
node {
  name: "training/Adam/v_42_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_42_1"
  input: "training/Adam/v_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_42_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_42_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_43_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_43_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_43_1"
    }
  }
}
node {
  name: "training/Adam/v_43_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_43_1"
}
node {
  name: "training/Adam/v_43_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_43_1"
  input: "training/Adam/v_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_43_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_43_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_44_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_44_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_44_1"
    }
  }
}
node {
  name: "training/Adam/v_44_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_44_1"
}
node {
  name: "training/Adam/v_44_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_44_1"
  input: "training/Adam/v_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_44_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_44_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_45/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_45"
  op: "Fill"
  input: "training/Adam/v_45/shape_as_tensor"
  input: "training/Adam/v_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_45_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_45_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_45_1"
    }
  }
}
node {
  name: "training/Adam/v_45_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_45_1"
}
node {
  name: "training/Adam/v_45_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_45_1"
  input: "training/Adam/v_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_45_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_45_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_46_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_46_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_46_1"
    }
  }
}
node {
  name: "training/Adam/v_46_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_46_1"
}
node {
  name: "training/Adam/v_46_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_46_1"
  input: "training/Adam/v_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_46_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_46_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_47_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_47_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_47_1"
    }
  }
}
node {
  name: "training/Adam/v_47_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_47_1"
}
node {
  name: "training/Adam/v_47_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_47_1"
  input: "training/Adam/v_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_47_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_47_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_48/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_48"
  op: "Fill"
  input: "training/Adam/v_48/shape_as_tensor"
  input: "training/Adam/v_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_48_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_48_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_48_1"
    }
  }
}
node {
  name: "training/Adam/v_48_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_48_1"
}
node {
  name: "training/Adam/v_48_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_48_1"
  input: "training/Adam/v_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_48_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_48_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_49_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_49_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_49_1"
    }
  }
}
node {
  name: "training/Adam/v_49_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_49_1"
}
node {
  name: "training/Adam/v_49_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_49_1"
  input: "training/Adam/v_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_49_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_49_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_50_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_50_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_50_1"
    }
  }
}
node {
  name: "training/Adam/v_50_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_50_1"
}
node {
  name: "training/Adam/v_50_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_50_1"
  input: "training/Adam/v_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_50_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_50_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_51/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_51/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_51"
  op: "Fill"
  input: "training/Adam/v_51/shape_as_tensor"
  input: "training/Adam/v_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_51_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_51_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_51_1"
    }
  }
}
node {
  name: "training/Adam/v_51_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_51_1"
}
node {
  name: "training/Adam/v_51_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_51_1"
  input: "training/Adam/v_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_51_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_51_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_52_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_52_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_52_1"
    }
  }
}
node {
  name: "training/Adam/v_52_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_52_1"
}
node {
  name: "training/Adam/v_52_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_52_1"
  input: "training/Adam/v_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_52_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_52_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_53_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_53_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_53_1"
    }
  }
}
node {
  name: "training/Adam/v_53_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_53_1"
}
node {
  name: "training/Adam/v_53_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_53_1"
  input: "training/Adam/v_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_53_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_53_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_54/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_54"
  op: "Fill"
  input: "training/Adam/v_54/shape_as_tensor"
  input: "training/Adam/v_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_54_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_54_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_54_1"
    }
  }
}
node {
  name: "training/Adam/v_54_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_54_1"
}
node {
  name: "training/Adam/v_54_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_54_1"
  input: "training/Adam/v_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_54_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_54_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_55_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_55_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_55_1"
    }
  }
}
node {
  name: "training/Adam/v_55_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_55_1"
}
node {
  name: "training/Adam/v_55_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_55_1"
  input: "training/Adam/v_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_55_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_55_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_56_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_56_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_56_1"
    }
  }
}
node {
  name: "training/Adam/v_56_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_56_1"
}
node {
  name: "training/Adam/v_56_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_56_1"
  input: "training/Adam/v_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_56_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_56_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_57/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_57/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_57"
  op: "Fill"
  input: "training/Adam/v_57/shape_as_tensor"
  input: "training/Adam/v_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_57_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_57_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_57_1"
    }
  }
}
node {
  name: "training/Adam/v_57_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_57_1"
}
node {
  name: "training/Adam/v_57_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_57_1"
  input: "training/Adam/v_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_57_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_57_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_58_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_58_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_58_1"
    }
  }
}
node {
  name: "training/Adam/v_58_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_58_1"
}
node {
  name: "training/Adam/v_58_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_58_1"
  input: "training/Adam/v_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_58_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_58_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_59_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_59_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_59_1"
    }
  }
}
node {
  name: "training/Adam/v_59_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_59_1"
}
node {
  name: "training/Adam/v_59_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_59_1"
  input: "training/Adam/v_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_59_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_59_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_60/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_60/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_60"
  op: "Fill"
  input: "training/Adam/v_60/shape_as_tensor"
  input: "training/Adam/v_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_60_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_60_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_60_1"
    }
  }
}
node {
  name: "training/Adam/v_60_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_60_1"
}
node {
  name: "training/Adam/v_60_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_60_1"
  input: "training/Adam/v_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_60_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_60_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_61_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_61_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_61_1"
    }
  }
}
node {
  name: "training/Adam/v_61_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_61_1"
}
node {
  name: "training/Adam/v_61_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_61_1"
  input: "training/Adam/v_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_61_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_61_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_62_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_62_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_62_1"
    }
  }
}
node {
  name: "training/Adam/v_62_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_62_1"
}
node {
  name: "training/Adam/v_62_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_62_1"
  input: "training/Adam/v_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_62_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_62_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_63/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_63/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_63"
  op: "Fill"
  input: "training/Adam/v_63/shape_as_tensor"
  input: "training/Adam/v_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_63_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_63_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_63_1"
    }
  }
}
node {
  name: "training/Adam/v_63_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_63_1"
}
node {
  name: "training/Adam/v_63_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_63_1"
  input: "training/Adam/v_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_63_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_63_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_64_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_64_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_64_1"
    }
  }
}
node {
  name: "training/Adam/v_64_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_64_1"
}
node {
  name: "training/Adam/v_64_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_64_1"
  input: "training/Adam/v_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_64_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_64_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_65_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_65_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_65_1"
    }
  }
}
node {
  name: "training/Adam/v_65_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_65_1"
}
node {
  name: "training/Adam/v_65_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_65_1"
  input: "training/Adam/v_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_65_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_65_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_66/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_66"
  op: "Fill"
  input: "training/Adam/v_66/shape_as_tensor"
  input: "training/Adam/v_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_66_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_66_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_66_1"
    }
  }
}
node {
  name: "training/Adam/v_66_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_66_1"
}
node {
  name: "training/Adam/v_66_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_66_1"
  input: "training/Adam/v_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_66_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_66_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_67_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_67_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_67_1"
    }
  }
}
node {
  name: "training/Adam/v_67_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_67_1"
}
node {
  name: "training/Adam/v_67_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_67_1"
  input: "training/Adam/v_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_67_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_67_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_68_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_68_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_68_1"
    }
  }
}
node {
  name: "training/Adam/v_68_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_68_1"
}
node {
  name: "training/Adam/v_68_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_68_1"
  input: "training/Adam/v_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_68_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_68_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_69/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_69/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_69"
  op: "Fill"
  input: "training/Adam/v_69/shape_as_tensor"
  input: "training/Adam/v_69/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_69_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_69_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_69_1"
    }
  }
}
node {
  name: "training/Adam/v_69_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_69_1"
}
node {
  name: "training/Adam/v_69_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_69_1"
  input: "training/Adam/v_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_69_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_69_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_70_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_70_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_70_1"
    }
  }
}
node {
  name: "training/Adam/v_70_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_70_1"
}
node {
  name: "training/Adam/v_70_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_70_1"
  input: "training/Adam/v_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_70_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_70_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_71_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_71_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_71_1"
    }
  }
}
node {
  name: "training/Adam/v_71_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_71_1"
}
node {
  name: "training/Adam/v_71_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_71_1"
  input: "training/Adam/v_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_71_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_71_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_72/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_72"
  op: "Fill"
  input: "training/Adam/v_72/shape_as_tensor"
  input: "training/Adam/v_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_72_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_72_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_72_1"
    }
  }
}
node {
  name: "training/Adam/v_72_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_72_1"
}
node {
  name: "training/Adam/v_72_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_72_1"
  input: "training/Adam/v_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_72_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_72_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_73_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_73_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_73_1"
    }
  }
}
node {
  name: "training/Adam/v_73_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_73_1"
}
node {
  name: "training/Adam/v_73_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_73_1"
  input: "training/Adam/v_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_73_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_73_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_74_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_74_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_74_1"
    }
  }
}
node {
  name: "training/Adam/v_74_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_74_1"
}
node {
  name: "training/Adam/v_74_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_74_1"
  input: "training/Adam/v_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_74_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_74_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_75/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_75/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_75"
  op: "Fill"
  input: "training/Adam/v_75/shape_as_tensor"
  input: "training/Adam/v_75/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_75_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_75_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_75_1"
    }
  }
}
node {
  name: "training/Adam/v_75_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_75_1"
}
node {
  name: "training/Adam/v_75_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_75_1"
  input: "training/Adam/v_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_75_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_75_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_76_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_76_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_76_1"
    }
  }
}
node {
  name: "training/Adam/v_76_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_76_1"
}
node {
  name: "training/Adam/v_76_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_76_1"
  input: "training/Adam/v_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_76_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_76_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_77_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_77_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_77_1"
    }
  }
}
node {
  name: "training/Adam/v_77_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_77_1"
}
node {
  name: "training/Adam/v_77_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_77_1"
  input: "training/Adam/v_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_77_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_77_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_78/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_78/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_78"
  op: "Fill"
  input: "training/Adam/v_78/shape_as_tensor"
  input: "training/Adam/v_78/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_78_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_78_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_78_1"
    }
  }
}
node {
  name: "training/Adam/v_78_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_78_1"
}
node {
  name: "training/Adam/v_78_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_78_1"
  input: "training/Adam/v_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_78_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_78_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_79_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_79_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_79_1"
    }
  }
}
node {
  name: "training/Adam/v_79_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_79_1"
}
node {
  name: "training/Adam/v_79_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_79_1"
  input: "training/Adam/v_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_79_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_79_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_80_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_80_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_80_1"
    }
  }
}
node {
  name: "training/Adam/v_80_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_80_1"
}
node {
  name: "training/Adam/v_80_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_80_1"
  input: "training/Adam/v_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_80_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_80_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_81/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\0007\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_81/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_81"
  op: "Fill"
  input: "training/Adam/v_81/shape_as_tensor"
  input: "training/Adam/v_81/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_81_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_81_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_81_1"
    }
  }
}
node {
  name: "training/Adam/v_81_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_81_1"
}
node {
  name: "training/Adam/v_81_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_81_1"
  input: "training/Adam/v_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_81_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_81_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_82_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_82_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_82_1"
    }
  }
}
node {
  name: "training/Adam/v_82_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_82_1"
}
node {
  name: "training/Adam/v_82_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_82_1"
  input: "training/Adam/v_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_82_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_82_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_83_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_83_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_83_1"
    }
  }
}
node {
  name: "training/Adam/v_83_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_83_1"
}
node {
  name: "training/Adam/v_83_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_83_1"
  input: "training/Adam/v_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_83_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_83_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_84_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_84_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_84_1"
    }
  }
}
node {
  name: "training/Adam/v_84_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_84_1"
}
node {
  name: "training/Adam/v_84_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_84_1"
  input: "training/Adam/v_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_84_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_84_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_85/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000h\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/v_85/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_85"
  op: "Fill"
  input: "training/Adam/v_85/shape_as_tensor"
  input: "training/Adam/v_85/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/v_85_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_85_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_85_1"
    }
  }
}
node {
  name: "training/Adam/v_85_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_85_1"
}
node {
  name: "training/Adam/v_85_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_85_1"
  input: "training/Adam/v_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_85_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_85_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 360
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/v_86_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_86_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/v_86_1"
    }
  }
}
node {
  name: "training/Adam/v_86_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_86_1"
}
node {
  name: "training/Adam/v_86_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/v_86_1"
  input: "training/Adam/v_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/v_86_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_86_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/v_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_0/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_0"
  op: "Fill"
  input: "training/Adam/vhat_0/shape_as_tensor"
  input: "training/Adam/vhat_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_0_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_0_1"
    }
  }
}
node {
  name: "training/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_0_1"
}
node {
  name: "training/Adam/vhat_0_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "training/Adam/vhat_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_0_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_0_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_0_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_1"
  op: "Fill"
  input: "training/Adam/vhat_1/shape_as_tensor"
  input: "training/Adam/vhat_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_1_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_1_1"
    }
  }
}
node {
  name: "training/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_1_1"
}
node {
  name: "training/Adam/vhat_1_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "training/Adam/vhat_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_1_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_1_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_1_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_2"
  op: "Fill"
  input: "training/Adam/vhat_2/shape_as_tensor"
  input: "training/Adam/vhat_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_2_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_2_1"
    }
  }
}
node {
  name: "training/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_2_1"
}
node {
  name: "training/Adam/vhat_2_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "training/Adam/vhat_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_2_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_2_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_2_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_3"
  op: "Fill"
  input: "training/Adam/vhat_3/shape_as_tensor"
  input: "training/Adam/vhat_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_3_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_3_1"
    }
  }
}
node {
  name: "training/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_3_1"
}
node {
  name: "training/Adam/vhat_3_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "training/Adam/vhat_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_3_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_3_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_3_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_4"
  op: "Fill"
  input: "training/Adam/vhat_4/shape_as_tensor"
  input: "training/Adam/vhat_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_4_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_4_1"
    }
  }
}
node {
  name: "training/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_4_1"
}
node {
  name: "training/Adam/vhat_4_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "training/Adam/vhat_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_4_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_4_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_4_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_5/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_5"
  op: "Fill"
  input: "training/Adam/vhat_5/shape_as_tensor"
  input: "training/Adam/vhat_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_5_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_5_1"
    }
  }
}
node {
  name: "training/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_5_1"
}
node {
  name: "training/Adam/vhat_5_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "training/Adam/vhat_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_5_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_5_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_5_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_6/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_6"
  op: "Fill"
  input: "training/Adam/vhat_6/shape_as_tensor"
  input: "training/Adam/vhat_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_6_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_6_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_6_1"
    }
  }
}
node {
  name: "training/Adam/vhat_6_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_6_1"
}
node {
  name: "training/Adam/vhat_6_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_6_1"
  input: "training/Adam/vhat_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_6_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_6_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_6_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_7/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_7"
  op: "Fill"
  input: "training/Adam/vhat_7/shape_as_tensor"
  input: "training/Adam/vhat_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_7_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_7_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_7_1"
    }
  }
}
node {
  name: "training/Adam/vhat_7_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_7_1"
}
node {
  name: "training/Adam/vhat_7_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_7_1"
  input: "training/Adam/vhat_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_7_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_7_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_7_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_8/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_8"
  op: "Fill"
  input: "training/Adam/vhat_8/shape_as_tensor"
  input: "training/Adam/vhat_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_8_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_8_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_8_1"
    }
  }
}
node {
  name: "training/Adam/vhat_8_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_8_1"
}
node {
  name: "training/Adam/vhat_8_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_8_1"
  input: "training/Adam/vhat_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_8_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_8_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_8_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_9/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_9"
  op: "Fill"
  input: "training/Adam/vhat_9/shape_as_tensor"
  input: "training/Adam/vhat_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_9_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_9_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_9_1"
    }
  }
}
node {
  name: "training/Adam/vhat_9_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_9_1"
}
node {
  name: "training/Adam/vhat_9_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_9_1"
  input: "training/Adam/vhat_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_9_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_9_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_9_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_10/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_10"
  op: "Fill"
  input: "training/Adam/vhat_10/shape_as_tensor"
  input: "training/Adam/vhat_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_10_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_10_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_10_1"
    }
  }
}
node {
  name: "training/Adam/vhat_10_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_10_1"
}
node {
  name: "training/Adam/vhat_10_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_10_1"
  input: "training/Adam/vhat_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_10_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_10_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_10_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_11/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_11"
  op: "Fill"
  input: "training/Adam/vhat_11/shape_as_tensor"
  input: "training/Adam/vhat_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_11_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_11_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_11_1"
    }
  }
}
node {
  name: "training/Adam/vhat_11_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_11_1"
}
node {
  name: "training/Adam/vhat_11_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_11_1"
  input: "training/Adam/vhat_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_11_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_11_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_11_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_12"
  op: "Fill"
  input: "training/Adam/vhat_12/shape_as_tensor"
  input: "training/Adam/vhat_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_12_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_12_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_12_1"
    }
  }
}
node {
  name: "training/Adam/vhat_12_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_12_1"
}
node {
  name: "training/Adam/vhat_12_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_12_1"
  input: "training/Adam/vhat_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_12_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_12_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_12_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_13/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_13"
  op: "Fill"
  input: "training/Adam/vhat_13/shape_as_tensor"
  input: "training/Adam/vhat_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_13_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_13_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_13_1"
    }
  }
}
node {
  name: "training/Adam/vhat_13_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_13_1"
}
node {
  name: "training/Adam/vhat_13_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_13_1"
  input: "training/Adam/vhat_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_13_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_13_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_13_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_14/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_14"
  op: "Fill"
  input: "training/Adam/vhat_14/shape_as_tensor"
  input: "training/Adam/vhat_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_14_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_14_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_14_1"
    }
  }
}
node {
  name: "training/Adam/vhat_14_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_14_1"
}
node {
  name: "training/Adam/vhat_14_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_14_1"
  input: "training/Adam/vhat_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_14_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_14_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_14_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_15/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_15"
  op: "Fill"
  input: "training/Adam/vhat_15/shape_as_tensor"
  input: "training/Adam/vhat_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_15_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_15_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_15_1"
    }
  }
}
node {
  name: "training/Adam/vhat_15_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_15_1"
}
node {
  name: "training/Adam/vhat_15_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_15_1"
  input: "training/Adam/vhat_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_15_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_15_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_15_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_16/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_16"
  op: "Fill"
  input: "training/Adam/vhat_16/shape_as_tensor"
  input: "training/Adam/vhat_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_16_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_16_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_16_1"
    }
  }
}
node {
  name: "training/Adam/vhat_16_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_16_1"
}
node {
  name: "training/Adam/vhat_16_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_16_1"
  input: "training/Adam/vhat_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_16_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_16_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_16_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_17/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_17"
  op: "Fill"
  input: "training/Adam/vhat_17/shape_as_tensor"
  input: "training/Adam/vhat_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_17_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_17_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_17_1"
    }
  }
}
node {
  name: "training/Adam/vhat_17_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_17_1"
}
node {
  name: "training/Adam/vhat_17_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_17_1"
  input: "training/Adam/vhat_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_17_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_17_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_17_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_18"
  op: "Fill"
  input: "training/Adam/vhat_18/shape_as_tensor"
  input: "training/Adam/vhat_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_18_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_18_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_18_1"
    }
  }
}
node {
  name: "training/Adam/vhat_18_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_18_1"
}
node {
  name: "training/Adam/vhat_18_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_18_1"
  input: "training/Adam/vhat_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_18_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_18_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_18_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_19/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_19"
  op: "Fill"
  input: "training/Adam/vhat_19/shape_as_tensor"
  input: "training/Adam/vhat_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_19_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_19_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_19_1"
    }
  }
}
node {
  name: "training/Adam/vhat_19_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_19_1"
}
node {
  name: "training/Adam/vhat_19_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_19_1"
  input: "training/Adam/vhat_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_19_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_19_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_19_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_20/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_20"
  op: "Fill"
  input: "training/Adam/vhat_20/shape_as_tensor"
  input: "training/Adam/vhat_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_20_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_20_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_20_1"
    }
  }
}
node {
  name: "training/Adam/vhat_20_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_20_1"
}
node {
  name: "training/Adam/vhat_20_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_20_1"
  input: "training/Adam/vhat_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_20_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_20_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_20_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_21/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_21"
  op: "Fill"
  input: "training/Adam/vhat_21/shape_as_tensor"
  input: "training/Adam/vhat_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_21_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_21_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_21_1"
    }
  }
}
node {
  name: "training/Adam/vhat_21_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_21_1"
}
node {
  name: "training/Adam/vhat_21_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_21_1"
  input: "training/Adam/vhat_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_21_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_21_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_21_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_22/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_22"
  op: "Fill"
  input: "training/Adam/vhat_22/shape_as_tensor"
  input: "training/Adam/vhat_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_22_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_22_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_22_1"
    }
  }
}
node {
  name: "training/Adam/vhat_22_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_22_1"
}
node {
  name: "training/Adam/vhat_22_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_22_1"
  input: "training/Adam/vhat_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_22_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_22_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_22_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_23/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_23/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_23"
  op: "Fill"
  input: "training/Adam/vhat_23/shape_as_tensor"
  input: "training/Adam/vhat_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_23_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_23_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_23_1"
    }
  }
}
node {
  name: "training/Adam/vhat_23_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_23_1"
}
node {
  name: "training/Adam/vhat_23_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_23_1"
  input: "training/Adam/vhat_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_23_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_23_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_23_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_24/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_24"
  op: "Fill"
  input: "training/Adam/vhat_24/shape_as_tensor"
  input: "training/Adam/vhat_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_24_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_24_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_24_1"
    }
  }
}
node {
  name: "training/Adam/vhat_24_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_24_1"
}
node {
  name: "training/Adam/vhat_24_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_24_1"
  input: "training/Adam/vhat_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_24_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_24_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_24_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_25/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_25/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_25"
  op: "Fill"
  input: "training/Adam/vhat_25/shape_as_tensor"
  input: "training/Adam/vhat_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_25_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_25_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_25_1"
    }
  }
}
node {
  name: "training/Adam/vhat_25_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_25_1"
}
node {
  name: "training/Adam/vhat_25_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_25_1"
  input: "training/Adam/vhat_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_25_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_25_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_25_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_26/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_26"
  op: "Fill"
  input: "training/Adam/vhat_26/shape_as_tensor"
  input: "training/Adam/vhat_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_26_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_26_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_26_1"
    }
  }
}
node {
  name: "training/Adam/vhat_26_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_26_1"
}
node {
  name: "training/Adam/vhat_26_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_26_1"
  input: "training/Adam/vhat_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_26_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_26_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_26_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_27/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_27/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_27"
  op: "Fill"
  input: "training/Adam/vhat_27/shape_as_tensor"
  input: "training/Adam/vhat_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_27_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_27_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_27_1"
    }
  }
}
node {
  name: "training/Adam/vhat_27_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_27_1"
}
node {
  name: "training/Adam/vhat_27_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_27_1"
  input: "training/Adam/vhat_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_27_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_27_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_27_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_28/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_28"
  op: "Fill"
  input: "training/Adam/vhat_28/shape_as_tensor"
  input: "training/Adam/vhat_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_28_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_28_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_28_1"
    }
  }
}
node {
  name: "training/Adam/vhat_28_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_28_1"
}
node {
  name: "training/Adam/vhat_28_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_28_1"
  input: "training/Adam/vhat_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_28_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_28_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_28_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_29/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_29/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_29"
  op: "Fill"
  input: "training/Adam/vhat_29/shape_as_tensor"
  input: "training/Adam/vhat_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_29_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_29_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_29_1"
    }
  }
}
node {
  name: "training/Adam/vhat_29_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_29_1"
}
node {
  name: "training/Adam/vhat_29_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_29_1"
  input: "training/Adam/vhat_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_29_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_29_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_29_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_30/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_30"
  op: "Fill"
  input: "training/Adam/vhat_30/shape_as_tensor"
  input: "training/Adam/vhat_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_30_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_30_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_30_1"
    }
  }
}
node {
  name: "training/Adam/vhat_30_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_30_1"
}
node {
  name: "training/Adam/vhat_30_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_30_1"
  input: "training/Adam/vhat_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_30_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_30_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_30_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_31/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_31/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_31"
  op: "Fill"
  input: "training/Adam/vhat_31/shape_as_tensor"
  input: "training/Adam/vhat_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_31_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_31_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_31_1"
    }
  }
}
node {
  name: "training/Adam/vhat_31_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_31_1"
}
node {
  name: "training/Adam/vhat_31_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_31_1"
  input: "training/Adam/vhat_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_31_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_31_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_31_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_32/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_32"
  op: "Fill"
  input: "training/Adam/vhat_32/shape_as_tensor"
  input: "training/Adam/vhat_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_32_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_32_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_32_1"
    }
  }
}
node {
  name: "training/Adam/vhat_32_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_32_1"
}
node {
  name: "training/Adam/vhat_32_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_32_1"
  input: "training/Adam/vhat_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_32_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_32_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_32_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_33/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_33/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_33"
  op: "Fill"
  input: "training/Adam/vhat_33/shape_as_tensor"
  input: "training/Adam/vhat_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_33_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_33_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_33_1"
    }
  }
}
node {
  name: "training/Adam/vhat_33_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_33_1"
}
node {
  name: "training/Adam/vhat_33_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_33_1"
  input: "training/Adam/vhat_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_33_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_33_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_33_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_34/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_34"
  op: "Fill"
  input: "training/Adam/vhat_34/shape_as_tensor"
  input: "training/Adam/vhat_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_34_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_34_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_34_1"
    }
  }
}
node {
  name: "training/Adam/vhat_34_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_34_1"
}
node {
  name: "training/Adam/vhat_34_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_34_1"
  input: "training/Adam/vhat_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_34_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_34_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_34_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_35/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_35/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_35"
  op: "Fill"
  input: "training/Adam/vhat_35/shape_as_tensor"
  input: "training/Adam/vhat_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_35_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_35_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_35_1"
    }
  }
}
node {
  name: "training/Adam/vhat_35_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_35_1"
}
node {
  name: "training/Adam/vhat_35_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_35_1"
  input: "training/Adam/vhat_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_35_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_35_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_35_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_36/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_36"
  op: "Fill"
  input: "training/Adam/vhat_36/shape_as_tensor"
  input: "training/Adam/vhat_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_36_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_36_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_36_1"
    }
  }
}
node {
  name: "training/Adam/vhat_36_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_36_1"
}
node {
  name: "training/Adam/vhat_36_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_36_1"
  input: "training/Adam/vhat_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_36_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_36_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_36_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_37/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_37/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_37"
  op: "Fill"
  input: "training/Adam/vhat_37/shape_as_tensor"
  input: "training/Adam/vhat_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_37_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_37_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_37_1"
    }
  }
}
node {
  name: "training/Adam/vhat_37_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_37_1"
}
node {
  name: "training/Adam/vhat_37_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_37_1"
  input: "training/Adam/vhat_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_37_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_37_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_37_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_38/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_38"
  op: "Fill"
  input: "training/Adam/vhat_38/shape_as_tensor"
  input: "training/Adam/vhat_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_38_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_38_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_38_1"
    }
  }
}
node {
  name: "training/Adam/vhat_38_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_38_1"
}
node {
  name: "training/Adam/vhat_38_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_38_1"
  input: "training/Adam/vhat_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_38_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_38_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_38_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_39/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_39/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_39"
  op: "Fill"
  input: "training/Adam/vhat_39/shape_as_tensor"
  input: "training/Adam/vhat_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_39_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_39_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_39_1"
    }
  }
}
node {
  name: "training/Adam/vhat_39_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_39_1"
}
node {
  name: "training/Adam/vhat_39_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_39_1"
  input: "training/Adam/vhat_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_39_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_39_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_39_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_40/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_40"
  op: "Fill"
  input: "training/Adam/vhat_40/shape_as_tensor"
  input: "training/Adam/vhat_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_40_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_40_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_40_1"
    }
  }
}
node {
  name: "training/Adam/vhat_40_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_40_1"
}
node {
  name: "training/Adam/vhat_40_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_40_1"
  input: "training/Adam/vhat_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_40_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_40_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_40_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_41/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_41/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_41"
  op: "Fill"
  input: "training/Adam/vhat_41/shape_as_tensor"
  input: "training/Adam/vhat_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_41_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_41_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_41_1"
    }
  }
}
node {
  name: "training/Adam/vhat_41_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_41_1"
}
node {
  name: "training/Adam/vhat_41_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_41_1"
  input: "training/Adam/vhat_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_41_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_41_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_41_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_42/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_42"
  op: "Fill"
  input: "training/Adam/vhat_42/shape_as_tensor"
  input: "training/Adam/vhat_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_42_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_42_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_42_1"
    }
  }
}
node {
  name: "training/Adam/vhat_42_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_42_1"
}
node {
  name: "training/Adam/vhat_42_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_42_1"
  input: "training/Adam/vhat_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_42_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_42_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_42_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_43/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_43/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_43"
  op: "Fill"
  input: "training/Adam/vhat_43/shape_as_tensor"
  input: "training/Adam/vhat_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_43_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_43_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_43_1"
    }
  }
}
node {
  name: "training/Adam/vhat_43_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_43_1"
}
node {
  name: "training/Adam/vhat_43_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_43_1"
  input: "training/Adam/vhat_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_43_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_43_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_43_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_44/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_44"
  op: "Fill"
  input: "training/Adam/vhat_44/shape_as_tensor"
  input: "training/Adam/vhat_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_44_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_44_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_44_1"
    }
  }
}
node {
  name: "training/Adam/vhat_44_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_44_1"
}
node {
  name: "training/Adam/vhat_44_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_44_1"
  input: "training/Adam/vhat_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_44_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_44_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_44_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_45/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_45/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_45"
  op: "Fill"
  input: "training/Adam/vhat_45/shape_as_tensor"
  input: "training/Adam/vhat_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_45_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_45_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_45_1"
    }
  }
}
node {
  name: "training/Adam/vhat_45_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_45_1"
}
node {
  name: "training/Adam/vhat_45_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_45_1"
  input: "training/Adam/vhat_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_45_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_45_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_45_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_46/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_46/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_46"
  op: "Fill"
  input: "training/Adam/vhat_46/shape_as_tensor"
  input: "training/Adam/vhat_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_46_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_46_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_46_1"
    }
  }
}
node {
  name: "training/Adam/vhat_46_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_46_1"
}
node {
  name: "training/Adam/vhat_46_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_46_1"
  input: "training/Adam/vhat_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_46_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_46_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_46_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_47/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_47/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_47"
  op: "Fill"
  input: "training/Adam/vhat_47/shape_as_tensor"
  input: "training/Adam/vhat_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_47_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_47_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_47_1"
    }
  }
}
node {
  name: "training/Adam/vhat_47_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_47_1"
}
node {
  name: "training/Adam/vhat_47_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_47_1"
  input: "training/Adam/vhat_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_47_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_47_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_47_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_48/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_48/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_48"
  op: "Fill"
  input: "training/Adam/vhat_48/shape_as_tensor"
  input: "training/Adam/vhat_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_48_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_48_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_48_1"
    }
  }
}
node {
  name: "training/Adam/vhat_48_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_48_1"
}
node {
  name: "training/Adam/vhat_48_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_48_1"
  input: "training/Adam/vhat_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_48_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_48_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_48_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_49/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_49/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_49"
  op: "Fill"
  input: "training/Adam/vhat_49/shape_as_tensor"
  input: "training/Adam/vhat_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_49_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_49_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_49_1"
    }
  }
}
node {
  name: "training/Adam/vhat_49_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_49_1"
}
node {
  name: "training/Adam/vhat_49_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_49_1"
  input: "training/Adam/vhat_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_49_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_49_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_49_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_50/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_50/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_50"
  op: "Fill"
  input: "training/Adam/vhat_50/shape_as_tensor"
  input: "training/Adam/vhat_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_50_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_50_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_50_1"
    }
  }
}
node {
  name: "training/Adam/vhat_50_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_50_1"
}
node {
  name: "training/Adam/vhat_50_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_50_1"
  input: "training/Adam/vhat_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_50_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_50_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_50_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_51/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_51/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_51"
  op: "Fill"
  input: "training/Adam/vhat_51/shape_as_tensor"
  input: "training/Adam/vhat_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_51_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_51_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_51_1"
    }
  }
}
node {
  name: "training/Adam/vhat_51_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_51_1"
}
node {
  name: "training/Adam/vhat_51_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_51_1"
  input: "training/Adam/vhat_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_51_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_51_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_51_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_52/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_52/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_52"
  op: "Fill"
  input: "training/Adam/vhat_52/shape_as_tensor"
  input: "training/Adam/vhat_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_52_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_52_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_52_1"
    }
  }
}
node {
  name: "training/Adam/vhat_52_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_52_1"
}
node {
  name: "training/Adam/vhat_52_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_52_1"
  input: "training/Adam/vhat_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_52_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_52_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_52_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_53/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_53/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_53"
  op: "Fill"
  input: "training/Adam/vhat_53/shape_as_tensor"
  input: "training/Adam/vhat_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_53_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_53_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_53_1"
    }
  }
}
node {
  name: "training/Adam/vhat_53_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_53_1"
}
node {
  name: "training/Adam/vhat_53_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_53_1"
  input: "training/Adam/vhat_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_53_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_53_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_53_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_54/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_54"
  op: "Fill"
  input: "training/Adam/vhat_54/shape_as_tensor"
  input: "training/Adam/vhat_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_54_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_54_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_54_1"
    }
  }
}
node {
  name: "training/Adam/vhat_54_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_54_1"
}
node {
  name: "training/Adam/vhat_54_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_54_1"
  input: "training/Adam/vhat_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_54_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_54_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_54_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_55/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_55/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_55"
  op: "Fill"
  input: "training/Adam/vhat_55/shape_as_tensor"
  input: "training/Adam/vhat_55/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_55_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_55_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_55_1"
    }
  }
}
node {
  name: "training/Adam/vhat_55_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_55_1"
}
node {
  name: "training/Adam/vhat_55_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_55_1"
  input: "training/Adam/vhat_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_55_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_55_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_55_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_56/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_56/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_56"
  op: "Fill"
  input: "training/Adam/vhat_56/shape_as_tensor"
  input: "training/Adam/vhat_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_56_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_56_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_56_1"
    }
  }
}
node {
  name: "training/Adam/vhat_56_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_56_1"
}
node {
  name: "training/Adam/vhat_56_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_56_1"
  input: "training/Adam/vhat_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_56_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_56_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_56_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_57/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_57/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_57"
  op: "Fill"
  input: "training/Adam/vhat_57/shape_as_tensor"
  input: "training/Adam/vhat_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_57_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_57_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_57_1"
    }
  }
}
node {
  name: "training/Adam/vhat_57_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_57_1"
}
node {
  name: "training/Adam/vhat_57_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_57_1"
  input: "training/Adam/vhat_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_57_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_57_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_57_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_58/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_58/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_58"
  op: "Fill"
  input: "training/Adam/vhat_58/shape_as_tensor"
  input: "training/Adam/vhat_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_58_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_58_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_58_1"
    }
  }
}
node {
  name: "training/Adam/vhat_58_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_58_1"
}
node {
  name: "training/Adam/vhat_58_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_58_1"
  input: "training/Adam/vhat_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_58_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_58_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_58_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_59/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_59/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_59"
  op: "Fill"
  input: "training/Adam/vhat_59/shape_as_tensor"
  input: "training/Adam/vhat_59/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_59_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_59_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_59_1"
    }
  }
}
node {
  name: "training/Adam/vhat_59_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_59_1"
}
node {
  name: "training/Adam/vhat_59_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_59_1"
  input: "training/Adam/vhat_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_59_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_59_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_59_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_60/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_60/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_60"
  op: "Fill"
  input: "training/Adam/vhat_60/shape_as_tensor"
  input: "training/Adam/vhat_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_60_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_60_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_60_1"
    }
  }
}
node {
  name: "training/Adam/vhat_60_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_60_1"
}
node {
  name: "training/Adam/vhat_60_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_60_1"
  input: "training/Adam/vhat_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_60_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_60_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_60_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_61/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_61/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_61"
  op: "Fill"
  input: "training/Adam/vhat_61/shape_as_tensor"
  input: "training/Adam/vhat_61/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_61_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_61_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_61_1"
    }
  }
}
node {
  name: "training/Adam/vhat_61_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_61_1"
}
node {
  name: "training/Adam/vhat_61_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_61_1"
  input: "training/Adam/vhat_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_61_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_61_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_61_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_62/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_62/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_62"
  op: "Fill"
  input: "training/Adam/vhat_62/shape_as_tensor"
  input: "training/Adam/vhat_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_62_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_62_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_62_1"
    }
  }
}
node {
  name: "training/Adam/vhat_62_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_62_1"
}
node {
  name: "training/Adam/vhat_62_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_62_1"
  input: "training/Adam/vhat_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_62_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_62_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_62_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_63/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_63/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_63"
  op: "Fill"
  input: "training/Adam/vhat_63/shape_as_tensor"
  input: "training/Adam/vhat_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_63_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_63_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_63_1"
    }
  }
}
node {
  name: "training/Adam/vhat_63_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_63_1"
}
node {
  name: "training/Adam/vhat_63_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_63_1"
  input: "training/Adam/vhat_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_63_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_63_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_63_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_64/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_64/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_64"
  op: "Fill"
  input: "training/Adam/vhat_64/shape_as_tensor"
  input: "training/Adam/vhat_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_64_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_64_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_64_1"
    }
  }
}
node {
  name: "training/Adam/vhat_64_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_64_1"
}
node {
  name: "training/Adam/vhat_64_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_64_1"
  input: "training/Adam/vhat_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_64_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_64_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_64_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_65/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_65/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_65"
  op: "Fill"
  input: "training/Adam/vhat_65/shape_as_tensor"
  input: "training/Adam/vhat_65/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_65_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_65_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_65_1"
    }
  }
}
node {
  name: "training/Adam/vhat_65_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_65_1"
}
node {
  name: "training/Adam/vhat_65_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_65_1"
  input: "training/Adam/vhat_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_65_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_65_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_65_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_66/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_66"
  op: "Fill"
  input: "training/Adam/vhat_66/shape_as_tensor"
  input: "training/Adam/vhat_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_66_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_66_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_66_1"
    }
  }
}
node {
  name: "training/Adam/vhat_66_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_66_1"
}
node {
  name: "training/Adam/vhat_66_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_66_1"
  input: "training/Adam/vhat_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_66_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_66_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_66_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_67/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_67/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_67"
  op: "Fill"
  input: "training/Adam/vhat_67/shape_as_tensor"
  input: "training/Adam/vhat_67/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_67_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_67_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_67_1"
    }
  }
}
node {
  name: "training/Adam/vhat_67_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_67_1"
}
node {
  name: "training/Adam/vhat_67_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_67_1"
  input: "training/Adam/vhat_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_67_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_67_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_67_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_68/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_68/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_68"
  op: "Fill"
  input: "training/Adam/vhat_68/shape_as_tensor"
  input: "training/Adam/vhat_68/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_68_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_68_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_68_1"
    }
  }
}
node {
  name: "training/Adam/vhat_68_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_68_1"
}
node {
  name: "training/Adam/vhat_68_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_68_1"
  input: "training/Adam/vhat_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_68_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_68_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_68_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_69/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_69/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_69"
  op: "Fill"
  input: "training/Adam/vhat_69/shape_as_tensor"
  input: "training/Adam/vhat_69/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_69_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_69_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_69_1"
    }
  }
}
node {
  name: "training/Adam/vhat_69_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_69_1"
}
node {
  name: "training/Adam/vhat_69_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_69_1"
  input: "training/Adam/vhat_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_69_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_69_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_69_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_70/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_70/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_70"
  op: "Fill"
  input: "training/Adam/vhat_70/shape_as_tensor"
  input: "training/Adam/vhat_70/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_70_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_70_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_70_1"
    }
  }
}
node {
  name: "training/Adam/vhat_70_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_70_1"
}
node {
  name: "training/Adam/vhat_70_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_70_1"
  input: "training/Adam/vhat_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_70_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_70_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_70_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_71/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_71/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_71"
  op: "Fill"
  input: "training/Adam/vhat_71/shape_as_tensor"
  input: "training/Adam/vhat_71/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_71_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_71_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_71_1"
    }
  }
}
node {
  name: "training/Adam/vhat_71_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_71_1"
}
node {
  name: "training/Adam/vhat_71_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_71_1"
  input: "training/Adam/vhat_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_71_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_71_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_71_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_72/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_72"
  op: "Fill"
  input: "training/Adam/vhat_72/shape_as_tensor"
  input: "training/Adam/vhat_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_72_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_72_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_72_1"
    }
  }
}
node {
  name: "training/Adam/vhat_72_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_72_1"
}
node {
  name: "training/Adam/vhat_72_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_72_1"
  input: "training/Adam/vhat_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_72_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_72_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_72_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_73/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_73/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_73"
  op: "Fill"
  input: "training/Adam/vhat_73/shape_as_tensor"
  input: "training/Adam/vhat_73/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_73_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_73_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_73_1"
    }
  }
}
node {
  name: "training/Adam/vhat_73_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_73_1"
}
node {
  name: "training/Adam/vhat_73_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_73_1"
  input: "training/Adam/vhat_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_73_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_73_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_73_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_74/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_74/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_74"
  op: "Fill"
  input: "training/Adam/vhat_74/shape_as_tensor"
  input: "training/Adam/vhat_74/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_74_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_74_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_74_1"
    }
  }
}
node {
  name: "training/Adam/vhat_74_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_74_1"
}
node {
  name: "training/Adam/vhat_74_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_74_1"
  input: "training/Adam/vhat_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_74_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_74_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_74_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_75/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_75/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_75"
  op: "Fill"
  input: "training/Adam/vhat_75/shape_as_tensor"
  input: "training/Adam/vhat_75/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_75_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_75_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_75_1"
    }
  }
}
node {
  name: "training/Adam/vhat_75_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_75_1"
}
node {
  name: "training/Adam/vhat_75_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_75_1"
  input: "training/Adam/vhat_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_75_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_75_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_75_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_76/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_76/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_76"
  op: "Fill"
  input: "training/Adam/vhat_76/shape_as_tensor"
  input: "training/Adam/vhat_76/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_76_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_76_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_76_1"
    }
  }
}
node {
  name: "training/Adam/vhat_76_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_76_1"
}
node {
  name: "training/Adam/vhat_76_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_76_1"
  input: "training/Adam/vhat_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_76_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_76_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_76_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_77/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_77/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_77"
  op: "Fill"
  input: "training/Adam/vhat_77/shape_as_tensor"
  input: "training/Adam/vhat_77/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_77_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_77_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_77_1"
    }
  }
}
node {
  name: "training/Adam/vhat_77_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_77_1"
}
node {
  name: "training/Adam/vhat_77_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_77_1"
  input: "training/Adam/vhat_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_77_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_77_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_77_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_78/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_78/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_78"
  op: "Fill"
  input: "training/Adam/vhat_78/shape_as_tensor"
  input: "training/Adam/vhat_78/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_78_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_78_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_78_1"
    }
  }
}
node {
  name: "training/Adam/vhat_78_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_78_1"
}
node {
  name: "training/Adam/vhat_78_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_78_1"
  input: "training/Adam/vhat_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_78_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_78_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_78_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_79/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_79/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_79"
  op: "Fill"
  input: "training/Adam/vhat_79/shape_as_tensor"
  input: "training/Adam/vhat_79/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_79_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_79_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_79_1"
    }
  }
}
node {
  name: "training/Adam/vhat_79_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_79_1"
}
node {
  name: "training/Adam/vhat_79_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_79_1"
  input: "training/Adam/vhat_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_79_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_79_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_79_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_80/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_80/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_80"
  op: "Fill"
  input: "training/Adam/vhat_80/shape_as_tensor"
  input: "training/Adam/vhat_80/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_80_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_80_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_80_1"
    }
  }
}
node {
  name: "training/Adam/vhat_80_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_80_1"
}
node {
  name: "training/Adam/vhat_80_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_80_1"
  input: "training/Adam/vhat_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_80_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_80_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_80_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_81/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_81/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_81"
  op: "Fill"
  input: "training/Adam/vhat_81/shape_as_tensor"
  input: "training/Adam/vhat_81/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_81_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_81_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_81_1"
    }
  }
}
node {
  name: "training/Adam/vhat_81_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_81_1"
}
node {
  name: "training/Adam/vhat_81_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_81_1"
  input: "training/Adam/vhat_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_81_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_81_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_81_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_82/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_82/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_82"
  op: "Fill"
  input: "training/Adam/vhat_82/shape_as_tensor"
  input: "training/Adam/vhat_82/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_82_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_82_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_82_1"
    }
  }
}
node {
  name: "training/Adam/vhat_82_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_82_1"
}
node {
  name: "training/Adam/vhat_82_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_82_1"
  input: "training/Adam/vhat_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_82_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_82_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_82_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_83/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_83/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_83"
  op: "Fill"
  input: "training/Adam/vhat_83/shape_as_tensor"
  input: "training/Adam/vhat_83/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_83_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_83_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_83_1"
    }
  }
}
node {
  name: "training/Adam/vhat_83_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_83_1"
}
node {
  name: "training/Adam/vhat_83_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_83_1"
  input: "training/Adam/vhat_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_83_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_83_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_83_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_84/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_84/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_84"
  op: "Fill"
  input: "training/Adam/vhat_84/shape_as_tensor"
  input: "training/Adam/vhat_84/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_84_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_84_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_84_1"
    }
  }
}
node {
  name: "training/Adam/vhat_84_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_84_1"
}
node {
  name: "training/Adam/vhat_84_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_84_1"
  input: "training/Adam/vhat_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_84_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_84_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_84_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_85/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_85/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_85"
  op: "Fill"
  input: "training/Adam/vhat_85/shape_as_tensor"
  input: "training/Adam/vhat_85/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_85_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_85_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_85_1"
    }
  }
}
node {
  name: "training/Adam/vhat_85_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_85_1"
}
node {
  name: "training/Adam/vhat_85_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_85_1"
  input: "training/Adam/vhat_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_85_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_85_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_85_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_86/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/vhat_86/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/vhat_86"
  op: "Fill"
  input: "training/Adam/vhat_86/shape_as_tensor"
  input: "training/Adam/vhat_86/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/vhat_86_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_86_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/vhat_86_1"
    }
  }
}
node {
  name: "training/Adam/vhat_86_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_86_1"
}
node {
  name: "training/Adam/vhat_86_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_86_1"
  input: "training/Adam/vhat_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/vhat_86_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_86_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/vhat_86_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_2"
  input: "training/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_2"
  op: "Sub"
  input: "training/Adam/sub_2/x"
  input: "training/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_2"
  op: "Mul"
  input: "training/Adam/sub_2"
  input: "training/Adam/gradients/conv1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_1"
  op: "Add"
  input: "training/Adam/mul_1"
  input: "training/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_4"
  input: "training/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_3"
  op: "Sub"
  input: "training/Adam/sub_3/x"
  input: "training/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square"
  op: "Square"
  input: "training/Adam/gradients/conv1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_4"
  op: "Mul"
  input: "training/Adam/sub_3"
  input: "training/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_2"
  op: "Add"
  input: "training/Adam/mul_3"
  input: "training/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_5"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training/Adam/add_2"
  input: "training/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training/Adam/clip_by_value_1/Minimum"
  input: "training/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_3"
  op: "Add"
  input: "training/Adam/Sqrt_1"
  input: "training/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_1"
  op: "RealDiv"
  input: "training/Adam/mul_5"
  input: "training/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_4"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_6"
  input: "training/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "training/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  input: "^training/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "training/Adam/add_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  input: "^training/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "conv1/kernel"
  input: "training/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "conv1/kernel"
  input: "^training/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_10"
  input: "training/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_5"
  op: "Sub"
  input: "training/Adam/sub_5/x"
  input: "training/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_7"
  op: "Mul"
  input: "training/Adam/sub_5"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_4"
  op: "Add"
  input: "training/Adam/mul_6"
  input: "training/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_12"
  input: "training/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_6"
  op: "Sub"
  input: "training/Adam/sub_6/x"
  input: "training/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_1"
  op: "Square"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_9"
  op: "Mul"
  input: "training/Adam/sub_6"
  input: "training/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_5"
  op: "Add"
  input: "training/Adam/mul_8"
  input: "training/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_10"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training/Adam/add_5"
  input: "training/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training/Adam/clip_by_value_2/Minimum"
  input: "training/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_6"
  op: "Add"
  input: "training/Adam/Sqrt_2"
  input: "training/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_2"
  op: "RealDiv"
  input: "training/Adam/mul_10"
  input: "training/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_7"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_14"
  input: "training/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "training/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  input: "^training/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "training/Adam/add_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  input: "^training/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv1_bn/gamma"
  input: "training/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "conv1_bn/gamma"
  input: "^training/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_18"
  input: "training/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_8"
  op: "Sub"
  input: "training/Adam/sub_8/x"
  input: "training/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_12"
  op: "Mul"
  input: "training/Adam/sub_8"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_7"
  op: "Add"
  input: "training/Adam/mul_11"
  input: "training/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_20"
  input: "training/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_9"
  op: "Sub"
  input: "training/Adam/sub_9/x"
  input: "training/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_2"
  op: "Square"
  input: "training/Adam/gradients/conv1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_14"
  op: "Mul"
  input: "training/Adam/sub_9"
  input: "training/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_8"
  op: "Add"
  input: "training/Adam/mul_13"
  input: "training/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_15"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training/Adam/add_8"
  input: "training/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training/Adam/clip_by_value_3/Minimum"
  input: "training/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_9"
  op: "Add"
  input: "training/Adam/Sqrt_3"
  input: "training/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_3"
  op: "RealDiv"
  input: "training/Adam/mul_15"
  input: "training/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_10"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_22"
  input: "training/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "training/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  input: "^training/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "training/Adam/add_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  input: "^training/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "conv1_bn/beta"
  input: "training/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv1_bn/beta"
  input: "^training/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_26"
  input: "training/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_11"
  op: "Sub"
  input: "training/Adam/sub_11/x"
  input: "training/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_17"
  op: "Mul"
  input: "training/Adam/sub_11"
  input: "training/Adam/gradients/conv_dw_1/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_10"
  op: "Add"
  input: "training/Adam/mul_16"
  input: "training/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_28"
  input: "training/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_12"
  op: "Sub"
  input: "training/Adam/sub_12/x"
  input: "training/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_3"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_1/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_19"
  op: "Mul"
  input: "training/Adam/sub_12"
  input: "training/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_11"
  op: "Add"
  input: "training/Adam/mul_18"
  input: "training/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_20"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training/Adam/add_11"
  input: "training/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training/Adam/clip_by_value_4/Minimum"
  input: "training/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_12"
  op: "Add"
  input: "training/Adam/Sqrt_4"
  input: "training/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_4"
  op: "RealDiv"
  input: "training/Adam/mul_20"
  input: "training/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_13"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_30"
  input: "training/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "training/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  input: "^training/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "training/Adam/add_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  input: "^training/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  input: "training/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "conv_dw_1/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_34"
  input: "training/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_14"
  op: "Sub"
  input: "training/Adam/sub_14/x"
  input: "training/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_22"
  op: "Mul"
  input: "training/Adam/sub_14"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_13"
  op: "Add"
  input: "training/Adam/mul_21"
  input: "training/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_36"
  input: "training/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_15"
  op: "Sub"
  input: "training/Adam/sub_15/x"
  input: "training/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_4"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_24"
  op: "Mul"
  input: "training/Adam/sub_15"
  input: "training/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_14"
  op: "Add"
  input: "training/Adam/mul_23"
  input: "training/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_25"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training/Adam/add_14"
  input: "training/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training/Adam/clip_by_value_5/Minimum"
  input: "training/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_15"
  op: "Add"
  input: "training/Adam/Sqrt_5"
  input: "training/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_5"
  op: "RealDiv"
  input: "training/Adam/mul_25"
  input: "training/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_16"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_38"
  input: "training/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "training/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  input: "^training/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "training/Adam/add_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  input: "^training/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/gamma"
  input: "training/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/gamma"
  input: "^training/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_42"
  input: "training/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_17"
  op: "Sub"
  input: "training/Adam/sub_17/x"
  input: "training/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_27"
  op: "Mul"
  input: "training/Adam/sub_17"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_16"
  op: "Add"
  input: "training/Adam/mul_26"
  input: "training/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_44"
  input: "training/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_18"
  op: "Sub"
  input: "training/Adam/sub_18/x"
  input: "training/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_5"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_29"
  op: "Mul"
  input: "training/Adam/sub_18"
  input: "training/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_17"
  op: "Add"
  input: "training/Adam/mul_28"
  input: "training/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_30"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training/Adam/add_17"
  input: "training/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training/Adam/clip_by_value_6/Minimum"
  input: "training/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_18"
  op: "Add"
  input: "training/Adam/Sqrt_6"
  input: "training/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_6"
  op: "RealDiv"
  input: "training/Adam/mul_30"
  input: "training/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_19"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_46"
  input: "training/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "training/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  input: "^training/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "training/Adam/add_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  input: "^training/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "conv_dw_1_bn/beta"
  input: "training/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "conv_dw_1_bn/beta"
  input: "^training/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_6_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_31"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_50"
  input: "training/Adam/mul_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_20"
  op: "Sub"
  input: "training/Adam/sub_20/x"
  input: "training/Adam/ReadVariableOp_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_32"
  op: "Mul"
  input: "training/Adam/sub_20"
  input: "training/Adam/gradients/conv_pw_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_19"
  op: "Add"
  input: "training/Adam/mul_31"
  input: "training/Adam/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_6_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_33"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_52"
  input: "training/Adam/mul_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_21/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_21"
  op: "Sub"
  input: "training/Adam/sub_21/x"
  input: "training/Adam/ReadVariableOp_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_6"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_34"
  op: "Mul"
  input: "training/Adam/sub_21"
  input: "training/Adam/Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_20"
  op: "Add"
  input: "training/Adam/mul_33"
  input: "training/Adam/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_35"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_7/Minimum"
  op: "Minimum"
  input: "training/Adam/add_20"
  input: "training/Adam/Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_7"
  op: "Maximum"
  input: "training/Adam/clip_by_value_7/Minimum"
  input: "training/Adam/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_7"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_21/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_21"
  op: "Add"
  input: "training/Adam/Sqrt_7"
  input: "training/Adam/add_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_7"
  op: "RealDiv"
  input: "training/Adam/mul_35"
  input: "training/Adam/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "conv_pw_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_22"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_54"
  input: "training/Adam/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "training/Adam/m_6_1"
  input: "training/Adam/add_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "training/Adam/m_6_1"
  input: "^training/Adam/AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "training/Adam/v_6_1"
  input: "training/Adam/add_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "training/Adam/v_6_1"
  input: "^training/Adam/AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "conv_pw_1/kernel"
  input: "training/Adam/sub_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "conv_pw_1/kernel"
  input: "^training/Adam/AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_7_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_36"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_58"
  input: "training/Adam/mul_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_23"
  op: "Sub"
  input: "training/Adam/sub_23/x"
  input: "training/Adam/ReadVariableOp_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_37"
  op: "Mul"
  input: "training/Adam/sub_23"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_22"
  op: "Add"
  input: "training/Adam/mul_36"
  input: "training/Adam/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_7_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_38"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_60"
  input: "training/Adam/mul_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_24"
  op: "Sub"
  input: "training/Adam/sub_24/x"
  input: "training/Adam/ReadVariableOp_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_7"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_39"
  op: "Mul"
  input: "training/Adam/sub_24"
  input: "training/Adam/Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_23"
  op: "Add"
  input: "training/Adam/mul_38"
  input: "training/Adam/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_40"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_8/Minimum"
  op: "Minimum"
  input: "training/Adam/add_23"
  input: "training/Adam/Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_8"
  op: "Maximum"
  input: "training/Adam/clip_by_value_8/Minimum"
  input: "training/Adam/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_8"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_24"
  op: "Add"
  input: "training/Adam/Sqrt_8"
  input: "training/Adam/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_8"
  op: "RealDiv"
  input: "training/Adam/mul_40"
  input: "training/Adam/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_25"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_62"
  input: "training/Adam/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "training/Adam/m_7_1"
  input: "training/Adam/add_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "training/Adam/m_7_1"
  input: "^training/Adam/AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "training/Adam/v_7_1"
  input: "training/Adam/add_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "training/Adam/v_7_1"
  input: "^training/Adam/AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/gamma"
  input: "training/Adam/sub_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/gamma"
  input: "^training/Adam/AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_8_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_41"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_66"
  input: "training/Adam/mul_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_26/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_26"
  op: "Sub"
  input: "training/Adam/sub_26/x"
  input: "training/Adam/ReadVariableOp_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_42"
  op: "Mul"
  input: "training/Adam/sub_26"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_25"
  op: "Add"
  input: "training/Adam/mul_41"
  input: "training/Adam/mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_8_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_43"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_68"
  input: "training/Adam/mul_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_27/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_27"
  op: "Sub"
  input: "training/Adam/sub_27/x"
  input: "training/Adam/ReadVariableOp_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_8"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_1_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_44"
  op: "Mul"
  input: "training/Adam/sub_27"
  input: "training/Adam/Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_26"
  op: "Add"
  input: "training/Adam/mul_43"
  input: "training/Adam/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_45"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_9/Minimum"
  op: "Minimum"
  input: "training/Adam/add_26"
  input: "training/Adam/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_9"
  op: "Maximum"
  input: "training/Adam/clip_by_value_9/Minimum"
  input: "training/Adam/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_9"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_27/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_27"
  op: "Add"
  input: "training/Adam/Sqrt_9"
  input: "training/Adam/add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_9"
  op: "RealDiv"
  input: "training/Adam/mul_45"
  input: "training/Adam/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_28"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_70"
  input: "training/Adam/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "training/Adam/m_8_1"
  input: "training/Adam/add_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "training/Adam/m_8_1"
  input: "^training/Adam/AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "training/Adam/v_8_1"
  input: "training/Adam/add_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "training/Adam/v_8_1"
  input: "^training/Adam/AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "conv_pw_1_bn/beta"
  input: "training/Adam/sub_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "conv_pw_1_bn/beta"
  input: "^training/Adam/AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_9_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_46"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_74"
  input: "training/Adam/mul_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_29"
  op: "Sub"
  input: "training/Adam/sub_29/x"
  input: "training/Adam/ReadVariableOp_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_47"
  op: "Mul"
  input: "training/Adam/sub_29"
  input: "training/Adam/gradients/conv_dw_2/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_28"
  op: "Add"
  input: "training/Adam/mul_46"
  input: "training/Adam/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_9_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_48"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_76"
  input: "training/Adam/mul_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_30"
  op: "Sub"
  input: "training/Adam/sub_30/x"
  input: "training/Adam/ReadVariableOp_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_9"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_2/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_49"
  op: "Mul"
  input: "training/Adam/sub_30"
  input: "training/Adam/Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_29"
  op: "Add"
  input: "training/Adam/mul_48"
  input: "training/Adam/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_50"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_10/Minimum"
  op: "Minimum"
  input: "training/Adam/add_29"
  input: "training/Adam/Const_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_10"
  op: "Maximum"
  input: "training/Adam/clip_by_value_10/Minimum"
  input: "training/Adam/Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_10"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_30"
  op: "Add"
  input: "training/Adam/Sqrt_10"
  input: "training/Adam/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_10"
  op: "RealDiv"
  input: "training/Adam/mul_50"
  input: "training/Adam/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_31"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_78"
  input: "training/Adam/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "training/Adam/m_9_1"
  input: "training/Adam/add_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "training/Adam/m_9_1"
  input: "^training/Adam/AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "training/Adam/v_9_1"
  input: "training/Adam/add_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "training/Adam/v_9_1"
  input: "^training/Adam/AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  input: "training/Adam/sub_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "conv_dw_2/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_10_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_51"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_82"
  input: "training/Adam/mul_51/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_32/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_32"
  op: "Sub"
  input: "training/Adam/sub_32/x"
  input: "training/Adam/ReadVariableOp_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_52"
  op: "Mul"
  input: "training/Adam/sub_32"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_31"
  op: "Add"
  input: "training/Adam/mul_51"
  input: "training/Adam/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_10_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_53"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_84"
  input: "training/Adam/mul_53/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_33/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_33"
  op: "Sub"
  input: "training/Adam/sub_33/x"
  input: "training/Adam/ReadVariableOp_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_10"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_54"
  op: "Mul"
  input: "training/Adam/sub_33"
  input: "training/Adam/Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_32"
  op: "Add"
  input: "training/Adam/mul_53"
  input: "training/Adam/mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_55"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_11/Minimum"
  op: "Minimum"
  input: "training/Adam/add_32"
  input: "training/Adam/Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_11"
  op: "Maximum"
  input: "training/Adam/clip_by_value_11/Minimum"
  input: "training/Adam/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_11"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_33/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_33"
  op: "Add"
  input: "training/Adam/Sqrt_11"
  input: "training/Adam/add_33/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_11"
  op: "RealDiv"
  input: "training/Adam/mul_55"
  input: "training/Adam/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_34"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_86"
  input: "training/Adam/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "training/Adam/m_10_1"
  input: "training/Adam/add_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "training/Adam/m_10_1"
  input: "^training/Adam/AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "training/Adam/v_10_1"
  input: "training/Adam/add_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "training/Adam/v_10_1"
  input: "^training/Adam/AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/gamma"
  input: "training/Adam/sub_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/gamma"
  input: "^training/Adam/AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_11_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_56"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_90"
  input: "training/Adam/mul_56/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_35"
  op: "Sub"
  input: "training/Adam/sub_35/x"
  input: "training/Adam/ReadVariableOp_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_57"
  op: "Mul"
  input: "training/Adam/sub_35"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_34"
  op: "Add"
  input: "training/Adam/mul_56"
  input: "training/Adam/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_58/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_11_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_58"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_92"
  input: "training/Adam/mul_58/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_36"
  op: "Sub"
  input: "training/Adam/sub_36/x"
  input: "training/Adam/ReadVariableOp_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_11"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_59"
  op: "Mul"
  input: "training/Adam/sub_36"
  input: "training/Adam/Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_35"
  op: "Add"
  input: "training/Adam/mul_58"
  input: "training/Adam/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_60"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_12/Minimum"
  op: "Minimum"
  input: "training/Adam/add_35"
  input: "training/Adam/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_12"
  op: "Maximum"
  input: "training/Adam/clip_by_value_12/Minimum"
  input: "training/Adam/Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_12"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_36"
  op: "Add"
  input: "training/Adam/Sqrt_12"
  input: "training/Adam/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_12"
  op: "RealDiv"
  input: "training/Adam/mul_60"
  input: "training/Adam/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_37"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_94"
  input: "training/Adam/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "training/Adam/m_11_1"
  input: "training/Adam/add_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "training/Adam/m_11_1"
  input: "^training/Adam/AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "training/Adam/v_11_1"
  input: "training/Adam/add_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "training/Adam/v_11_1"
  input: "^training/Adam/AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "conv_dw_2_bn/beta"
  input: "training/Adam/sub_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "conv_dw_2_bn/beta"
  input: "^training/Adam/AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_61/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_12_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_61"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_98"
  input: "training/Adam/mul_61/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_38/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_38"
  op: "Sub"
  input: "training/Adam/sub_38/x"
  input: "training/Adam/ReadVariableOp_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_62"
  op: "Mul"
  input: "training/Adam/sub_38"
  input: "training/Adam/gradients/conv_pw_2/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_37"
  op: "Add"
  input: "training/Adam/mul_61"
  input: "training/Adam/mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_63/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_12_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_63"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_100"
  input: "training/Adam/mul_63/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_39/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_39"
  op: "Sub"
  input: "training/Adam/sub_39/x"
  input: "training/Adam/ReadVariableOp_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_12"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_2/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_64"
  op: "Mul"
  input: "training/Adam/sub_39"
  input: "training/Adam/Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_38"
  op: "Add"
  input: "training/Adam/mul_63"
  input: "training/Adam/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_65"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_13/Minimum"
  op: "Minimum"
  input: "training/Adam/add_38"
  input: "training/Adam/Const_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_13"
  op: "Maximum"
  input: "training/Adam/clip_by_value_13/Minimum"
  input: "training/Adam/Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_13"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_39/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_39"
  op: "Add"
  input: "training/Adam/Sqrt_13"
  input: "training/Adam/add_39/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_13"
  op: "RealDiv"
  input: "training/Adam/mul_65"
  input: "training/Adam/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "conv_pw_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_40"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_102"
  input: "training/Adam/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "training/Adam/m_12_1"
  input: "training/Adam/add_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "training/Adam/m_12_1"
  input: "^training/Adam/AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "training/Adam/v_12_1"
  input: "training/Adam/add_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "training/Adam/v_12_1"
  input: "^training/Adam/AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "conv_pw_2/kernel"
  input: "training/Adam/sub_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "conv_pw_2/kernel"
  input: "^training/Adam/AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_66/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_13_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_66"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_106"
  input: "training/Adam/mul_66/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_41/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_41"
  op: "Sub"
  input: "training/Adam/sub_41/x"
  input: "training/Adam/ReadVariableOp_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_67"
  op: "Mul"
  input: "training/Adam/sub_41"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_40"
  op: "Add"
  input: "training/Adam/mul_66"
  input: "training/Adam/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_68/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_13_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_68"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_108"
  input: "training/Adam/mul_68/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_42"
  op: "Sub"
  input: "training/Adam/sub_42/x"
  input: "training/Adam/ReadVariableOp_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_13"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_69"
  op: "Mul"
  input: "training/Adam/sub_42"
  input: "training/Adam/Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_41"
  op: "Add"
  input: "training/Adam/mul_68"
  input: "training/Adam/mul_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_70"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_14/Minimum"
  op: "Minimum"
  input: "training/Adam/add_41"
  input: "training/Adam/Const_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_14"
  op: "Maximum"
  input: "training/Adam/clip_by_value_14/Minimum"
  input: "training/Adam/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_14"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_42"
  op: "Add"
  input: "training/Adam/Sqrt_14"
  input: "training/Adam/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_14"
  op: "RealDiv"
  input: "training/Adam/mul_70"
  input: "training/Adam/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_43"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_110"
  input: "training/Adam/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "training/Adam/m_13_1"
  input: "training/Adam/add_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "training/Adam/m_13_1"
  input: "^training/Adam/AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "training/Adam/v_13_1"
  input: "training/Adam/add_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "training/Adam/v_13_1"
  input: "^training/Adam/AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/gamma"
  input: "training/Adam/sub_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/gamma"
  input: "^training/Adam/AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_71/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_14_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_71"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_114"
  input: "training/Adam/mul_71/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_44/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_44"
  op: "Sub"
  input: "training/Adam/sub_44/x"
  input: "training/Adam/ReadVariableOp_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_72"
  op: "Mul"
  input: "training/Adam/sub_44"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_43"
  op: "Add"
  input: "training/Adam/mul_71"
  input: "training/Adam/mul_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_73/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_14_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_73"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_116"
  input: "training/Adam/mul_73/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_45/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_45"
  op: "Sub"
  input: "training/Adam/sub_45/x"
  input: "training/Adam/ReadVariableOp_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_14"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_2_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_74"
  op: "Mul"
  input: "training/Adam/sub_45"
  input: "training/Adam/Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_44"
  op: "Add"
  input: "training/Adam/mul_73"
  input: "training/Adam/mul_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_75"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_15/Minimum"
  op: "Minimum"
  input: "training/Adam/add_44"
  input: "training/Adam/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_15"
  op: "Maximum"
  input: "training/Adam/clip_by_value_15/Minimum"
  input: "training/Adam/Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_15"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_45/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_45"
  op: "Add"
  input: "training/Adam/Sqrt_15"
  input: "training/Adam/add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_15"
  op: "RealDiv"
  input: "training/Adam/mul_75"
  input: "training/Adam/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_46"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_118"
  input: "training/Adam/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "training/Adam/m_14_1"
  input: "training/Adam/add_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "training/Adam/m_14_1"
  input: "^training/Adam/AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "training/Adam/v_14_1"
  input: "training/Adam/add_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "training/Adam/v_14_1"
  input: "^training/Adam/AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "conv_pw_2_bn/beta"
  input: "training/Adam/sub_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "conv_pw_2_bn/beta"
  input: "^training/Adam/AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_76/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_15_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_76"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_122"
  input: "training/Adam/mul_76/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_47"
  op: "Sub"
  input: "training/Adam/sub_47/x"
  input: "training/Adam/ReadVariableOp_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_77"
  op: "Mul"
  input: "training/Adam/sub_47"
  input: "training/Adam/gradients/conv_dw_3/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_46"
  op: "Add"
  input: "training/Adam/mul_76"
  input: "training/Adam/mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_78/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_15_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_78"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_124"
  input: "training/Adam/mul_78/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_48"
  op: "Sub"
  input: "training/Adam/sub_48/x"
  input: "training/Adam/ReadVariableOp_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_15"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_3/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_79"
  op: "Mul"
  input: "training/Adam/sub_48"
  input: "training/Adam/Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_47"
  op: "Add"
  input: "training/Adam/mul_78"
  input: "training/Adam/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_80"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_16/Minimum"
  op: "Minimum"
  input: "training/Adam/add_47"
  input: "training/Adam/Const_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_16"
  op: "Maximum"
  input: "training/Adam/clip_by_value_16/Minimum"
  input: "training/Adam/Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_16"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_48"
  op: "Add"
  input: "training/Adam/Sqrt_16"
  input: "training/Adam/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_16"
  op: "RealDiv"
  input: "training/Adam/mul_80"
  input: "training/Adam/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_49"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_126"
  input: "training/Adam/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "training/Adam/m_15_1"
  input: "training/Adam/add_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "training/Adam/m_15_1"
  input: "^training/Adam/AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "training/Adam/v_15_1"
  input: "training/Adam/add_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "training/Adam/v_15_1"
  input: "^training/Adam/AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  input: "training/Adam/sub_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "conv_dw_3/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_81/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_16_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_81"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_130"
  input: "training/Adam/mul_81/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_50/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_50"
  op: "Sub"
  input: "training/Adam/sub_50/x"
  input: "training/Adam/ReadVariableOp_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_82"
  op: "Mul"
  input: "training/Adam/sub_50"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_49"
  op: "Add"
  input: "training/Adam/mul_81"
  input: "training/Adam/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_83/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_16_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_83"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_132"
  input: "training/Adam/mul_83/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_51/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_51"
  op: "Sub"
  input: "training/Adam/sub_51/x"
  input: "training/Adam/ReadVariableOp_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_16"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_84"
  op: "Mul"
  input: "training/Adam/sub_51"
  input: "training/Adam/Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_50"
  op: "Add"
  input: "training/Adam/mul_83"
  input: "training/Adam/mul_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_85"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_17/Minimum"
  op: "Minimum"
  input: "training/Adam/add_50"
  input: "training/Adam/Const_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_17"
  op: "Maximum"
  input: "training/Adam/clip_by_value_17/Minimum"
  input: "training/Adam/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_17"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_51/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_51"
  op: "Add"
  input: "training/Adam/Sqrt_17"
  input: "training/Adam/add_51/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_17"
  op: "RealDiv"
  input: "training/Adam/mul_85"
  input: "training/Adam/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_52"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_134"
  input: "training/Adam/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "training/Adam/m_16_1"
  input: "training/Adam/add_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "training/Adam/m_16_1"
  input: "^training/Adam/AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "training/Adam/v_16_1"
  input: "training/Adam/add_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "training/Adam/v_16_1"
  input: "^training/Adam/AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/gamma"
  input: "training/Adam/sub_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/gamma"
  input: "^training/Adam/AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_86/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_17_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_86"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_138"
  input: "training/Adam/mul_86/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_53/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_53"
  op: "Sub"
  input: "training/Adam/sub_53/x"
  input: "training/Adam/ReadVariableOp_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_87"
  op: "Mul"
  input: "training/Adam/sub_53"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_52"
  op: "Add"
  input: "training/Adam/mul_86"
  input: "training/Adam/mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_88/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_17_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_88"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_140"
  input: "training/Adam/mul_88/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_54"
  op: "Sub"
  input: "training/Adam/sub_54/x"
  input: "training/Adam/ReadVariableOp_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_17"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_89"
  op: "Mul"
  input: "training/Adam/sub_54"
  input: "training/Adam/Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_53"
  op: "Add"
  input: "training/Adam/mul_88"
  input: "training/Adam/mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_90"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_18/Minimum"
  op: "Minimum"
  input: "training/Adam/add_53"
  input: "training/Adam/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_18"
  op: "Maximum"
  input: "training/Adam/clip_by_value_18/Minimum"
  input: "training/Adam/Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_18"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_54"
  op: "Add"
  input: "training/Adam/Sqrt_18"
  input: "training/Adam/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_18"
  op: "RealDiv"
  input: "training/Adam/mul_90"
  input: "training/Adam/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_55"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_142"
  input: "training/Adam/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "training/Adam/m_17_1"
  input: "training/Adam/add_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "training/Adam/m_17_1"
  input: "^training/Adam/AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "training/Adam/v_17_1"
  input: "training/Adam/add_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "training/Adam/v_17_1"
  input: "^training/Adam/AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "conv_dw_3_bn/beta"
  input: "training/Adam/sub_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "conv_dw_3_bn/beta"
  input: "^training/Adam/AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_91/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_18_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_91"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_146"
  input: "training/Adam/mul_91/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_56/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_56"
  op: "Sub"
  input: "training/Adam/sub_56/x"
  input: "training/Adam/ReadVariableOp_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_92"
  op: "Mul"
  input: "training/Adam/sub_56"
  input: "training/Adam/gradients/conv_pw_3/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_55"
  op: "Add"
  input: "training/Adam/mul_91"
  input: "training/Adam/mul_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_93/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_18_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_93"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_148"
  input: "training/Adam/mul_93/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_57/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_57"
  op: "Sub"
  input: "training/Adam/sub_57/x"
  input: "training/Adam/ReadVariableOp_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_18"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_3/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_94"
  op: "Mul"
  input: "training/Adam/sub_57"
  input: "training/Adam/Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_56"
  op: "Add"
  input: "training/Adam/mul_93"
  input: "training/Adam/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_95"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_19/Minimum"
  op: "Minimum"
  input: "training/Adam/add_56"
  input: "training/Adam/Const_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_19"
  op: "Maximum"
  input: "training/Adam/clip_by_value_19/Minimum"
  input: "training/Adam/Const_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_19"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_57/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_57"
  op: "Add"
  input: "training/Adam/Sqrt_19"
  input: "training/Adam/add_57/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_19"
  op: "RealDiv"
  input: "training/Adam/mul_95"
  input: "training/Adam/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "conv_pw_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_58"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_150"
  input: "training/Adam/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "training/Adam/m_18_1"
  input: "training/Adam/add_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "training/Adam/m_18_1"
  input: "^training/Adam/AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "training/Adam/v_18_1"
  input: "training/Adam/add_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "training/Adam/v_18_1"
  input: "^training/Adam/AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "conv_pw_3/kernel"
  input: "training/Adam/sub_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "conv_pw_3/kernel"
  input: "^training/Adam/AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_96/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_19_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_96"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_154"
  input: "training/Adam/mul_96/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_59"
  op: "Sub"
  input: "training/Adam/sub_59/x"
  input: "training/Adam/ReadVariableOp_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_97"
  op: "Mul"
  input: "training/Adam/sub_59"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_58"
  op: "Add"
  input: "training/Adam/mul_96"
  input: "training/Adam/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_98/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_19_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_98"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_156"
  input: "training/Adam/mul_98/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_60"
  op: "Sub"
  input: "training/Adam/sub_60/x"
  input: "training/Adam/ReadVariableOp_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_19"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_99"
  op: "Mul"
  input: "training/Adam/sub_60"
  input: "training/Adam/Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_59"
  op: "Add"
  input: "training/Adam/mul_98"
  input: "training/Adam/mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_100"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_20/Minimum"
  op: "Minimum"
  input: "training/Adam/add_59"
  input: "training/Adam/Const_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_20"
  op: "Maximum"
  input: "training/Adam/clip_by_value_20/Minimum"
  input: "training/Adam/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_20"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_60"
  op: "Add"
  input: "training/Adam/Sqrt_20"
  input: "training/Adam/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_20"
  op: "RealDiv"
  input: "training/Adam/mul_100"
  input: "training/Adam/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_61"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_158"
  input: "training/Adam/truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "training/Adam/m_19_1"
  input: "training/Adam/add_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "training/Adam/m_19_1"
  input: "^training/Adam/AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "training/Adam/v_19_1"
  input: "training/Adam/add_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "training/Adam/v_19_1"
  input: "^training/Adam/AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/gamma"
  input: "training/Adam/sub_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/gamma"
  input: "^training/Adam/AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_101/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_20_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_101"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_162"
  input: "training/Adam/mul_101/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_62/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_62"
  op: "Sub"
  input: "training/Adam/sub_62/x"
  input: "training/Adam/ReadVariableOp_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_102"
  op: "Mul"
  input: "training/Adam/sub_62"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_61"
  op: "Add"
  input: "training/Adam/mul_101"
  input: "training/Adam/mul_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_103/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_20_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_103"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_164"
  input: "training/Adam/mul_103/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_63/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_63"
  op: "Sub"
  input: "training/Adam/sub_63/x"
  input: "training/Adam/ReadVariableOp_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_20"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_3_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_104"
  op: "Mul"
  input: "training/Adam/sub_63"
  input: "training/Adam/Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_62"
  op: "Add"
  input: "training/Adam/mul_103"
  input: "training/Adam/mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_105"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_21/Minimum"
  op: "Minimum"
  input: "training/Adam/add_62"
  input: "training/Adam/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_21"
  op: "Maximum"
  input: "training/Adam/clip_by_value_21/Minimum"
  input: "training/Adam/Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_21"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_63/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_63"
  op: "Add"
  input: "training/Adam/Sqrt_21"
  input: "training/Adam/add_63/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_21"
  op: "RealDiv"
  input: "training/Adam/mul_105"
  input: "training/Adam/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_64"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_166"
  input: "training/Adam/truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "training/Adam/m_20_1"
  input: "training/Adam/add_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "training/Adam/m_20_1"
  input: "^training/Adam/AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "training/Adam/v_20_1"
  input: "training/Adam/add_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "training/Adam/v_20_1"
  input: "^training/Adam/AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "conv_pw_3_bn/beta"
  input: "training/Adam/sub_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "conv_pw_3_bn/beta"
  input: "^training/Adam/AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_106/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_21_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_106"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_170"
  input: "training/Adam/mul_106/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_65/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_65"
  op: "Sub"
  input: "training/Adam/sub_65/x"
  input: "training/Adam/ReadVariableOp_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_107"
  op: "Mul"
  input: "training/Adam/sub_65"
  input: "training/Adam/gradients/conv_dw_4/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_64"
  op: "Add"
  input: "training/Adam/mul_106"
  input: "training/Adam/mul_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_108/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_21_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_108"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_172"
  input: "training/Adam/mul_108/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_66"
  op: "Sub"
  input: "training/Adam/sub_66/x"
  input: "training/Adam/ReadVariableOp_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_21"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_4/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_109"
  op: "Mul"
  input: "training/Adam/sub_66"
  input: "training/Adam/Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_65"
  op: "Add"
  input: "training/Adam/mul_108"
  input: "training/Adam/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_110"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_22/Minimum"
  op: "Minimum"
  input: "training/Adam/add_65"
  input: "training/Adam/Const_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_22"
  op: "Maximum"
  input: "training/Adam/clip_by_value_22/Minimum"
  input: "training/Adam/Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_22"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_66"
  op: "Add"
  input: "training/Adam/Sqrt_22"
  input: "training/Adam/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_22"
  op: "RealDiv"
  input: "training/Adam/mul_110"
  input: "training/Adam/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_67"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_174"
  input: "training/Adam/truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "training/Adam/m_21_1"
  input: "training/Adam/add_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "training/Adam/m_21_1"
  input: "^training/Adam/AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "training/Adam/v_21_1"
  input: "training/Adam/add_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "training/Adam/v_21_1"
  input: "^training/Adam/AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  input: "training/Adam/sub_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "conv_dw_4/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_111/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_22_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_111"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_178"
  input: "training/Adam/mul_111/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_68/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_68"
  op: "Sub"
  input: "training/Adam/sub_68/x"
  input: "training/Adam/ReadVariableOp_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_112"
  op: "Mul"
  input: "training/Adam/sub_68"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_67"
  op: "Add"
  input: "training/Adam/mul_111"
  input: "training/Adam/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_113/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_22_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_113"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_180"
  input: "training/Adam/mul_113/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_69/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_69"
  op: "Sub"
  input: "training/Adam/sub_69/x"
  input: "training/Adam/ReadVariableOp_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_22"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_114"
  op: "Mul"
  input: "training/Adam/sub_69"
  input: "training/Adam/Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_68"
  op: "Add"
  input: "training/Adam/mul_113"
  input: "training/Adam/mul_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_115"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_23/Minimum"
  op: "Minimum"
  input: "training/Adam/add_68"
  input: "training/Adam/Const_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_23"
  op: "Maximum"
  input: "training/Adam/clip_by_value_23/Minimum"
  input: "training/Adam/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_23"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_69/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_69"
  op: "Add"
  input: "training/Adam/Sqrt_23"
  input: "training/Adam/add_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_23"
  op: "RealDiv"
  input: "training/Adam/mul_115"
  input: "training/Adam/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_70"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_182"
  input: "training/Adam/truediv_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "training/Adam/m_22_1"
  input: "training/Adam/add_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "training/Adam/m_22_1"
  input: "^training/Adam/AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "training/Adam/v_22_1"
  input: "training/Adam/add_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "training/Adam/v_22_1"
  input: "^training/Adam/AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/gamma"
  input: "training/Adam/sub_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/gamma"
  input: "^training/Adam/AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_116/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_23_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_116"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_186"
  input: "training/Adam/mul_116/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_71/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_71"
  op: "Sub"
  input: "training/Adam/sub_71/x"
  input: "training/Adam/ReadVariableOp_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_117"
  op: "Mul"
  input: "training/Adam/sub_71"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_70"
  op: "Add"
  input: "training/Adam/mul_116"
  input: "training/Adam/mul_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_118/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_23_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_118"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_188"
  input: "training/Adam/mul_118/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_72/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_72"
  op: "Sub"
  input: "training/Adam/sub_72/x"
  input: "training/Adam/ReadVariableOp_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_23"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_119"
  op: "Mul"
  input: "training/Adam/sub_72"
  input: "training/Adam/Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_71"
  op: "Add"
  input: "training/Adam/mul_118"
  input: "training/Adam/mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_120"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_24/Minimum"
  op: "Minimum"
  input: "training/Adam/add_71"
  input: "training/Adam/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_24"
  op: "Maximum"
  input: "training/Adam/clip_by_value_24/Minimum"
  input: "training/Adam/Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_24"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_72"
  op: "Add"
  input: "training/Adam/Sqrt_24"
  input: "training/Adam/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_24"
  op: "RealDiv"
  input: "training/Adam/mul_120"
  input: "training/Adam/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_73"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_190"
  input: "training/Adam/truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "training/Adam/m_23_1"
  input: "training/Adam/add_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "training/Adam/m_23_1"
  input: "^training/Adam/AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "training/Adam/v_23_1"
  input: "training/Adam/add_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "training/Adam/v_23_1"
  input: "^training/Adam/AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "conv_dw_4_bn/beta"
  input: "training/Adam/sub_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "conv_dw_4_bn/beta"
  input: "^training/Adam/AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_121/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_24_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_121"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_194"
  input: "training/Adam/mul_121/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_74/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_74"
  op: "Sub"
  input: "training/Adam/sub_74/x"
  input: "training/Adam/ReadVariableOp_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_122"
  op: "Mul"
  input: "training/Adam/sub_74"
  input: "training/Adam/gradients/conv_pw_4/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_73"
  op: "Add"
  input: "training/Adam/mul_121"
  input: "training/Adam/mul_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_123/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_24_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_123"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_196"
  input: "training/Adam/mul_123/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_75/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_75"
  op: "Sub"
  input: "training/Adam/sub_75/x"
  input: "training/Adam/ReadVariableOp_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_24"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_4/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_124"
  op: "Mul"
  input: "training/Adam/sub_75"
  input: "training/Adam/Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_74"
  op: "Add"
  input: "training/Adam/mul_123"
  input: "training/Adam/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_125"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_25/Minimum"
  op: "Minimum"
  input: "training/Adam/add_74"
  input: "training/Adam/Const_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_25"
  op: "Maximum"
  input: "training/Adam/clip_by_value_25/Minimum"
  input: "training/Adam/Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_25"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_75/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_75"
  op: "Add"
  input: "training/Adam/Sqrt_25"
  input: "training/Adam/add_75/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_25"
  op: "RealDiv"
  input: "training/Adam/mul_125"
  input: "training/Adam/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "conv_pw_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_76"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_198"
  input: "training/Adam/truediv_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "training/Adam/m_24_1"
  input: "training/Adam/add_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "training/Adam/m_24_1"
  input: "^training/Adam/AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "training/Adam/v_24_1"
  input: "training/Adam/add_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "training/Adam/v_24_1"
  input: "^training/Adam/AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "conv_pw_4/kernel"
  input: "training/Adam/sub_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "conv_pw_4/kernel"
  input: "^training/Adam/AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_126/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_25_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_126"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_202"
  input: "training/Adam/mul_126/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_77/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_77"
  op: "Sub"
  input: "training/Adam/sub_77/x"
  input: "training/Adam/ReadVariableOp_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_127"
  op: "Mul"
  input: "training/Adam/sub_77"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_76"
  op: "Add"
  input: "training/Adam/mul_126"
  input: "training/Adam/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_128/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_25_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_128"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_204"
  input: "training/Adam/mul_128/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_78/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_78"
  op: "Sub"
  input: "training/Adam/sub_78/x"
  input: "training/Adam/ReadVariableOp_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_25"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_129"
  op: "Mul"
  input: "training/Adam/sub_78"
  input: "training/Adam/Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_77"
  op: "Add"
  input: "training/Adam/mul_128"
  input: "training/Adam/mul_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_130"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_26/Minimum"
  op: "Minimum"
  input: "training/Adam/add_77"
  input: "training/Adam/Const_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_26"
  op: "Maximum"
  input: "training/Adam/clip_by_value_26/Minimum"
  input: "training/Adam/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_26"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_78"
  op: "Add"
  input: "training/Adam/Sqrt_26"
  input: "training/Adam/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_26"
  op: "RealDiv"
  input: "training/Adam/mul_130"
  input: "training/Adam/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_79"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_206"
  input: "training/Adam/truediv_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "training/Adam/m_25_1"
  input: "training/Adam/add_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "training/Adam/m_25_1"
  input: "^training/Adam/AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "training/Adam/v_25_1"
  input: "training/Adam/add_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "training/Adam/v_25_1"
  input: "^training/Adam/AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/gamma"
  input: "training/Adam/sub_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/gamma"
  input: "^training/Adam/AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_131/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_26_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_131"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_210"
  input: "training/Adam/mul_131/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_80/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_80"
  op: "Sub"
  input: "training/Adam/sub_80/x"
  input: "training/Adam/ReadVariableOp_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_132"
  op: "Mul"
  input: "training/Adam/sub_80"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_79"
  op: "Add"
  input: "training/Adam/mul_131"
  input: "training/Adam/mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_133/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_26_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_133"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_212"
  input: "training/Adam/mul_133/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_81/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_81"
  op: "Sub"
  input: "training/Adam/sub_81/x"
  input: "training/Adam/ReadVariableOp_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_26"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_4_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_134"
  op: "Mul"
  input: "training/Adam/sub_81"
  input: "training/Adam/Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_80"
  op: "Add"
  input: "training/Adam/mul_133"
  input: "training/Adam/mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_135"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_27/Minimum"
  op: "Minimum"
  input: "training/Adam/add_80"
  input: "training/Adam/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_27"
  op: "Maximum"
  input: "training/Adam/clip_by_value_27/Minimum"
  input: "training/Adam/Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_27"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_81/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_81"
  op: "Add"
  input: "training/Adam/Sqrt_27"
  input: "training/Adam/add_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_27"
  op: "RealDiv"
  input: "training/Adam/mul_135"
  input: "training/Adam/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_82"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_214"
  input: "training/Adam/truediv_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "training/Adam/m_26_1"
  input: "training/Adam/add_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "training/Adam/m_26_1"
  input: "^training/Adam/AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "training/Adam/v_26_1"
  input: "training/Adam/add_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "training/Adam/v_26_1"
  input: "^training/Adam/AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv_pw_4_bn/beta"
  input: "training/Adam/sub_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "conv_pw_4_bn/beta"
  input: "^training/Adam/AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_136/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_27_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_136"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_218"
  input: "training/Adam/mul_136/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_83/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_83"
  op: "Sub"
  input: "training/Adam/sub_83/x"
  input: "training/Adam/ReadVariableOp_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_137"
  op: "Mul"
  input: "training/Adam/sub_83"
  input: "training/Adam/gradients/conv_dw_5/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_82"
  op: "Add"
  input: "training/Adam/mul_136"
  input: "training/Adam/mul_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_138/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_27_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_138"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_220"
  input: "training/Adam/mul_138/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_84"
  op: "Sub"
  input: "training/Adam/sub_84/x"
  input: "training/Adam/ReadVariableOp_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_27"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_5/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_139"
  op: "Mul"
  input: "training/Adam/sub_84"
  input: "training/Adam/Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_83"
  op: "Add"
  input: "training/Adam/mul_138"
  input: "training/Adam/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_140"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_28/Minimum"
  op: "Minimum"
  input: "training/Adam/add_83"
  input: "training/Adam/Const_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_28"
  op: "Maximum"
  input: "training/Adam/clip_by_value_28/Minimum"
  input: "training/Adam/Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_28"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_84"
  op: "Add"
  input: "training/Adam/Sqrt_28"
  input: "training/Adam/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_28"
  op: "RealDiv"
  input: "training/Adam/mul_140"
  input: "training/Adam/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_85"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_222"
  input: "training/Adam/truediv_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "training/Adam/m_27_1"
  input: "training/Adam/add_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "training/Adam/m_27_1"
  input: "^training/Adam/AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "training/Adam/v_27_1"
  input: "training/Adam/add_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "training/Adam/v_27_1"
  input: "^training/Adam/AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  input: "training/Adam/sub_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "conv_dw_5/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_141/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_28_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_141"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_226"
  input: "training/Adam/mul_141/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_86/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_86"
  op: "Sub"
  input: "training/Adam/sub_86/x"
  input: "training/Adam/ReadVariableOp_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_142"
  op: "Mul"
  input: "training/Adam/sub_86"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_85"
  op: "Add"
  input: "training/Adam/mul_141"
  input: "training/Adam/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_143/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_28_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_143"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_228"
  input: "training/Adam/mul_143/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_87/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_87"
  op: "Sub"
  input: "training/Adam/sub_87/x"
  input: "training/Adam/ReadVariableOp_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_28"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_144"
  op: "Mul"
  input: "training/Adam/sub_87"
  input: "training/Adam/Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_86"
  op: "Add"
  input: "training/Adam/mul_143"
  input: "training/Adam/mul_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_145"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_29/Minimum"
  op: "Minimum"
  input: "training/Adam/add_86"
  input: "training/Adam/Const_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_29"
  op: "Maximum"
  input: "training/Adam/clip_by_value_29/Minimum"
  input: "training/Adam/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_29"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_87/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_87"
  op: "Add"
  input: "training/Adam/Sqrt_29"
  input: "training/Adam/add_87/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_29"
  op: "RealDiv"
  input: "training/Adam/mul_145"
  input: "training/Adam/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_88"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_230"
  input: "training/Adam/truediv_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "training/Adam/m_28_1"
  input: "training/Adam/add_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "training/Adam/m_28_1"
  input: "^training/Adam/AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "training/Adam/v_28_1"
  input: "training/Adam/add_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "training/Adam/v_28_1"
  input: "^training/Adam/AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/gamma"
  input: "training/Adam/sub_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/gamma"
  input: "^training/Adam/AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_146/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_29_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_146"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_234"
  input: "training/Adam/mul_146/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_89/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_89"
  op: "Sub"
  input: "training/Adam/sub_89/x"
  input: "training/Adam/ReadVariableOp_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_147"
  op: "Mul"
  input: "training/Adam/sub_89"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_88"
  op: "Add"
  input: "training/Adam/mul_146"
  input: "training/Adam/mul_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_148/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_29_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_148"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_236"
  input: "training/Adam/mul_148/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_90"
  op: "Sub"
  input: "training/Adam/sub_90/x"
  input: "training/Adam/ReadVariableOp_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_29"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_149"
  op: "Mul"
  input: "training/Adam/sub_90"
  input: "training/Adam/Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_89"
  op: "Add"
  input: "training/Adam/mul_148"
  input: "training/Adam/mul_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_150"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_30/Minimum"
  op: "Minimum"
  input: "training/Adam/add_89"
  input: "training/Adam/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_30"
  op: "Maximum"
  input: "training/Adam/clip_by_value_30/Minimum"
  input: "training/Adam/Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_30"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_90"
  op: "Add"
  input: "training/Adam/Sqrt_30"
  input: "training/Adam/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_30"
  op: "RealDiv"
  input: "training/Adam/mul_150"
  input: "training/Adam/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_91"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_238"
  input: "training/Adam/truediv_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "training/Adam/m_29_1"
  input: "training/Adam/add_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "training/Adam/m_29_1"
  input: "^training/Adam/AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "training/Adam/v_29_1"
  input: "training/Adam/add_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "training/Adam/v_29_1"
  input: "^training/Adam/AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "conv_dw_5_bn/beta"
  input: "training/Adam/sub_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "conv_dw_5_bn/beta"
  input: "^training/Adam/AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_151/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_30_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_151"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_242"
  input: "training/Adam/mul_151/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_92/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_92"
  op: "Sub"
  input: "training/Adam/sub_92/x"
  input: "training/Adam/ReadVariableOp_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_152"
  op: "Mul"
  input: "training/Adam/sub_92"
  input: "training/Adam/gradients/conv_pw_5/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_91"
  op: "Add"
  input: "training/Adam/mul_151"
  input: "training/Adam/mul_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_153/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_30_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_153"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_244"
  input: "training/Adam/mul_153/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_93/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_93"
  op: "Sub"
  input: "training/Adam/sub_93/x"
  input: "training/Adam/ReadVariableOp_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_30"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_5/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_154"
  op: "Mul"
  input: "training/Adam/sub_93"
  input: "training/Adam/Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_92"
  op: "Add"
  input: "training/Adam/mul_153"
  input: "training/Adam/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_155"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_31/Minimum"
  op: "Minimum"
  input: "training/Adam/add_92"
  input: "training/Adam/Const_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_31"
  op: "Maximum"
  input: "training/Adam/clip_by_value_31/Minimum"
  input: "training/Adam/Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_31"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_93/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_93"
  op: "Add"
  input: "training/Adam/Sqrt_31"
  input: "training/Adam/add_93/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_31"
  op: "RealDiv"
  input: "training/Adam/mul_155"
  input: "training/Adam/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "conv_pw_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_94"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_246"
  input: "training/Adam/truediv_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "training/Adam/m_30_1"
  input: "training/Adam/add_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "training/Adam/m_30_1"
  input: "^training/Adam/AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "training/Adam/v_30_1"
  input: "training/Adam/add_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "training/Adam/v_30_1"
  input: "^training/Adam/AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "conv_pw_5/kernel"
  input: "training/Adam/sub_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "conv_pw_5/kernel"
  input: "^training/Adam/AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_156/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_31_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_156"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_250"
  input: "training/Adam/mul_156/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_95/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_95"
  op: "Sub"
  input: "training/Adam/sub_95/x"
  input: "training/Adam/ReadVariableOp_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_157"
  op: "Mul"
  input: "training/Adam/sub_95"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_94"
  op: "Add"
  input: "training/Adam/mul_156"
  input: "training/Adam/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_158/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_31_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_158"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_252"
  input: "training/Adam/mul_158/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_96"
  op: "Sub"
  input: "training/Adam/sub_96/x"
  input: "training/Adam/ReadVariableOp_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_31"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_159"
  op: "Mul"
  input: "training/Adam/sub_96"
  input: "training/Adam/Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_95"
  op: "Add"
  input: "training/Adam/mul_158"
  input: "training/Adam/mul_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_160"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_32/Minimum"
  op: "Minimum"
  input: "training/Adam/add_95"
  input: "training/Adam/Const_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_32"
  op: "Maximum"
  input: "training/Adam/clip_by_value_32/Minimum"
  input: "training/Adam/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_32"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_96"
  op: "Add"
  input: "training/Adam/Sqrt_32"
  input: "training/Adam/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_32"
  op: "RealDiv"
  input: "training/Adam/mul_160"
  input: "training/Adam/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_97"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_254"
  input: "training/Adam/truediv_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "training/Adam/m_31_1"
  input: "training/Adam/add_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "training/Adam/m_31_1"
  input: "^training/Adam/AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "training/Adam/v_31_1"
  input: "training/Adam/add_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "training/Adam/v_31_1"
  input: "^training/Adam/AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/gamma"
  input: "training/Adam/sub_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/gamma"
  input: "^training/Adam/AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_161/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_32_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_161"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_258"
  input: "training/Adam/mul_161/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_98/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_98"
  op: "Sub"
  input: "training/Adam/sub_98/x"
  input: "training/Adam/ReadVariableOp_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_162"
  op: "Mul"
  input: "training/Adam/sub_98"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_97"
  op: "Add"
  input: "training/Adam/mul_161"
  input: "training/Adam/mul_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_163/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_32_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_163"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_260"
  input: "training/Adam/mul_163/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_99/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_99"
  op: "Sub"
  input: "training/Adam/sub_99/x"
  input: "training/Adam/ReadVariableOp_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_32"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_5_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_164"
  op: "Mul"
  input: "training/Adam/sub_99"
  input: "training/Adam/Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_98"
  op: "Add"
  input: "training/Adam/mul_163"
  input: "training/Adam/mul_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_165"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_33/Minimum"
  op: "Minimum"
  input: "training/Adam/add_98"
  input: "training/Adam/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_33"
  op: "Maximum"
  input: "training/Adam/clip_by_value_33/Minimum"
  input: "training/Adam/Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_33"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_99/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_99"
  op: "Add"
  input: "training/Adam/Sqrt_33"
  input: "training/Adam/add_99/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_33"
  op: "RealDiv"
  input: "training/Adam/mul_165"
  input: "training/Adam/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_262"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_100"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_262"
  input: "training/Adam/truediv_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "training/Adam/m_32_1"
  input: "training/Adam/add_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_263"
  op: "ReadVariableOp"
  input: "training/Adam/m_32_1"
  input: "^training/Adam/AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "training/Adam/v_32_1"
  input: "training/Adam/add_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_264"
  op: "ReadVariableOp"
  input: "training/Adam/v_32_1"
  input: "^training/Adam/AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv_pw_5_bn/beta"
  input: "training/Adam/sub_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_265"
  op: "ReadVariableOp"
  input: "conv_pw_5_bn/beta"
  input: "^training/Adam/AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_266"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_166/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_33_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_166"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_266"
  input: "training/Adam/mul_166/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_267"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_101/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_101"
  op: "Sub"
  input: "training/Adam/sub_101/x"
  input: "training/Adam/ReadVariableOp_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_167"
  op: "Mul"
  input: "training/Adam/sub_101"
  input: "training/Adam/gradients/conv_dw_6/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_100"
  op: "Add"
  input: "training/Adam/mul_166"
  input: "training/Adam/mul_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_268"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_168/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_33_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_168"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_268"
  input: "training/Adam/mul_168/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_269"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_102"
  op: "Sub"
  input: "training/Adam/sub_102/x"
  input: "training/Adam/ReadVariableOp_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_33"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_6/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_169"
  op: "Mul"
  input: "training/Adam/sub_102"
  input: "training/Adam/Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_101"
  op: "Add"
  input: "training/Adam/mul_168"
  input: "training/Adam/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_170"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_34/Minimum"
  op: "Minimum"
  input: "training/Adam/add_101"
  input: "training/Adam/Const_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_34"
  op: "Maximum"
  input: "training/Adam/clip_by_value_34/Minimum"
  input: "training/Adam/Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_34"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_102"
  op: "Add"
  input: "training/Adam/Sqrt_34"
  input: "training/Adam/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_34"
  op: "RealDiv"
  input: "training/Adam/mul_170"
  input: "training/Adam/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_270"
  op: "ReadVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_103"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_270"
  input: "training/Adam/truediv_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "training/Adam/m_33_1"
  input: "training/Adam/add_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_271"
  op: "ReadVariableOp"
  input: "training/Adam/m_33_1"
  input: "^training/Adam/AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "training/Adam/v_33_1"
  input: "training/Adam/add_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_272"
  op: "ReadVariableOp"
  input: "training/Adam/v_33_1"
  input: "^training/Adam/AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  input: "training/Adam/sub_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_273"
  op: "ReadVariableOp"
  input: "conv_dw_6/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_274"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_171/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_34_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_171"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_274"
  input: "training/Adam/mul_171/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_275"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_104/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_104"
  op: "Sub"
  input: "training/Adam/sub_104/x"
  input: "training/Adam/ReadVariableOp_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_172"
  op: "Mul"
  input: "training/Adam/sub_104"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_103"
  op: "Add"
  input: "training/Adam/mul_171"
  input: "training/Adam/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_276"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_173/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_34_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_173"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_276"
  input: "training/Adam/mul_173/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_277"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_105/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_105"
  op: "Sub"
  input: "training/Adam/sub_105/x"
  input: "training/Adam/ReadVariableOp_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_34"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_174"
  op: "Mul"
  input: "training/Adam/sub_105"
  input: "training/Adam/Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_104"
  op: "Add"
  input: "training/Adam/mul_173"
  input: "training/Adam/mul_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_175"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_35/Minimum"
  op: "Minimum"
  input: "training/Adam/add_104"
  input: "training/Adam/Const_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_35"
  op: "Maximum"
  input: "training/Adam/clip_by_value_35/Minimum"
  input: "training/Adam/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_35"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_105/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_105"
  op: "Add"
  input: "training/Adam/Sqrt_35"
  input: "training/Adam/add_105/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_35"
  op: "RealDiv"
  input: "training/Adam/mul_175"
  input: "training/Adam/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_278"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_106"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_278"
  input: "training/Adam/truediv_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "training/Adam/m_34_1"
  input: "training/Adam/add_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_279"
  op: "ReadVariableOp"
  input: "training/Adam/m_34_1"
  input: "^training/Adam/AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "training/Adam/v_34_1"
  input: "training/Adam/add_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_280"
  op: "ReadVariableOp"
  input: "training/Adam/v_34_1"
  input: "^training/Adam/AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/gamma"
  input: "training/Adam/sub_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_281"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/gamma"
  input: "^training/Adam/AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_282"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_176/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_35_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_176"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_282"
  input: "training/Adam/mul_176/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_283"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_107/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_107"
  op: "Sub"
  input: "training/Adam/sub_107/x"
  input: "training/Adam/ReadVariableOp_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_177"
  op: "Mul"
  input: "training/Adam/sub_107"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_106"
  op: "Add"
  input: "training/Adam/mul_176"
  input: "training/Adam/mul_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_284"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_178/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_35_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_178"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_284"
  input: "training/Adam/mul_178/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_285"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_108"
  op: "Sub"
  input: "training/Adam/sub_108/x"
  input: "training/Adam/ReadVariableOp_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_35"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_179"
  op: "Mul"
  input: "training/Adam/sub_108"
  input: "training/Adam/Square_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_107"
  op: "Add"
  input: "training/Adam/mul_178"
  input: "training/Adam/mul_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_180"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_36/Minimum"
  op: "Minimum"
  input: "training/Adam/add_107"
  input: "training/Adam/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_36"
  op: "Maximum"
  input: "training/Adam/clip_by_value_36/Minimum"
  input: "training/Adam/Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_36"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_108"
  op: "Add"
  input: "training/Adam/Sqrt_36"
  input: "training/Adam/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_36"
  op: "RealDiv"
  input: "training/Adam/mul_180"
  input: "training/Adam/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_286"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_109"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_286"
  input: "training/Adam/truediv_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "training/Adam/m_35_1"
  input: "training/Adam/add_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_287"
  op: "ReadVariableOp"
  input: "training/Adam/m_35_1"
  input: "^training/Adam/AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "training/Adam/v_35_1"
  input: "training/Adam/add_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_288"
  op: "ReadVariableOp"
  input: "training/Adam/v_35_1"
  input: "^training/Adam/AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv_dw_6_bn/beta"
  input: "training/Adam/sub_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_289"
  op: "ReadVariableOp"
  input: "conv_dw_6_bn/beta"
  input: "^training/Adam/AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_290"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_181/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_36_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_181"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_290"
  input: "training/Adam/mul_181/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_291"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_110/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_110"
  op: "Sub"
  input: "training/Adam/sub_110/x"
  input: "training/Adam/ReadVariableOp_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_182"
  op: "Mul"
  input: "training/Adam/sub_110"
  input: "training/Adam/gradients/conv_pw_6/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_109"
  op: "Add"
  input: "training/Adam/mul_181"
  input: "training/Adam/mul_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_292"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_183/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_36_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_183"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_292"
  input: "training/Adam/mul_183/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_293"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_111/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_111"
  op: "Sub"
  input: "training/Adam/sub_111/x"
  input: "training/Adam/ReadVariableOp_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_36"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_6/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_184"
  op: "Mul"
  input: "training/Adam/sub_111"
  input: "training/Adam/Square_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_110"
  op: "Add"
  input: "training/Adam/mul_183"
  input: "training/Adam/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_185"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_37/Minimum"
  op: "Minimum"
  input: "training/Adam/add_110"
  input: "training/Adam/Const_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_37"
  op: "Maximum"
  input: "training/Adam/clip_by_value_37/Minimum"
  input: "training/Adam/Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_37"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_111/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_111"
  op: "Add"
  input: "training/Adam/Sqrt_37"
  input: "training/Adam/add_111/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_37"
  op: "RealDiv"
  input: "training/Adam/mul_185"
  input: "training/Adam/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_294"
  op: "ReadVariableOp"
  input: "conv_pw_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_112"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_294"
  input: "training/Adam/truediv_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "training/Adam/m_36_1"
  input: "training/Adam/add_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_295"
  op: "ReadVariableOp"
  input: "training/Adam/m_36_1"
  input: "^training/Adam/AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "training/Adam/v_36_1"
  input: "training/Adam/add_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_296"
  op: "ReadVariableOp"
  input: "training/Adam/v_36_1"
  input: "^training/Adam/AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "conv_pw_6/kernel"
  input: "training/Adam/sub_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_297"
  op: "ReadVariableOp"
  input: "conv_pw_6/kernel"
  input: "^training/Adam/AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_298"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_186/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_37_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_186"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_298"
  input: "training/Adam/mul_186/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_299"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_113/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_113"
  op: "Sub"
  input: "training/Adam/sub_113/x"
  input: "training/Adam/ReadVariableOp_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_187"
  op: "Mul"
  input: "training/Adam/sub_113"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_112"
  op: "Add"
  input: "training/Adam/mul_186"
  input: "training/Adam/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_300"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_188/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_37_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_188"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_300"
  input: "training/Adam/mul_188/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_301"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_114"
  op: "Sub"
  input: "training/Adam/sub_114/x"
  input: "training/Adam/ReadVariableOp_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_37"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_189"
  op: "Mul"
  input: "training/Adam/sub_114"
  input: "training/Adam/Square_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_113"
  op: "Add"
  input: "training/Adam/mul_188"
  input: "training/Adam/mul_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_190"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_38/Minimum"
  op: "Minimum"
  input: "training/Adam/add_113"
  input: "training/Adam/Const_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_38"
  op: "Maximum"
  input: "training/Adam/clip_by_value_38/Minimum"
  input: "training/Adam/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_38"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_114"
  op: "Add"
  input: "training/Adam/Sqrt_38"
  input: "training/Adam/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_38"
  op: "RealDiv"
  input: "training/Adam/mul_190"
  input: "training/Adam/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_302"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_115"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_302"
  input: "training/Adam/truediv_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "training/Adam/m_37_1"
  input: "training/Adam/add_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_303"
  op: "ReadVariableOp"
  input: "training/Adam/m_37_1"
  input: "^training/Adam/AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "training/Adam/v_37_1"
  input: "training/Adam/add_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_304"
  op: "ReadVariableOp"
  input: "training/Adam/v_37_1"
  input: "^training/Adam/AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/gamma"
  input: "training/Adam/sub_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_305"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/gamma"
  input: "^training/Adam/AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_306"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_191/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_38_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_191"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_306"
  input: "training/Adam/mul_191/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_307"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_116/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_116"
  op: "Sub"
  input: "training/Adam/sub_116/x"
  input: "training/Adam/ReadVariableOp_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_192"
  op: "Mul"
  input: "training/Adam/sub_116"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_115"
  op: "Add"
  input: "training/Adam/mul_191"
  input: "training/Adam/mul_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_308"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_193/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_38_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_193"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_308"
  input: "training/Adam/mul_193/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_309"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_117/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_117"
  op: "Sub"
  input: "training/Adam/sub_117/x"
  input: "training/Adam/ReadVariableOp_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_38"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_6_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_194"
  op: "Mul"
  input: "training/Adam/sub_117"
  input: "training/Adam/Square_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_116"
  op: "Add"
  input: "training/Adam/mul_193"
  input: "training/Adam/mul_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_195"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_39/Minimum"
  op: "Minimum"
  input: "training/Adam/add_116"
  input: "training/Adam/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_39"
  op: "Maximum"
  input: "training/Adam/clip_by_value_39/Minimum"
  input: "training/Adam/Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_39"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_117/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_117"
  op: "Add"
  input: "training/Adam/Sqrt_39"
  input: "training/Adam/add_117/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_39"
  op: "RealDiv"
  input: "training/Adam/mul_195"
  input: "training/Adam/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_310"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_118"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_310"
  input: "training/Adam/truediv_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "training/Adam/m_38_1"
  input: "training/Adam/add_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_311"
  op: "ReadVariableOp"
  input: "training/Adam/m_38_1"
  input: "^training/Adam/AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "training/Adam/v_38_1"
  input: "training/Adam/add_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_312"
  op: "ReadVariableOp"
  input: "training/Adam/v_38_1"
  input: "^training/Adam/AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "conv_pw_6_bn/beta"
  input: "training/Adam/sub_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_313"
  op: "ReadVariableOp"
  input: "conv_pw_6_bn/beta"
  input: "^training/Adam/AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_314"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_196/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_39_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_196"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_314"
  input: "training/Adam/mul_196/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_315"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_119/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_119"
  op: "Sub"
  input: "training/Adam/sub_119/x"
  input: "training/Adam/ReadVariableOp_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_197"
  op: "Mul"
  input: "training/Adam/sub_119"
  input: "training/Adam/gradients/conv_dw_7/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_118"
  op: "Add"
  input: "training/Adam/mul_196"
  input: "training/Adam/mul_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_316"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_198/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_39_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_198"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_316"
  input: "training/Adam/mul_198/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_317"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_120/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_120"
  op: "Sub"
  input: "training/Adam/sub_120/x"
  input: "training/Adam/ReadVariableOp_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_39"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_7/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_199"
  op: "Mul"
  input: "training/Adam/sub_120"
  input: "training/Adam/Square_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_119"
  op: "Add"
  input: "training/Adam/mul_198"
  input: "training/Adam/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_200"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_40/Minimum"
  op: "Minimum"
  input: "training/Adam/add_119"
  input: "training/Adam/Const_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_40"
  op: "Maximum"
  input: "training/Adam/clip_by_value_40/Minimum"
  input: "training/Adam/Const_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_40"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_120"
  op: "Add"
  input: "training/Adam/Sqrt_40"
  input: "training/Adam/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_40"
  op: "RealDiv"
  input: "training/Adam/mul_200"
  input: "training/Adam/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_318"
  op: "ReadVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_121"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_318"
  input: "training/Adam/truediv_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "training/Adam/m_39_1"
  input: "training/Adam/add_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_319"
  op: "ReadVariableOp"
  input: "training/Adam/m_39_1"
  input: "^training/Adam/AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "training/Adam/v_39_1"
  input: "training/Adam/add_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_320"
  op: "ReadVariableOp"
  input: "training/Adam/v_39_1"
  input: "^training/Adam/AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  input: "training/Adam/sub_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_321"
  op: "ReadVariableOp"
  input: "conv_dw_7/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_322"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_201/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_40_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_201"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_322"
  input: "training/Adam/mul_201/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_323"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_122/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_122"
  op: "Sub"
  input: "training/Adam/sub_122/x"
  input: "training/Adam/ReadVariableOp_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_202"
  op: "Mul"
  input: "training/Adam/sub_122"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_121"
  op: "Add"
  input: "training/Adam/mul_201"
  input: "training/Adam/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_324"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_203/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_40_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_203"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_324"
  input: "training/Adam/mul_203/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_325"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_123/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_123"
  op: "Sub"
  input: "training/Adam/sub_123/x"
  input: "training/Adam/ReadVariableOp_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_40"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_204"
  op: "Mul"
  input: "training/Adam/sub_123"
  input: "training/Adam/Square_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_122"
  op: "Add"
  input: "training/Adam/mul_203"
  input: "training/Adam/mul_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_205"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_41/Minimum"
  op: "Minimum"
  input: "training/Adam/add_122"
  input: "training/Adam/Const_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_41"
  op: "Maximum"
  input: "training/Adam/clip_by_value_41/Minimum"
  input: "training/Adam/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_41"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_123/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_123"
  op: "Add"
  input: "training/Adam/Sqrt_41"
  input: "training/Adam/add_123/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_41"
  op: "RealDiv"
  input: "training/Adam/mul_205"
  input: "training/Adam/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_326"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_124"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_326"
  input: "training/Adam/truediv_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "training/Adam/m_40_1"
  input: "training/Adam/add_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_327"
  op: "ReadVariableOp"
  input: "training/Adam/m_40_1"
  input: "^training/Adam/AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "training/Adam/v_40_1"
  input: "training/Adam/add_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_328"
  op: "ReadVariableOp"
  input: "training/Adam/v_40_1"
  input: "^training/Adam/AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/gamma"
  input: "training/Adam/sub_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_329"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/gamma"
  input: "^training/Adam/AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_330"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_206/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_41_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_206"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_330"
  input: "training/Adam/mul_206/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_331"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_125/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_125"
  op: "Sub"
  input: "training/Adam/sub_125/x"
  input: "training/Adam/ReadVariableOp_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_207"
  op: "Mul"
  input: "training/Adam/sub_125"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_124"
  op: "Add"
  input: "training/Adam/mul_206"
  input: "training/Adam/mul_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_332"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_208/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_41_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_208"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_332"
  input: "training/Adam/mul_208/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_333"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_126/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_126"
  op: "Sub"
  input: "training/Adam/sub_126/x"
  input: "training/Adam/ReadVariableOp_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_41"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_209"
  op: "Mul"
  input: "training/Adam/sub_126"
  input: "training/Adam/Square_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_125"
  op: "Add"
  input: "training/Adam/mul_208"
  input: "training/Adam/mul_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_210"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_42/Minimum"
  op: "Minimum"
  input: "training/Adam/add_125"
  input: "training/Adam/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_42"
  op: "Maximum"
  input: "training/Adam/clip_by_value_42/Minimum"
  input: "training/Adam/Const_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_42"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_126"
  op: "Add"
  input: "training/Adam/Sqrt_42"
  input: "training/Adam/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_42"
  op: "RealDiv"
  input: "training/Adam/mul_210"
  input: "training/Adam/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_334"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_127"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_334"
  input: "training/Adam/truediv_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "training/Adam/m_41_1"
  input: "training/Adam/add_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_335"
  op: "ReadVariableOp"
  input: "training/Adam/m_41_1"
  input: "^training/Adam/AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "training/Adam/v_41_1"
  input: "training/Adam/add_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_336"
  op: "ReadVariableOp"
  input: "training/Adam/v_41_1"
  input: "^training/Adam/AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "conv_dw_7_bn/beta"
  input: "training/Adam/sub_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_337"
  op: "ReadVariableOp"
  input: "conv_dw_7_bn/beta"
  input: "^training/Adam/AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_338"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_211/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_42_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_211"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_338"
  input: "training/Adam/mul_211/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_339"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_128/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_128"
  op: "Sub"
  input: "training/Adam/sub_128/x"
  input: "training/Adam/ReadVariableOp_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_212"
  op: "Mul"
  input: "training/Adam/sub_128"
  input: "training/Adam/gradients/conv_pw_7/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_127"
  op: "Add"
  input: "training/Adam/mul_211"
  input: "training/Adam/mul_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_340"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_213/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_42_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_213"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_340"
  input: "training/Adam/mul_213/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_341"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_129/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_129"
  op: "Sub"
  input: "training/Adam/sub_129/x"
  input: "training/Adam/ReadVariableOp_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_42"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_7/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_214"
  op: "Mul"
  input: "training/Adam/sub_129"
  input: "training/Adam/Square_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_128"
  op: "Add"
  input: "training/Adam/mul_213"
  input: "training/Adam/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_215"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_88"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_43/Minimum"
  op: "Minimum"
  input: "training/Adam/add_128"
  input: "training/Adam/Const_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_43"
  op: "Maximum"
  input: "training/Adam/clip_by_value_43/Minimum"
  input: "training/Adam/Const_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_43"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_129/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_129"
  op: "Add"
  input: "training/Adam/Sqrt_43"
  input: "training/Adam/add_129/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_43"
  op: "RealDiv"
  input: "training/Adam/mul_215"
  input: "training/Adam/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_342"
  op: "ReadVariableOp"
  input: "conv_pw_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_130"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_342"
  input: "training/Adam/truediv_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "training/Adam/m_42_1"
  input: "training/Adam/add_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_343"
  op: "ReadVariableOp"
  input: "training/Adam/m_42_1"
  input: "^training/Adam/AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "training/Adam/v_42_1"
  input: "training/Adam/add_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_344"
  op: "ReadVariableOp"
  input: "training/Adam/v_42_1"
  input: "^training/Adam/AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "conv_pw_7/kernel"
  input: "training/Adam/sub_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_345"
  op: "ReadVariableOp"
  input: "conv_pw_7/kernel"
  input: "^training/Adam/AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_346"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_216/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_43_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_216"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_346"
  input: "training/Adam/mul_216/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_347"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_131/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_131"
  op: "Sub"
  input: "training/Adam/sub_131/x"
  input: "training/Adam/ReadVariableOp_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_217"
  op: "Mul"
  input: "training/Adam/sub_131"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_130"
  op: "Add"
  input: "training/Adam/mul_216"
  input: "training/Adam/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_348"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_218/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_43_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_218"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_348"
  input: "training/Adam/mul_218/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_349"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_132/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_132"
  op: "Sub"
  input: "training/Adam/sub_132/x"
  input: "training/Adam/ReadVariableOp_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_43"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_219"
  op: "Mul"
  input: "training/Adam/sub_132"
  input: "training/Adam/Square_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_131"
  op: "Add"
  input: "training/Adam/mul_218"
  input: "training/Adam/mul_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_220"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_44/Minimum"
  op: "Minimum"
  input: "training/Adam/add_131"
  input: "training/Adam/Const_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_44"
  op: "Maximum"
  input: "training/Adam/clip_by_value_44/Minimum"
  input: "training/Adam/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_44"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_132"
  op: "Add"
  input: "training/Adam/Sqrt_44"
  input: "training/Adam/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_44"
  op: "RealDiv"
  input: "training/Adam/mul_220"
  input: "training/Adam/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_350"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_133"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_350"
  input: "training/Adam/truediv_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "training/Adam/m_43_1"
  input: "training/Adam/add_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_351"
  op: "ReadVariableOp"
  input: "training/Adam/m_43_1"
  input: "^training/Adam/AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "training/Adam/v_43_1"
  input: "training/Adam/add_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_352"
  op: "ReadVariableOp"
  input: "training/Adam/v_43_1"
  input: "^training/Adam/AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/gamma"
  input: "training/Adam/sub_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_353"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/gamma"
  input: "^training/Adam/AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_354"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_221/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_44_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_221"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_354"
  input: "training/Adam/mul_221/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_355"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_134/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_134"
  op: "Sub"
  input: "training/Adam/sub_134/x"
  input: "training/Adam/ReadVariableOp_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_222"
  op: "Mul"
  input: "training/Adam/sub_134"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_133"
  op: "Add"
  input: "training/Adam/mul_221"
  input: "training/Adam/mul_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_356"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_223/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_44_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_223"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_356"
  input: "training/Adam/mul_223/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_357"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_135/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_135"
  op: "Sub"
  input: "training/Adam/sub_135/x"
  input: "training/Adam/ReadVariableOp_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_44"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_7_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_224"
  op: "Mul"
  input: "training/Adam/sub_135"
  input: "training/Adam/Square_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_134"
  op: "Add"
  input: "training/Adam/mul_223"
  input: "training/Adam/mul_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_225"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_45/Minimum"
  op: "Minimum"
  input: "training/Adam/add_134"
  input: "training/Adam/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_45"
  op: "Maximum"
  input: "training/Adam/clip_by_value_45/Minimum"
  input: "training/Adam/Const_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_45"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_135/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_135"
  op: "Add"
  input: "training/Adam/Sqrt_45"
  input: "training/Adam/add_135/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_45"
  op: "RealDiv"
  input: "training/Adam/mul_225"
  input: "training/Adam/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_358"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_136"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_358"
  input: "training/Adam/truediv_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "training/Adam/m_44_1"
  input: "training/Adam/add_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_359"
  op: "ReadVariableOp"
  input: "training/Adam/m_44_1"
  input: "^training/Adam/AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "training/Adam/v_44_1"
  input: "training/Adam/add_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_360"
  op: "ReadVariableOp"
  input: "training/Adam/v_44_1"
  input: "^training/Adam/AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "conv_pw_7_bn/beta"
  input: "training/Adam/sub_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_361"
  op: "ReadVariableOp"
  input: "conv_pw_7_bn/beta"
  input: "^training/Adam/AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_362"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_226/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_45_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_226"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_362"
  input: "training/Adam/mul_226/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_363"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_137/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_137"
  op: "Sub"
  input: "training/Adam/sub_137/x"
  input: "training/Adam/ReadVariableOp_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_227"
  op: "Mul"
  input: "training/Adam/sub_137"
  input: "training/Adam/gradients/conv_dw_8/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_136"
  op: "Add"
  input: "training/Adam/mul_226"
  input: "training/Adam/mul_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_364"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_228/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_45_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_228"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_364"
  input: "training/Adam/mul_228/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_365"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_138/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_138"
  op: "Sub"
  input: "training/Adam/sub_138/x"
  input: "training/Adam/ReadVariableOp_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_45"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_8/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_229"
  op: "Mul"
  input: "training/Adam/sub_138"
  input: "training/Adam/Square_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_137"
  op: "Add"
  input: "training/Adam/mul_228"
  input: "training/Adam/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_230"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_94"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_46/Minimum"
  op: "Minimum"
  input: "training/Adam/add_137"
  input: "training/Adam/Const_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_46"
  op: "Maximum"
  input: "training/Adam/clip_by_value_46/Minimum"
  input: "training/Adam/Const_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_46"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_138"
  op: "Add"
  input: "training/Adam/Sqrt_46"
  input: "training/Adam/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_46"
  op: "RealDiv"
  input: "training/Adam/mul_230"
  input: "training/Adam/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_366"
  op: "ReadVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_139"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_366"
  input: "training/Adam/truediv_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "training/Adam/m_45_1"
  input: "training/Adam/add_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_367"
  op: "ReadVariableOp"
  input: "training/Adam/m_45_1"
  input: "^training/Adam/AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "training/Adam/v_45_1"
  input: "training/Adam/add_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_368"
  op: "ReadVariableOp"
  input: "training/Adam/v_45_1"
  input: "^training/Adam/AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  input: "training/Adam/sub_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_369"
  op: "ReadVariableOp"
  input: "conv_dw_8/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_370"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_231/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_46_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_231"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_370"
  input: "training/Adam/mul_231/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_371"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_140/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_140"
  op: "Sub"
  input: "training/Adam/sub_140/x"
  input: "training/Adam/ReadVariableOp_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_232"
  op: "Mul"
  input: "training/Adam/sub_140"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_139"
  op: "Add"
  input: "training/Adam/mul_231"
  input: "training/Adam/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_372"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_233/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_46_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_233"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_372"
  input: "training/Adam/mul_233/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_373"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_141/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_141"
  op: "Sub"
  input: "training/Adam/sub_141/x"
  input: "training/Adam/ReadVariableOp_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_46"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_234"
  op: "Mul"
  input: "training/Adam/sub_141"
  input: "training/Adam/Square_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_140"
  op: "Add"
  input: "training/Adam/mul_233"
  input: "training/Adam/mul_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_235"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_47/Minimum"
  op: "Minimum"
  input: "training/Adam/add_140"
  input: "training/Adam/Const_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_47"
  op: "Maximum"
  input: "training/Adam/clip_by_value_47/Minimum"
  input: "training/Adam/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_47"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_141/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_141"
  op: "Add"
  input: "training/Adam/Sqrt_47"
  input: "training/Adam/add_141/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_47"
  op: "RealDiv"
  input: "training/Adam/mul_235"
  input: "training/Adam/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_374"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_142"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_374"
  input: "training/Adam/truediv_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "training/Adam/m_46_1"
  input: "training/Adam/add_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_375"
  op: "ReadVariableOp"
  input: "training/Adam/m_46_1"
  input: "^training/Adam/AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "training/Adam/v_46_1"
  input: "training/Adam/add_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_376"
  op: "ReadVariableOp"
  input: "training/Adam/v_46_1"
  input: "^training/Adam/AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/gamma"
  input: "training/Adam/sub_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_377"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/gamma"
  input: "^training/Adam/AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_378"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_236/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_47_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_236"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_378"
  input: "training/Adam/mul_236/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_379"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_143/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_143"
  op: "Sub"
  input: "training/Adam/sub_143/x"
  input: "training/Adam/ReadVariableOp_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_237"
  op: "Mul"
  input: "training/Adam/sub_143"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_142"
  op: "Add"
  input: "training/Adam/mul_236"
  input: "training/Adam/mul_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_380"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_238/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_47_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_238"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_380"
  input: "training/Adam/mul_238/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_381"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_144/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_144"
  op: "Sub"
  input: "training/Adam/sub_144/x"
  input: "training/Adam/ReadVariableOp_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_47"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_239"
  op: "Mul"
  input: "training/Adam/sub_144"
  input: "training/Adam/Square_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_143"
  op: "Add"
  input: "training/Adam/mul_238"
  input: "training/Adam/mul_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_240"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_48/Minimum"
  op: "Minimum"
  input: "training/Adam/add_143"
  input: "training/Adam/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_48"
  op: "Maximum"
  input: "training/Adam/clip_by_value_48/Minimum"
  input: "training/Adam/Const_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_48"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_144"
  op: "Add"
  input: "training/Adam/Sqrt_48"
  input: "training/Adam/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_48"
  op: "RealDiv"
  input: "training/Adam/mul_240"
  input: "training/Adam/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_382"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_145"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_382"
  input: "training/Adam/truediv_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "training/Adam/m_47_1"
  input: "training/Adam/add_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_383"
  op: "ReadVariableOp"
  input: "training/Adam/m_47_1"
  input: "^training/Adam/AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training/Adam/v_47_1"
  input: "training/Adam/add_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_384"
  op: "ReadVariableOp"
  input: "training/Adam/v_47_1"
  input: "^training/Adam/AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "conv_dw_8_bn/beta"
  input: "training/Adam/sub_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_385"
  op: "ReadVariableOp"
  input: "conv_dw_8_bn/beta"
  input: "^training/Adam/AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_386"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_241/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_48_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_241"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_386"
  input: "training/Adam/mul_241/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_387"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_146/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_146"
  op: "Sub"
  input: "training/Adam/sub_146/x"
  input: "training/Adam/ReadVariableOp_387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_242"
  op: "Mul"
  input: "training/Adam/sub_146"
  input: "training/Adam/gradients/conv_pw_8/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_145"
  op: "Add"
  input: "training/Adam/mul_241"
  input: "training/Adam/mul_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_388"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_243/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_48_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_243"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_388"
  input: "training/Adam/mul_243/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_389"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_147/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_147"
  op: "Sub"
  input: "training/Adam/sub_147/x"
  input: "training/Adam/ReadVariableOp_389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_48"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_8/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_244"
  op: "Mul"
  input: "training/Adam/sub_147"
  input: "training/Adam/Square_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_146"
  op: "Add"
  input: "training/Adam/mul_243"
  input: "training/Adam/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_245"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_49/Minimum"
  op: "Minimum"
  input: "training/Adam/add_146"
  input: "training/Adam/Const_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_49"
  op: "Maximum"
  input: "training/Adam/clip_by_value_49/Minimum"
  input: "training/Adam/Const_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_49"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_147/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_147"
  op: "Add"
  input: "training/Adam/Sqrt_49"
  input: "training/Adam/add_147/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_49"
  op: "RealDiv"
  input: "training/Adam/mul_245"
  input: "training/Adam/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_390"
  op: "ReadVariableOp"
  input: "conv_pw_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_148"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_390"
  input: "training/Adam/truediv_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training/Adam/m_48_1"
  input: "training/Adam/add_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_391"
  op: "ReadVariableOp"
  input: "training/Adam/m_48_1"
  input: "^training/Adam/AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training/Adam/v_48_1"
  input: "training/Adam/add_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_392"
  op: "ReadVariableOp"
  input: "training/Adam/v_48_1"
  input: "^training/Adam/AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "conv_pw_8/kernel"
  input: "training/Adam/sub_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_393"
  op: "ReadVariableOp"
  input: "conv_pw_8/kernel"
  input: "^training/Adam/AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_394"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_246/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_49_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_246"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_394"
  input: "training/Adam/mul_246/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_395"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_149/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_149"
  op: "Sub"
  input: "training/Adam/sub_149/x"
  input: "training/Adam/ReadVariableOp_395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_247"
  op: "Mul"
  input: "training/Adam/sub_149"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_148"
  op: "Add"
  input: "training/Adam/mul_246"
  input: "training/Adam/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_396"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_248/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_49_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_248"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_396"
  input: "training/Adam/mul_248/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_397"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_150/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_150"
  op: "Sub"
  input: "training/Adam/sub_150/x"
  input: "training/Adam/ReadVariableOp_397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_49"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_249"
  op: "Mul"
  input: "training/Adam/sub_150"
  input: "training/Adam/Square_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_149"
  op: "Add"
  input: "training/Adam/mul_248"
  input: "training/Adam/mul_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_250"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_50/Minimum"
  op: "Minimum"
  input: "training/Adam/add_149"
  input: "training/Adam/Const_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_50"
  op: "Maximum"
  input: "training/Adam/clip_by_value_50/Minimum"
  input: "training/Adam/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_50"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_150"
  op: "Add"
  input: "training/Adam/Sqrt_50"
  input: "training/Adam/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_50"
  op: "RealDiv"
  input: "training/Adam/mul_250"
  input: "training/Adam/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_398"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_151"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_398"
  input: "training/Adam/truediv_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training/Adam/m_49_1"
  input: "training/Adam/add_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_399"
  op: "ReadVariableOp"
  input: "training/Adam/m_49_1"
  input: "^training/Adam/AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training/Adam/v_49_1"
  input: "training/Adam/add_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_400"
  op: "ReadVariableOp"
  input: "training/Adam/v_49_1"
  input: "^training/Adam/AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/gamma"
  input: "training/Adam/sub_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_401"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/gamma"
  input: "^training/Adam/AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_402"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_251/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_50_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_251"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_402"
  input: "training/Adam/mul_251/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_403"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_152/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_152"
  op: "Sub"
  input: "training/Adam/sub_152/x"
  input: "training/Adam/ReadVariableOp_403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_252"
  op: "Mul"
  input: "training/Adam/sub_152"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_151"
  op: "Add"
  input: "training/Adam/mul_251"
  input: "training/Adam/mul_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_404"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_253/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_50_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_253"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_404"
  input: "training/Adam/mul_253/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_405"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_153/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_153"
  op: "Sub"
  input: "training/Adam/sub_153/x"
  input: "training/Adam/ReadVariableOp_405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_50"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_8_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_254"
  op: "Mul"
  input: "training/Adam/sub_153"
  input: "training/Adam/Square_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_152"
  op: "Add"
  input: "training/Adam/mul_253"
  input: "training/Adam/mul_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_255"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_51/Minimum"
  op: "Minimum"
  input: "training/Adam/add_152"
  input: "training/Adam/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_51"
  op: "Maximum"
  input: "training/Adam/clip_by_value_51/Minimum"
  input: "training/Adam/Const_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_51"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_153/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_153"
  op: "Add"
  input: "training/Adam/Sqrt_51"
  input: "training/Adam/add_153/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_51"
  op: "RealDiv"
  input: "training/Adam/mul_255"
  input: "training/Adam/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_406"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_154"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_406"
  input: "training/Adam/truediv_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "training/Adam/m_50_1"
  input: "training/Adam/add_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_407"
  op: "ReadVariableOp"
  input: "training/Adam/m_50_1"
  input: "^training/Adam/AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "training/Adam/v_50_1"
  input: "training/Adam/add_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_408"
  op: "ReadVariableOp"
  input: "training/Adam/v_50_1"
  input: "^training/Adam/AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "conv_pw_8_bn/beta"
  input: "training/Adam/sub_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_409"
  op: "ReadVariableOp"
  input: "conv_pw_8_bn/beta"
  input: "^training/Adam/AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_410"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_256/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_51_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_256"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_410"
  input: "training/Adam/mul_256/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_411"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_155/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_155"
  op: "Sub"
  input: "training/Adam/sub_155/x"
  input: "training/Adam/ReadVariableOp_411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_257"
  op: "Mul"
  input: "training/Adam/sub_155"
  input: "training/Adam/gradients/conv_dw_9/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_154"
  op: "Add"
  input: "training/Adam/mul_256"
  input: "training/Adam/mul_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_412"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_258/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_51_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_258"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_412"
  input: "training/Adam/mul_258/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_413"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_156/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_156"
  op: "Sub"
  input: "training/Adam/sub_156/x"
  input: "training/Adam/ReadVariableOp_413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_51"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_9/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_259"
  op: "Mul"
  input: "training/Adam/sub_156"
  input: "training/Adam/Square_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_155"
  op: "Add"
  input: "training/Adam/mul_258"
  input: "training/Adam/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_260"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_52/Minimum"
  op: "Minimum"
  input: "training/Adam/add_155"
  input: "training/Adam/Const_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_52"
  op: "Maximum"
  input: "training/Adam/clip_by_value_52/Minimum"
  input: "training/Adam/Const_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_52"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_156"
  op: "Add"
  input: "training/Adam/Sqrt_52"
  input: "training/Adam/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_52"
  op: "RealDiv"
  input: "training/Adam/mul_260"
  input: "training/Adam/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_414"
  op: "ReadVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_157"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_414"
  input: "training/Adam/truediv_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "training/Adam/m_51_1"
  input: "training/Adam/add_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_415"
  op: "ReadVariableOp"
  input: "training/Adam/m_51_1"
  input: "^training/Adam/AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "training/Adam/v_51_1"
  input: "training/Adam/add_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_416"
  op: "ReadVariableOp"
  input: "training/Adam/v_51_1"
  input: "^training/Adam/AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  input: "training/Adam/sub_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_417"
  op: "ReadVariableOp"
  input: "conv_dw_9/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_418"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_261/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_52_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_261"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_418"
  input: "training/Adam/mul_261/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_419"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_158/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_158"
  op: "Sub"
  input: "training/Adam/sub_158/x"
  input: "training/Adam/ReadVariableOp_419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_262"
  op: "Mul"
  input: "training/Adam/sub_158"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_157"
  op: "Add"
  input: "training/Adam/mul_261"
  input: "training/Adam/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_420"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_263/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_52_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_263"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_420"
  input: "training/Adam/mul_263/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_421"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_159/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_159"
  op: "Sub"
  input: "training/Adam/sub_159/x"
  input: "training/Adam/ReadVariableOp_421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_52"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_264"
  op: "Mul"
  input: "training/Adam/sub_159"
  input: "training/Adam/Square_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_158"
  op: "Add"
  input: "training/Adam/mul_263"
  input: "training/Adam/mul_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_265"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_53/Minimum"
  op: "Minimum"
  input: "training/Adam/add_158"
  input: "training/Adam/Const_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_53"
  op: "Maximum"
  input: "training/Adam/clip_by_value_53/Minimum"
  input: "training/Adam/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_53"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_159/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_159"
  op: "Add"
  input: "training/Adam/Sqrt_53"
  input: "training/Adam/add_159/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_53"
  op: "RealDiv"
  input: "training/Adam/mul_265"
  input: "training/Adam/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_422"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_160"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_422"
  input: "training/Adam/truediv_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "training/Adam/m_52_1"
  input: "training/Adam/add_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_423"
  op: "ReadVariableOp"
  input: "training/Adam/m_52_1"
  input: "^training/Adam/AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "training/Adam/v_52_1"
  input: "training/Adam/add_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_424"
  op: "ReadVariableOp"
  input: "training/Adam/v_52_1"
  input: "^training/Adam/AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/gamma"
  input: "training/Adam/sub_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_425"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/gamma"
  input: "^training/Adam/AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_426"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_266/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_53_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_266"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_426"
  input: "training/Adam/mul_266/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_427"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_161/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_161"
  op: "Sub"
  input: "training/Adam/sub_161/x"
  input: "training/Adam/ReadVariableOp_427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_267"
  op: "Mul"
  input: "training/Adam/sub_161"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_160"
  op: "Add"
  input: "training/Adam/mul_266"
  input: "training/Adam/mul_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_428"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_268/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_53_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_268"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_428"
  input: "training/Adam/mul_268/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_429"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_162/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_162"
  op: "Sub"
  input: "training/Adam/sub_162/x"
  input: "training/Adam/ReadVariableOp_429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_53"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_269"
  op: "Mul"
  input: "training/Adam/sub_162"
  input: "training/Adam/Square_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_161"
  op: "Add"
  input: "training/Adam/mul_268"
  input: "training/Adam/mul_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_270"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_109"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_54/Minimum"
  op: "Minimum"
  input: "training/Adam/add_161"
  input: "training/Adam/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_54"
  op: "Maximum"
  input: "training/Adam/clip_by_value_54/Minimum"
  input: "training/Adam/Const_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_54"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_162"
  op: "Add"
  input: "training/Adam/Sqrt_54"
  input: "training/Adam/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_54"
  op: "RealDiv"
  input: "training/Adam/mul_270"
  input: "training/Adam/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_430"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_163"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_430"
  input: "training/Adam/truediv_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "training/Adam/m_53_1"
  input: "training/Adam/add_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_431"
  op: "ReadVariableOp"
  input: "training/Adam/m_53_1"
  input: "^training/Adam/AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "training/Adam/v_53_1"
  input: "training/Adam/add_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_432"
  op: "ReadVariableOp"
  input: "training/Adam/v_53_1"
  input: "^training/Adam/AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "conv_dw_9_bn/beta"
  input: "training/Adam/sub_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_433"
  op: "ReadVariableOp"
  input: "conv_dw_9_bn/beta"
  input: "^training/Adam/AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_434"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_271/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_54_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_271"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_434"
  input: "training/Adam/mul_271/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_435"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_164/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_164"
  op: "Sub"
  input: "training/Adam/sub_164/x"
  input: "training/Adam/ReadVariableOp_435"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_272"
  op: "Mul"
  input: "training/Adam/sub_164"
  input: "training/Adam/gradients/conv_pw_9/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_163"
  op: "Add"
  input: "training/Adam/mul_271"
  input: "training/Adam/mul_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_436"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_273/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_54_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_273"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_436"
  input: "training/Adam/mul_273/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_437"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_165/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_165"
  op: "Sub"
  input: "training/Adam/sub_165/x"
  input: "training/Adam/ReadVariableOp_437"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_54"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_9/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_274"
  op: "Mul"
  input: "training/Adam/sub_165"
  input: "training/Adam/Square_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_164"
  op: "Add"
  input: "training/Adam/mul_273"
  input: "training/Adam/mul_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_275"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_111"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_112"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_55/Minimum"
  op: "Minimum"
  input: "training/Adam/add_164"
  input: "training/Adam/Const_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_55"
  op: "Maximum"
  input: "training/Adam/clip_by_value_55/Minimum"
  input: "training/Adam/Const_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_55"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_165/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_165"
  op: "Add"
  input: "training/Adam/Sqrt_55"
  input: "training/Adam/add_165/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_55"
  op: "RealDiv"
  input: "training/Adam/mul_275"
  input: "training/Adam/add_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_438"
  op: "ReadVariableOp"
  input: "conv_pw_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_166"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_438"
  input: "training/Adam/truediv_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "training/Adam/m_54_1"
  input: "training/Adam/add_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_439"
  op: "ReadVariableOp"
  input: "training/Adam/m_54_1"
  input: "^training/Adam/AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "training/Adam/v_54_1"
  input: "training/Adam/add_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_440"
  op: "ReadVariableOp"
  input: "training/Adam/v_54_1"
  input: "^training/Adam/AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "conv_pw_9/kernel"
  input: "training/Adam/sub_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_441"
  op: "ReadVariableOp"
  input: "conv_pw_9/kernel"
  input: "^training/Adam/AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_442"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_276/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_55_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_276"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_442"
  input: "training/Adam/mul_276/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_443"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_167/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_167"
  op: "Sub"
  input: "training/Adam/sub_167/x"
  input: "training/Adam/ReadVariableOp_443"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_277"
  op: "Mul"
  input: "training/Adam/sub_167"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_166"
  op: "Add"
  input: "training/Adam/mul_276"
  input: "training/Adam/mul_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_444"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_278/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_55_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_278"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_444"
  input: "training/Adam/mul_278/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_445"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_168/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_168"
  op: "Sub"
  input: "training/Adam/sub_168/x"
  input: "training/Adam/ReadVariableOp_445"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_55"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_279"
  op: "Mul"
  input: "training/Adam/sub_168"
  input: "training/Adam/Square_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_167"
  op: "Add"
  input: "training/Adam/mul_278"
  input: "training/Adam/mul_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_280"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_113"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_114"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_56/Minimum"
  op: "Minimum"
  input: "training/Adam/add_167"
  input: "training/Adam/Const_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_56"
  op: "Maximum"
  input: "training/Adam/clip_by_value_56/Minimum"
  input: "training/Adam/Const_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_56"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_168/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_168"
  op: "Add"
  input: "training/Adam/Sqrt_56"
  input: "training/Adam/add_168/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_56"
  op: "RealDiv"
  input: "training/Adam/mul_280"
  input: "training/Adam/add_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_446"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_169"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_446"
  input: "training/Adam/truediv_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "training/Adam/m_55_1"
  input: "training/Adam/add_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_447"
  op: "ReadVariableOp"
  input: "training/Adam/m_55_1"
  input: "^training/Adam/AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "training/Adam/v_55_1"
  input: "training/Adam/add_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_448"
  op: "ReadVariableOp"
  input: "training/Adam/v_55_1"
  input: "^training/Adam/AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/gamma"
  input: "training/Adam/sub_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_449"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/gamma"
  input: "^training/Adam/AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_450"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_281/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_56_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_281"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_450"
  input: "training/Adam/mul_281/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_451"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_170/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_170"
  op: "Sub"
  input: "training/Adam/sub_170/x"
  input: "training/Adam/ReadVariableOp_451"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_282"
  op: "Mul"
  input: "training/Adam/sub_170"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_169"
  op: "Add"
  input: "training/Adam/mul_281"
  input: "training/Adam/mul_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_452"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_283/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_56_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_283"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_452"
  input: "training/Adam/mul_283/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_453"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_171/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_171"
  op: "Sub"
  input: "training/Adam/sub_171/x"
  input: "training/Adam/ReadVariableOp_453"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_56"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_9_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_284"
  op: "Mul"
  input: "training/Adam/sub_171"
  input: "training/Adam/Square_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_170"
  op: "Add"
  input: "training/Adam/mul_283"
  input: "training/Adam/mul_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_285"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_115"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_116"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_57/Minimum"
  op: "Minimum"
  input: "training/Adam/add_170"
  input: "training/Adam/Const_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_57"
  op: "Maximum"
  input: "training/Adam/clip_by_value_57/Minimum"
  input: "training/Adam/Const_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_57"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_171/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_171"
  op: "Add"
  input: "training/Adam/Sqrt_57"
  input: "training/Adam/add_171/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_57"
  op: "RealDiv"
  input: "training/Adam/mul_285"
  input: "training/Adam/add_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_454"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_172"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_454"
  input: "training/Adam/truediv_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "training/Adam/m_56_1"
  input: "training/Adam/add_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_455"
  op: "ReadVariableOp"
  input: "training/Adam/m_56_1"
  input: "^training/Adam/AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "training/Adam/v_56_1"
  input: "training/Adam/add_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_456"
  op: "ReadVariableOp"
  input: "training/Adam/v_56_1"
  input: "^training/Adam/AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "conv_pw_9_bn/beta"
  input: "training/Adam/sub_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_457"
  op: "ReadVariableOp"
  input: "conv_pw_9_bn/beta"
  input: "^training/Adam/AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_458"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_286/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_57_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_286"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_458"
  input: "training/Adam/mul_286/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_459"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_173/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_173"
  op: "Sub"
  input: "training/Adam/sub_173/x"
  input: "training/Adam/ReadVariableOp_459"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_287"
  op: "Mul"
  input: "training/Adam/sub_173"
  input: "training/Adam/gradients/conv_dw_10/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_172"
  op: "Add"
  input: "training/Adam/mul_286"
  input: "training/Adam/mul_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_460"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_288/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_57_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_288"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_460"
  input: "training/Adam/mul_288/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_461"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_174/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_174"
  op: "Sub"
  input: "training/Adam/sub_174/x"
  input: "training/Adam/ReadVariableOp_461"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_57"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_10/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_289"
  op: "Mul"
  input: "training/Adam/sub_174"
  input: "training/Adam/Square_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_173"
  op: "Add"
  input: "training/Adam/mul_288"
  input: "training/Adam/mul_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_290"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_117"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_118"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_58/Minimum"
  op: "Minimum"
  input: "training/Adam/add_173"
  input: "training/Adam/Const_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_58"
  op: "Maximum"
  input: "training/Adam/clip_by_value_58/Minimum"
  input: "training/Adam/Const_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_58"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_174/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_174"
  op: "Add"
  input: "training/Adam/Sqrt_58"
  input: "training/Adam/add_174/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_58"
  op: "RealDiv"
  input: "training/Adam/mul_290"
  input: "training/Adam/add_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_462"
  op: "ReadVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_175"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_462"
  input: "training/Adam/truediv_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "training/Adam/m_57_1"
  input: "training/Adam/add_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_463"
  op: "ReadVariableOp"
  input: "training/Adam/m_57_1"
  input: "^training/Adam/AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "training/Adam/v_57_1"
  input: "training/Adam/add_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_464"
  op: "ReadVariableOp"
  input: "training/Adam/v_57_1"
  input: "^training/Adam/AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  input: "training/Adam/sub_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_465"
  op: "ReadVariableOp"
  input: "conv_dw_10/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_466"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_291/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_58_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_291"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_466"
  input: "training/Adam/mul_291/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_467"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_176/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_176"
  op: "Sub"
  input: "training/Adam/sub_176/x"
  input: "training/Adam/ReadVariableOp_467"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_292"
  op: "Mul"
  input: "training/Adam/sub_176"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_175"
  op: "Add"
  input: "training/Adam/mul_291"
  input: "training/Adam/mul_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_468"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_293/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_58_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_293"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_468"
  input: "training/Adam/mul_293/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_469"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_177/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_177"
  op: "Sub"
  input: "training/Adam/sub_177/x"
  input: "training/Adam/ReadVariableOp_469"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_58"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_294"
  op: "Mul"
  input: "training/Adam/sub_177"
  input: "training/Adam/Square_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_176"
  op: "Add"
  input: "training/Adam/mul_293"
  input: "training/Adam/mul_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_295"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_119"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_120"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_59/Minimum"
  op: "Minimum"
  input: "training/Adam/add_176"
  input: "training/Adam/Const_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_59"
  op: "Maximum"
  input: "training/Adam/clip_by_value_59/Minimum"
  input: "training/Adam/Const_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_59"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_177/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_177"
  op: "Add"
  input: "training/Adam/Sqrt_59"
  input: "training/Adam/add_177/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_59"
  op: "RealDiv"
  input: "training/Adam/mul_295"
  input: "training/Adam/add_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_470"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_178"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_470"
  input: "training/Adam/truediv_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "training/Adam/m_58_1"
  input: "training/Adam/add_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_471"
  op: "ReadVariableOp"
  input: "training/Adam/m_58_1"
  input: "^training/Adam/AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "training/Adam/v_58_1"
  input: "training/Adam/add_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_472"
  op: "ReadVariableOp"
  input: "training/Adam/v_58_1"
  input: "^training/Adam/AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/gamma"
  input: "training/Adam/sub_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_473"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/gamma"
  input: "^training/Adam/AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_474"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_296/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_59_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_296"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_474"
  input: "training/Adam/mul_296/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_475"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_179/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_179"
  op: "Sub"
  input: "training/Adam/sub_179/x"
  input: "training/Adam/ReadVariableOp_475"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_297"
  op: "Mul"
  input: "training/Adam/sub_179"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_178"
  op: "Add"
  input: "training/Adam/mul_296"
  input: "training/Adam/mul_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_476"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_298/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_59_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_298"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_476"
  input: "training/Adam/mul_298/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_477"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_180/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_180"
  op: "Sub"
  input: "training/Adam/sub_180/x"
  input: "training/Adam/ReadVariableOp_477"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_59"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_299"
  op: "Mul"
  input: "training/Adam/sub_180"
  input: "training/Adam/Square_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_179"
  op: "Add"
  input: "training/Adam/mul_298"
  input: "training/Adam/mul_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_300"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_121"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_122"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_60/Minimum"
  op: "Minimum"
  input: "training/Adam/add_179"
  input: "training/Adam/Const_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_60"
  op: "Maximum"
  input: "training/Adam/clip_by_value_60/Minimum"
  input: "training/Adam/Const_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_60"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_180/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_180"
  op: "Add"
  input: "training/Adam/Sqrt_60"
  input: "training/Adam/add_180/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_60"
  op: "RealDiv"
  input: "training/Adam/mul_300"
  input: "training/Adam/add_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_478"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_181"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_478"
  input: "training/Adam/truediv_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "training/Adam/m_59_1"
  input: "training/Adam/add_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_479"
  op: "ReadVariableOp"
  input: "training/Adam/m_59_1"
  input: "^training/Adam/AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "training/Adam/v_59_1"
  input: "training/Adam/add_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_480"
  op: "ReadVariableOp"
  input: "training/Adam/v_59_1"
  input: "^training/Adam/AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "conv_dw_10_bn/beta"
  input: "training/Adam/sub_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_481"
  op: "ReadVariableOp"
  input: "conv_dw_10_bn/beta"
  input: "^training/Adam/AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_482"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_301/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_60_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_301"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_482"
  input: "training/Adam/mul_301/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_483"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_182/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_182"
  op: "Sub"
  input: "training/Adam/sub_182/x"
  input: "training/Adam/ReadVariableOp_483"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_302"
  op: "Mul"
  input: "training/Adam/sub_182"
  input: "training/Adam/gradients/conv_pw_10/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_181"
  op: "Add"
  input: "training/Adam/mul_301"
  input: "training/Adam/mul_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_484"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_303/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_60_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_303"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_484"
  input: "training/Adam/mul_303/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_485"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_183/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_183"
  op: "Sub"
  input: "training/Adam/sub_183/x"
  input: "training/Adam/ReadVariableOp_485"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_60"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_10/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_304"
  op: "Mul"
  input: "training/Adam/sub_183"
  input: "training/Adam/Square_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_182"
  op: "Add"
  input: "training/Adam/mul_303"
  input: "training/Adam/mul_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_305"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_123"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_124"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_61/Minimum"
  op: "Minimum"
  input: "training/Adam/add_182"
  input: "training/Adam/Const_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_61"
  op: "Maximum"
  input: "training/Adam/clip_by_value_61/Minimum"
  input: "training/Adam/Const_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_61"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_183/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_183"
  op: "Add"
  input: "training/Adam/Sqrt_61"
  input: "training/Adam/add_183/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_61"
  op: "RealDiv"
  input: "training/Adam/mul_305"
  input: "training/Adam/add_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_486"
  op: "ReadVariableOp"
  input: "conv_pw_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_184"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_486"
  input: "training/Adam/truediv_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "training/Adam/m_60_1"
  input: "training/Adam/add_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_487"
  op: "ReadVariableOp"
  input: "training/Adam/m_60_1"
  input: "^training/Adam/AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "training/Adam/v_60_1"
  input: "training/Adam/add_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_488"
  op: "ReadVariableOp"
  input: "training/Adam/v_60_1"
  input: "^training/Adam/AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "conv_pw_10/kernel"
  input: "training/Adam/sub_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_489"
  op: "ReadVariableOp"
  input: "conv_pw_10/kernel"
  input: "^training/Adam/AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_490"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_306/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_61_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_306"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_490"
  input: "training/Adam/mul_306/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_491"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_185/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_185"
  op: "Sub"
  input: "training/Adam/sub_185/x"
  input: "training/Adam/ReadVariableOp_491"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_307"
  op: "Mul"
  input: "training/Adam/sub_185"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_184"
  op: "Add"
  input: "training/Adam/mul_306"
  input: "training/Adam/mul_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_492"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_308/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_61_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_308"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_492"
  input: "training/Adam/mul_308/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_493"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_186/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_186"
  op: "Sub"
  input: "training/Adam/sub_186/x"
  input: "training/Adam/ReadVariableOp_493"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_61"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_309"
  op: "Mul"
  input: "training/Adam/sub_186"
  input: "training/Adam/Square_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_185"
  op: "Add"
  input: "training/Adam/mul_308"
  input: "training/Adam/mul_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_310"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_125"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_126"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_62/Minimum"
  op: "Minimum"
  input: "training/Adam/add_185"
  input: "training/Adam/Const_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_62"
  op: "Maximum"
  input: "training/Adam/clip_by_value_62/Minimum"
  input: "training/Adam/Const_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_62"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_186/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_186"
  op: "Add"
  input: "training/Adam/Sqrt_62"
  input: "training/Adam/add_186/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_62"
  op: "RealDiv"
  input: "training/Adam/mul_310"
  input: "training/Adam/add_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_494"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_187"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_494"
  input: "training/Adam/truediv_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "training/Adam/m_61_1"
  input: "training/Adam/add_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_495"
  op: "ReadVariableOp"
  input: "training/Adam/m_61_1"
  input: "^training/Adam/AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "training/Adam/v_61_1"
  input: "training/Adam/add_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_496"
  op: "ReadVariableOp"
  input: "training/Adam/v_61_1"
  input: "^training/Adam/AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/gamma"
  input: "training/Adam/sub_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_497"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/gamma"
  input: "^training/Adam/AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_498"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_311/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_62_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_311"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_498"
  input: "training/Adam/mul_311/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_499"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_188/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_188"
  op: "Sub"
  input: "training/Adam/sub_188/x"
  input: "training/Adam/ReadVariableOp_499"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_312"
  op: "Mul"
  input: "training/Adam/sub_188"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_187"
  op: "Add"
  input: "training/Adam/mul_311"
  input: "training/Adam/mul_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_500"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_313/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_62_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_313"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_500"
  input: "training/Adam/mul_313/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_501"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_189/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_189"
  op: "Sub"
  input: "training/Adam/sub_189/x"
  input: "training/Adam/ReadVariableOp_501"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_62"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_10_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_314"
  op: "Mul"
  input: "training/Adam/sub_189"
  input: "training/Adam/Square_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_188"
  op: "Add"
  input: "training/Adam/mul_313"
  input: "training/Adam/mul_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_315"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_127"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_128"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_63/Minimum"
  op: "Minimum"
  input: "training/Adam/add_188"
  input: "training/Adam/Const_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_63"
  op: "Maximum"
  input: "training/Adam/clip_by_value_63/Minimum"
  input: "training/Adam/Const_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_63"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_189/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_189"
  op: "Add"
  input: "training/Adam/Sqrt_63"
  input: "training/Adam/add_189/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_63"
  op: "RealDiv"
  input: "training/Adam/mul_315"
  input: "training/Adam/add_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_502"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_190"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_502"
  input: "training/Adam/truediv_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "training/Adam/m_62_1"
  input: "training/Adam/add_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_503"
  op: "ReadVariableOp"
  input: "training/Adam/m_62_1"
  input: "^training/Adam/AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "training/Adam/v_62_1"
  input: "training/Adam/add_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_504"
  op: "ReadVariableOp"
  input: "training/Adam/v_62_1"
  input: "^training/Adam/AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "conv_pw_10_bn/beta"
  input: "training/Adam/sub_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_505"
  op: "ReadVariableOp"
  input: "conv_pw_10_bn/beta"
  input: "^training/Adam/AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_506"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_316/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_63_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_316"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_506"
  input: "training/Adam/mul_316/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_507"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_191/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_191"
  op: "Sub"
  input: "training/Adam/sub_191/x"
  input: "training/Adam/ReadVariableOp_507"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_317"
  op: "Mul"
  input: "training/Adam/sub_191"
  input: "training/Adam/gradients/conv_dw_11/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_190"
  op: "Add"
  input: "training/Adam/mul_316"
  input: "training/Adam/mul_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_508"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_318/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_63_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_318"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_508"
  input: "training/Adam/mul_318/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_509"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_192/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_192"
  op: "Sub"
  input: "training/Adam/sub_192/x"
  input: "training/Adam/ReadVariableOp_509"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_63"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_11/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_319"
  op: "Mul"
  input: "training/Adam/sub_192"
  input: "training/Adam/Square_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_191"
  op: "Add"
  input: "training/Adam/mul_318"
  input: "training/Adam/mul_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_320"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_129"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_130"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_64/Minimum"
  op: "Minimum"
  input: "training/Adam/add_191"
  input: "training/Adam/Const_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_64"
  op: "Maximum"
  input: "training/Adam/clip_by_value_64/Minimum"
  input: "training/Adam/Const_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_64"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_192/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_192"
  op: "Add"
  input: "training/Adam/Sqrt_64"
  input: "training/Adam/add_192/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_64"
  op: "RealDiv"
  input: "training/Adam/mul_320"
  input: "training/Adam/add_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_510"
  op: "ReadVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_193"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_510"
  input: "training/Adam/truediv_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "training/Adam/m_63_1"
  input: "training/Adam/add_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_511"
  op: "ReadVariableOp"
  input: "training/Adam/m_63_1"
  input: "^training/Adam/AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "training/Adam/v_63_1"
  input: "training/Adam/add_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_512"
  op: "ReadVariableOp"
  input: "training/Adam/v_63_1"
  input: "^training/Adam/AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  input: "training/Adam/sub_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_513"
  op: "ReadVariableOp"
  input: "conv_dw_11/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_514"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_321/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_64_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_321"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_514"
  input: "training/Adam/mul_321/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_515"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_194/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_194"
  op: "Sub"
  input: "training/Adam/sub_194/x"
  input: "training/Adam/ReadVariableOp_515"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_322"
  op: "Mul"
  input: "training/Adam/sub_194"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_193"
  op: "Add"
  input: "training/Adam/mul_321"
  input: "training/Adam/mul_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_516"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_323/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_64_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_323"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_516"
  input: "training/Adam/mul_323/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_517"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_195/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_195"
  op: "Sub"
  input: "training/Adam/sub_195/x"
  input: "training/Adam/ReadVariableOp_517"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_64"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_324"
  op: "Mul"
  input: "training/Adam/sub_195"
  input: "training/Adam/Square_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_194"
  op: "Add"
  input: "training/Adam/mul_323"
  input: "training/Adam/mul_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_325"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_131"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_132"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_65/Minimum"
  op: "Minimum"
  input: "training/Adam/add_194"
  input: "training/Adam/Const_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_65"
  op: "Maximum"
  input: "training/Adam/clip_by_value_65/Minimum"
  input: "training/Adam/Const_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_65"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_195/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_195"
  op: "Add"
  input: "training/Adam/Sqrt_65"
  input: "training/Adam/add_195/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_65"
  op: "RealDiv"
  input: "training/Adam/mul_325"
  input: "training/Adam/add_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_518"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_196"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_518"
  input: "training/Adam/truediv_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "training/Adam/m_64_1"
  input: "training/Adam/add_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_519"
  op: "ReadVariableOp"
  input: "training/Adam/m_64_1"
  input: "^training/Adam/AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "training/Adam/v_64_1"
  input: "training/Adam/add_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_520"
  op: "ReadVariableOp"
  input: "training/Adam/v_64_1"
  input: "^training/Adam/AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/gamma"
  input: "training/Adam/sub_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_521"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/gamma"
  input: "^training/Adam/AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_522"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_326/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_65_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_326"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_522"
  input: "training/Adam/mul_326/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_523"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_197/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_197"
  op: "Sub"
  input: "training/Adam/sub_197/x"
  input: "training/Adam/ReadVariableOp_523"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_327"
  op: "Mul"
  input: "training/Adam/sub_197"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_196"
  op: "Add"
  input: "training/Adam/mul_326"
  input: "training/Adam/mul_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_524"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_328/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_65_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_328"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_524"
  input: "training/Adam/mul_328/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_525"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_198/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_198"
  op: "Sub"
  input: "training/Adam/sub_198/x"
  input: "training/Adam/ReadVariableOp_525"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_65"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_329"
  op: "Mul"
  input: "training/Adam/sub_198"
  input: "training/Adam/Square_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_197"
  op: "Add"
  input: "training/Adam/mul_328"
  input: "training/Adam/mul_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_330"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_133"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_134"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_66/Minimum"
  op: "Minimum"
  input: "training/Adam/add_197"
  input: "training/Adam/Const_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_66"
  op: "Maximum"
  input: "training/Adam/clip_by_value_66/Minimum"
  input: "training/Adam/Const_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_66"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_198/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_198"
  op: "Add"
  input: "training/Adam/Sqrt_66"
  input: "training/Adam/add_198/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_66"
  op: "RealDiv"
  input: "training/Adam/mul_330"
  input: "training/Adam/add_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_526"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_199"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_526"
  input: "training/Adam/truediv_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "training/Adam/m_65_1"
  input: "training/Adam/add_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_527"
  op: "ReadVariableOp"
  input: "training/Adam/m_65_1"
  input: "^training/Adam/AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "training/Adam/v_65_1"
  input: "training/Adam/add_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_528"
  op: "ReadVariableOp"
  input: "training/Adam/v_65_1"
  input: "^training/Adam/AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "conv_dw_11_bn/beta"
  input: "training/Adam/sub_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_529"
  op: "ReadVariableOp"
  input: "conv_dw_11_bn/beta"
  input: "^training/Adam/AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_530"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_331/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_66_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_331"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_530"
  input: "training/Adam/mul_331/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_531"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_200/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_200"
  op: "Sub"
  input: "training/Adam/sub_200/x"
  input: "training/Adam/ReadVariableOp_531"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_332"
  op: "Mul"
  input: "training/Adam/sub_200"
  input: "training/Adam/gradients/conv_pw_11/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_199"
  op: "Add"
  input: "training/Adam/mul_331"
  input: "training/Adam/mul_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_532"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_333/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_66_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_333"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_532"
  input: "training/Adam/mul_333/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_533"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_201/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_201"
  op: "Sub"
  input: "training/Adam/sub_201/x"
  input: "training/Adam/ReadVariableOp_533"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_66"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_11/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_334"
  op: "Mul"
  input: "training/Adam/sub_201"
  input: "training/Adam/Square_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_200"
  op: "Add"
  input: "training/Adam/mul_333"
  input: "training/Adam/mul_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_335"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_135"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_136"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_67/Minimum"
  op: "Minimum"
  input: "training/Adam/add_200"
  input: "training/Adam/Const_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_67"
  op: "Maximum"
  input: "training/Adam/clip_by_value_67/Minimum"
  input: "training/Adam/Const_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_67"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_201/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_201"
  op: "Add"
  input: "training/Adam/Sqrt_67"
  input: "training/Adam/add_201/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_67"
  op: "RealDiv"
  input: "training/Adam/mul_335"
  input: "training/Adam/add_201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_534"
  op: "ReadVariableOp"
  input: "conv_pw_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_202"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_534"
  input: "training/Adam/truediv_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "training/Adam/m_66_1"
  input: "training/Adam/add_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_535"
  op: "ReadVariableOp"
  input: "training/Adam/m_66_1"
  input: "^training/Adam/AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "training/Adam/v_66_1"
  input: "training/Adam/add_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_536"
  op: "ReadVariableOp"
  input: "training/Adam/v_66_1"
  input: "^training/Adam/AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "conv_pw_11/kernel"
  input: "training/Adam/sub_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_537"
  op: "ReadVariableOp"
  input: "conv_pw_11/kernel"
  input: "^training/Adam/AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_538"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_336/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_67_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_336"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_538"
  input: "training/Adam/mul_336/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_539"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_203/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_203"
  op: "Sub"
  input: "training/Adam/sub_203/x"
  input: "training/Adam/ReadVariableOp_539"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_337"
  op: "Mul"
  input: "training/Adam/sub_203"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_202"
  op: "Add"
  input: "training/Adam/mul_336"
  input: "training/Adam/mul_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_540"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_338/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_67_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_338"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_540"
  input: "training/Adam/mul_338/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_541"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_204/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_204"
  op: "Sub"
  input: "training/Adam/sub_204/x"
  input: "training/Adam/ReadVariableOp_541"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_67"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_339"
  op: "Mul"
  input: "training/Adam/sub_204"
  input: "training/Adam/Square_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_203"
  op: "Add"
  input: "training/Adam/mul_338"
  input: "training/Adam/mul_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_340"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_137"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_138"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_68/Minimum"
  op: "Minimum"
  input: "training/Adam/add_203"
  input: "training/Adam/Const_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_68"
  op: "Maximum"
  input: "training/Adam/clip_by_value_68/Minimum"
  input: "training/Adam/Const_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_68"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_204/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_204"
  op: "Add"
  input: "training/Adam/Sqrt_68"
  input: "training/Adam/add_204/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_68"
  op: "RealDiv"
  input: "training/Adam/mul_340"
  input: "training/Adam/add_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_542"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_205"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_542"
  input: "training/Adam/truediv_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "training/Adam/m_67_1"
  input: "training/Adam/add_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_543"
  op: "ReadVariableOp"
  input: "training/Adam/m_67_1"
  input: "^training/Adam/AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "training/Adam/v_67_1"
  input: "training/Adam/add_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_544"
  op: "ReadVariableOp"
  input: "training/Adam/v_67_1"
  input: "^training/Adam/AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/gamma"
  input: "training/Adam/sub_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_545"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/gamma"
  input: "^training/Adam/AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_546"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_341/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_68_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_341"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_546"
  input: "training/Adam/mul_341/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_547"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_206/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_206"
  op: "Sub"
  input: "training/Adam/sub_206/x"
  input: "training/Adam/ReadVariableOp_547"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_342"
  op: "Mul"
  input: "training/Adam/sub_206"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_205"
  op: "Add"
  input: "training/Adam/mul_341"
  input: "training/Adam/mul_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_548"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_343/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_68_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_343"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_548"
  input: "training/Adam/mul_343/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_549"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_207/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_207"
  op: "Sub"
  input: "training/Adam/sub_207/x"
  input: "training/Adam/ReadVariableOp_549"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_68"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_11_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_344"
  op: "Mul"
  input: "training/Adam/sub_207"
  input: "training/Adam/Square_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_206"
  op: "Add"
  input: "training/Adam/mul_343"
  input: "training/Adam/mul_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_345"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_139"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_140"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_69/Minimum"
  op: "Minimum"
  input: "training/Adam/add_206"
  input: "training/Adam/Const_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_69"
  op: "Maximum"
  input: "training/Adam/clip_by_value_69/Minimum"
  input: "training/Adam/Const_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_69"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_207/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_207"
  op: "Add"
  input: "training/Adam/Sqrt_69"
  input: "training/Adam/add_207/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_69"
  op: "RealDiv"
  input: "training/Adam/mul_345"
  input: "training/Adam/add_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_550"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_208"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_550"
  input: "training/Adam/truediv_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "training/Adam/m_68_1"
  input: "training/Adam/add_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_551"
  op: "ReadVariableOp"
  input: "training/Adam/m_68_1"
  input: "^training/Adam/AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "training/Adam/v_68_1"
  input: "training/Adam/add_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_552"
  op: "ReadVariableOp"
  input: "training/Adam/v_68_1"
  input: "^training/Adam/AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "conv_pw_11_bn/beta"
  input: "training/Adam/sub_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_553"
  op: "ReadVariableOp"
  input: "conv_pw_11_bn/beta"
  input: "^training/Adam/AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_554"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_346/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_69_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_346"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_554"
  input: "training/Adam/mul_346/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_555"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_209/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_209"
  op: "Sub"
  input: "training/Adam/sub_209/x"
  input: "training/Adam/ReadVariableOp_555"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_347"
  op: "Mul"
  input: "training/Adam/sub_209"
  input: "training/Adam/gradients/conv_dw_12/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_208"
  op: "Add"
  input: "training/Adam/mul_346"
  input: "training/Adam/mul_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_556"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_348/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_69_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_348"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_556"
  input: "training/Adam/mul_348/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_557"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_210/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_210"
  op: "Sub"
  input: "training/Adam/sub_210/x"
  input: "training/Adam/ReadVariableOp_557"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_69"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_12/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_349"
  op: "Mul"
  input: "training/Adam/sub_210"
  input: "training/Adam/Square_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_209"
  op: "Add"
  input: "training/Adam/mul_348"
  input: "training/Adam/mul_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_350"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_141"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_142"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_70/Minimum"
  op: "Minimum"
  input: "training/Adam/add_209"
  input: "training/Adam/Const_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_70"
  op: "Maximum"
  input: "training/Adam/clip_by_value_70/Minimum"
  input: "training/Adam/Const_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_70"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_210/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_210"
  op: "Add"
  input: "training/Adam/Sqrt_70"
  input: "training/Adam/add_210/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_70"
  op: "RealDiv"
  input: "training/Adam/mul_350"
  input: "training/Adam/add_210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_558"
  op: "ReadVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_211"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_558"
  input: "training/Adam/truediv_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "training/Adam/m_69_1"
  input: "training/Adam/add_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_559"
  op: "ReadVariableOp"
  input: "training/Adam/m_69_1"
  input: "^training/Adam/AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "training/Adam/v_69_1"
  input: "training/Adam/add_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_560"
  op: "ReadVariableOp"
  input: "training/Adam/v_69_1"
  input: "^training/Adam/AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  input: "training/Adam/sub_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_561"
  op: "ReadVariableOp"
  input: "conv_dw_12/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_562"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_351/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_70_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_351"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_562"
  input: "training/Adam/mul_351/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_563"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_212/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_212"
  op: "Sub"
  input: "training/Adam/sub_212/x"
  input: "training/Adam/ReadVariableOp_563"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_352"
  op: "Mul"
  input: "training/Adam/sub_212"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_211"
  op: "Add"
  input: "training/Adam/mul_351"
  input: "training/Adam/mul_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_564"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_353/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_70_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_353"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_564"
  input: "training/Adam/mul_353/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_565"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_213/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_213"
  op: "Sub"
  input: "training/Adam/sub_213/x"
  input: "training/Adam/ReadVariableOp_565"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_70"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_354"
  op: "Mul"
  input: "training/Adam/sub_213"
  input: "training/Adam/Square_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_212"
  op: "Add"
  input: "training/Adam/mul_353"
  input: "training/Adam/mul_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_355"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_143"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_144"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_71/Minimum"
  op: "Minimum"
  input: "training/Adam/add_212"
  input: "training/Adam/Const_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_71"
  op: "Maximum"
  input: "training/Adam/clip_by_value_71/Minimum"
  input: "training/Adam/Const_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_71"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_213/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_213"
  op: "Add"
  input: "training/Adam/Sqrt_71"
  input: "training/Adam/add_213/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_71"
  op: "RealDiv"
  input: "training/Adam/mul_355"
  input: "training/Adam/add_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_566"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_214"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_566"
  input: "training/Adam/truediv_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "training/Adam/m_70_1"
  input: "training/Adam/add_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_567"
  op: "ReadVariableOp"
  input: "training/Adam/m_70_1"
  input: "^training/Adam/AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "training/Adam/v_70_1"
  input: "training/Adam/add_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_568"
  op: "ReadVariableOp"
  input: "training/Adam/v_70_1"
  input: "^training/Adam/AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/gamma"
  input: "training/Adam/sub_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_569"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/gamma"
  input: "^training/Adam/AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_570"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_356/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_71_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_356"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_570"
  input: "training/Adam/mul_356/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_571"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_215/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_215"
  op: "Sub"
  input: "training/Adam/sub_215/x"
  input: "training/Adam/ReadVariableOp_571"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_357"
  op: "Mul"
  input: "training/Adam/sub_215"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_214"
  op: "Add"
  input: "training/Adam/mul_356"
  input: "training/Adam/mul_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_572"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_358/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_71_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_358"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_572"
  input: "training/Adam/mul_358/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_573"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_216/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_216"
  op: "Sub"
  input: "training/Adam/sub_216/x"
  input: "training/Adam/ReadVariableOp_573"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_71"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_359"
  op: "Mul"
  input: "training/Adam/sub_216"
  input: "training/Adam/Square_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_215"
  op: "Add"
  input: "training/Adam/mul_358"
  input: "training/Adam/mul_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_360"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_145"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_146"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_72/Minimum"
  op: "Minimum"
  input: "training/Adam/add_215"
  input: "training/Adam/Const_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_72"
  op: "Maximum"
  input: "training/Adam/clip_by_value_72/Minimum"
  input: "training/Adam/Const_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_72"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_216/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_216"
  op: "Add"
  input: "training/Adam/Sqrt_72"
  input: "training/Adam/add_216/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_72"
  op: "RealDiv"
  input: "training/Adam/mul_360"
  input: "training/Adam/add_216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_574"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_217"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_574"
  input: "training/Adam/truediv_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "training/Adam/m_71_1"
  input: "training/Adam/add_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_575"
  op: "ReadVariableOp"
  input: "training/Adam/m_71_1"
  input: "^training/Adam/AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "training/Adam/v_71_1"
  input: "training/Adam/add_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_576"
  op: "ReadVariableOp"
  input: "training/Adam/v_71_1"
  input: "^training/Adam/AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "conv_dw_12_bn/beta"
  input: "training/Adam/sub_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_577"
  op: "ReadVariableOp"
  input: "conv_dw_12_bn/beta"
  input: "^training/Adam/AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_578"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_361/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_72_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_361"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_578"
  input: "training/Adam/mul_361/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_579"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_218/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_218"
  op: "Sub"
  input: "training/Adam/sub_218/x"
  input: "training/Adam/ReadVariableOp_579"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_362"
  op: "Mul"
  input: "training/Adam/sub_218"
  input: "training/Adam/gradients/conv_pw_12/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_217"
  op: "Add"
  input: "training/Adam/mul_361"
  input: "training/Adam/mul_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_580"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_363/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_72_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_363"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_580"
  input: "training/Adam/mul_363/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_581"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_219/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_219"
  op: "Sub"
  input: "training/Adam/sub_219/x"
  input: "training/Adam/ReadVariableOp_581"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_72"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_12/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_364"
  op: "Mul"
  input: "training/Adam/sub_219"
  input: "training/Adam/Square_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_218"
  op: "Add"
  input: "training/Adam/mul_363"
  input: "training/Adam/mul_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_365"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_147"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_148"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_73/Minimum"
  op: "Minimum"
  input: "training/Adam/add_218"
  input: "training/Adam/Const_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_73"
  op: "Maximum"
  input: "training/Adam/clip_by_value_73/Minimum"
  input: "training/Adam/Const_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_73"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_219/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_219"
  op: "Add"
  input: "training/Adam/Sqrt_73"
  input: "training/Adam/add_219/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_73"
  op: "RealDiv"
  input: "training/Adam/mul_365"
  input: "training/Adam/add_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_582"
  op: "ReadVariableOp"
  input: "conv_pw_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_220"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_582"
  input: "training/Adam/truediv_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "training/Adam/m_72_1"
  input: "training/Adam/add_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_583"
  op: "ReadVariableOp"
  input: "training/Adam/m_72_1"
  input: "^training/Adam/AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "training/Adam/v_72_1"
  input: "training/Adam/add_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_584"
  op: "ReadVariableOp"
  input: "training/Adam/v_72_1"
  input: "^training/Adam/AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "conv_pw_12/kernel"
  input: "training/Adam/sub_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_585"
  op: "ReadVariableOp"
  input: "conv_pw_12/kernel"
  input: "^training/Adam/AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_586"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_366/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_73_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_366"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_586"
  input: "training/Adam/mul_366/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_587"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_221/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_221"
  op: "Sub"
  input: "training/Adam/sub_221/x"
  input: "training/Adam/ReadVariableOp_587"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_367"
  op: "Mul"
  input: "training/Adam/sub_221"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_220"
  op: "Add"
  input: "training/Adam/mul_366"
  input: "training/Adam/mul_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_588"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_368/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_73_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_368"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_588"
  input: "training/Adam/mul_368/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_589"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_222/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_222"
  op: "Sub"
  input: "training/Adam/sub_222/x"
  input: "training/Adam/ReadVariableOp_589"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_73"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_369"
  op: "Mul"
  input: "training/Adam/sub_222"
  input: "training/Adam/Square_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_221"
  op: "Add"
  input: "training/Adam/mul_368"
  input: "training/Adam/mul_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_370"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_149"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_150"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_74/Minimum"
  op: "Minimum"
  input: "training/Adam/add_221"
  input: "training/Adam/Const_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_74"
  op: "Maximum"
  input: "training/Adam/clip_by_value_74/Minimum"
  input: "training/Adam/Const_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_74"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_222/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_222"
  op: "Add"
  input: "training/Adam/Sqrt_74"
  input: "training/Adam/add_222/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_74"
  op: "RealDiv"
  input: "training/Adam/mul_370"
  input: "training/Adam/add_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_590"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_223"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_590"
  input: "training/Adam/truediv_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "training/Adam/m_73_1"
  input: "training/Adam/add_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_591"
  op: "ReadVariableOp"
  input: "training/Adam/m_73_1"
  input: "^training/Adam/AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "training/Adam/v_73_1"
  input: "training/Adam/add_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_592"
  op: "ReadVariableOp"
  input: "training/Adam/v_73_1"
  input: "^training/Adam/AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/gamma"
  input: "training/Adam/sub_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_593"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/gamma"
  input: "^training/Adam/AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_594"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_371/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_74_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_371"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_594"
  input: "training/Adam/mul_371/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_595"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_224/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_224"
  op: "Sub"
  input: "training/Adam/sub_224/x"
  input: "training/Adam/ReadVariableOp_595"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_372"
  op: "Mul"
  input: "training/Adam/sub_224"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_223"
  op: "Add"
  input: "training/Adam/mul_371"
  input: "training/Adam/mul_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_596"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_373/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_74_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_373"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_596"
  input: "training/Adam/mul_373/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_597"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_225/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_225"
  op: "Sub"
  input: "training/Adam/sub_225/x"
  input: "training/Adam/ReadVariableOp_597"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_74"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_12_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_374"
  op: "Mul"
  input: "training/Adam/sub_225"
  input: "training/Adam/Square_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_224"
  op: "Add"
  input: "training/Adam/mul_373"
  input: "training/Adam/mul_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_375"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_151"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_152"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_75/Minimum"
  op: "Minimum"
  input: "training/Adam/add_224"
  input: "training/Adam/Const_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_75"
  op: "Maximum"
  input: "training/Adam/clip_by_value_75/Minimum"
  input: "training/Adam/Const_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_75"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_225/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_225"
  op: "Add"
  input: "training/Adam/Sqrt_75"
  input: "training/Adam/add_225/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_75"
  op: "RealDiv"
  input: "training/Adam/mul_375"
  input: "training/Adam/add_225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_598"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_226"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_598"
  input: "training/Adam/truediv_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "training/Adam/m_74_1"
  input: "training/Adam/add_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_599"
  op: "ReadVariableOp"
  input: "training/Adam/m_74_1"
  input: "^training/Adam/AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "training/Adam/v_74_1"
  input: "training/Adam/add_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_600"
  op: "ReadVariableOp"
  input: "training/Adam/v_74_1"
  input: "^training/Adam/AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "conv_pw_12_bn/beta"
  input: "training/Adam/sub_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_601"
  op: "ReadVariableOp"
  input: "conv_pw_12_bn/beta"
  input: "^training/Adam/AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_602"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_376/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_75_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_376"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_602"
  input: "training/Adam/mul_376/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_603"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_227/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_227"
  op: "Sub"
  input: "training/Adam/sub_227/x"
  input: "training/Adam/ReadVariableOp_603"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_377"
  op: "Mul"
  input: "training/Adam/sub_227"
  input: "training/Adam/gradients/conv_dw_13/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_226"
  op: "Add"
  input: "training/Adam/mul_376"
  input: "training/Adam/mul_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_604"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_378/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_75_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_378"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_604"
  input: "training/Adam/mul_378/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_605"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_228/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_228"
  op: "Sub"
  input: "training/Adam/sub_228/x"
  input: "training/Adam/ReadVariableOp_605"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_75"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_13/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_379"
  op: "Mul"
  input: "training/Adam/sub_228"
  input: "training/Adam/Square_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_227"
  op: "Add"
  input: "training/Adam/mul_378"
  input: "training/Adam/mul_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_380"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_153"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_154"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_76/Minimum"
  op: "Minimum"
  input: "training/Adam/add_227"
  input: "training/Adam/Const_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_76"
  op: "Maximum"
  input: "training/Adam/clip_by_value_76/Minimum"
  input: "training/Adam/Const_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_76"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_228/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_228"
  op: "Add"
  input: "training/Adam/Sqrt_76"
  input: "training/Adam/add_228/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_76"
  op: "RealDiv"
  input: "training/Adam/mul_380"
  input: "training/Adam/add_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_606"
  op: "ReadVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_229"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_606"
  input: "training/Adam/truediv_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "training/Adam/m_75_1"
  input: "training/Adam/add_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_607"
  op: "ReadVariableOp"
  input: "training/Adam/m_75_1"
  input: "^training/Adam/AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "training/Adam/v_75_1"
  input: "training/Adam/add_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_608"
  op: "ReadVariableOp"
  input: "training/Adam/v_75_1"
  input: "^training/Adam/AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  input: "training/Adam/sub_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_609"
  op: "ReadVariableOp"
  input: "conv_dw_13/depthwise_kernel"
  input: "^training/Adam/AssignVariableOp_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_610"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_381/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_76_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_381"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_610"
  input: "training/Adam/mul_381/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_611"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_230/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_230"
  op: "Sub"
  input: "training/Adam/sub_230/x"
  input: "training/Adam/ReadVariableOp_611"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_382"
  op: "Mul"
  input: "training/Adam/sub_230"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_229"
  op: "Add"
  input: "training/Adam/mul_381"
  input: "training/Adam/mul_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_612"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_383/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_76_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_383"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_612"
  input: "training/Adam/mul_383/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_613"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_231/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_231"
  op: "Sub"
  input: "training/Adam/sub_231/x"
  input: "training/Adam/ReadVariableOp_613"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_76"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_384"
  op: "Mul"
  input: "training/Adam/sub_231"
  input: "training/Adam/Square_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_230"
  op: "Add"
  input: "training/Adam/mul_383"
  input: "training/Adam/mul_384"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_385"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_155"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_156"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_77/Minimum"
  op: "Minimum"
  input: "training/Adam/add_230"
  input: "training/Adam/Const_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_77"
  op: "Maximum"
  input: "training/Adam/clip_by_value_77/Minimum"
  input: "training/Adam/Const_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_77"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_231/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_231"
  op: "Add"
  input: "training/Adam/Sqrt_77"
  input: "training/Adam/add_231/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_77"
  op: "RealDiv"
  input: "training/Adam/mul_385"
  input: "training/Adam/add_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_614"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_232"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_614"
  input: "training/Adam/truediv_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "training/Adam/m_76_1"
  input: "training/Adam/add_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_615"
  op: "ReadVariableOp"
  input: "training/Adam/m_76_1"
  input: "^training/Adam/AssignVariableOp_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "training/Adam/v_76_1"
  input: "training/Adam/add_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_616"
  op: "ReadVariableOp"
  input: "training/Adam/v_76_1"
  input: "^training/Adam/AssignVariableOp_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/gamma"
  input: "training/Adam/sub_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_617"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/gamma"
  input: "^training/Adam/AssignVariableOp_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_618"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_386/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_77_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_386"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_618"
  input: "training/Adam/mul_386/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_619"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_233/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_233"
  op: "Sub"
  input: "training/Adam/sub_233/x"
  input: "training/Adam/ReadVariableOp_619"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_387"
  op: "Mul"
  input: "training/Adam/sub_233"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_232"
  op: "Add"
  input: "training/Adam/mul_386"
  input: "training/Adam/mul_387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_620"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_388/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_77_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_388"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_620"
  input: "training/Adam/mul_388/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_621"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_234/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_234"
  op: "Sub"
  input: "training/Adam/sub_234/x"
  input: "training/Adam/ReadVariableOp_621"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_77"
  op: "Square"
  input: "training/Adam/gradients/conv_dw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_389"
  op: "Mul"
  input: "training/Adam/sub_234"
  input: "training/Adam/Square_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_233"
  op: "Add"
  input: "training/Adam/mul_388"
  input: "training/Adam/mul_389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_390"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_157"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_158"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_78/Minimum"
  op: "Minimum"
  input: "training/Adam/add_233"
  input: "training/Adam/Const_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_78"
  op: "Maximum"
  input: "training/Adam/clip_by_value_78/Minimum"
  input: "training/Adam/Const_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_78"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_234/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_234"
  op: "Add"
  input: "training/Adam/Sqrt_78"
  input: "training/Adam/add_234/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_78"
  op: "RealDiv"
  input: "training/Adam/mul_390"
  input: "training/Adam/add_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_622"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_235"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_622"
  input: "training/Adam/truediv_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "training/Adam/m_77_1"
  input: "training/Adam/add_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_623"
  op: "ReadVariableOp"
  input: "training/Adam/m_77_1"
  input: "^training/Adam/AssignVariableOp_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "training/Adam/v_77_1"
  input: "training/Adam/add_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_624"
  op: "ReadVariableOp"
  input: "training/Adam/v_77_1"
  input: "^training/Adam/AssignVariableOp_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "conv_dw_13_bn/beta"
  input: "training/Adam/sub_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_625"
  op: "ReadVariableOp"
  input: "conv_dw_13_bn/beta"
  input: "^training/Adam/AssignVariableOp_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_626"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_391/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_78_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_391"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_626"
  input: "training/Adam/mul_391/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_627"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_236/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_236"
  op: "Sub"
  input: "training/Adam/sub_236/x"
  input: "training/Adam/ReadVariableOp_627"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_392"
  op: "Mul"
  input: "training/Adam/sub_236"
  input: "training/Adam/gradients/conv_pw_13/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_235"
  op: "Add"
  input: "training/Adam/mul_391"
  input: "training/Adam/mul_392"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_628"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_393/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_78_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_393"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_628"
  input: "training/Adam/mul_393/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_629"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_237/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_237"
  op: "Sub"
  input: "training/Adam/sub_237/x"
  input: "training/Adam/ReadVariableOp_629"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_78"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_13/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_394"
  op: "Mul"
  input: "training/Adam/sub_237"
  input: "training/Adam/Square_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_236"
  op: "Add"
  input: "training/Adam/mul_393"
  input: "training/Adam/mul_394"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_395"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_159"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_160"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_79/Minimum"
  op: "Minimum"
  input: "training/Adam/add_236"
  input: "training/Adam/Const_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_79"
  op: "Maximum"
  input: "training/Adam/clip_by_value_79/Minimum"
  input: "training/Adam/Const_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_79"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_237/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_237"
  op: "Add"
  input: "training/Adam/Sqrt_79"
  input: "training/Adam/add_237/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_79"
  op: "RealDiv"
  input: "training/Adam/mul_395"
  input: "training/Adam/add_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_630"
  op: "ReadVariableOp"
  input: "conv_pw_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_238"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_630"
  input: "training/Adam/truediv_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "training/Adam/m_78_1"
  input: "training/Adam/add_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_631"
  op: "ReadVariableOp"
  input: "training/Adam/m_78_1"
  input: "^training/Adam/AssignVariableOp_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "training/Adam/v_78_1"
  input: "training/Adam/add_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_632"
  op: "ReadVariableOp"
  input: "training/Adam/v_78_1"
  input: "^training/Adam/AssignVariableOp_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "conv_pw_13/kernel"
  input: "training/Adam/sub_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_633"
  op: "ReadVariableOp"
  input: "conv_pw_13/kernel"
  input: "^training/Adam/AssignVariableOp_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_634"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_396/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_79_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_396"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_634"
  input: "training/Adam/mul_396/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_635"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_239/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_239"
  op: "Sub"
  input: "training/Adam/sub_239/x"
  input: "training/Adam/ReadVariableOp_635"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_397"
  op: "Mul"
  input: "training/Adam/sub_239"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_238"
  op: "Add"
  input: "training/Adam/mul_396"
  input: "training/Adam/mul_397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_636"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_398/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_79_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_398"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_636"
  input: "training/Adam/mul_398/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_637"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_240/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_240"
  op: "Sub"
  input: "training/Adam/sub_240/x"
  input: "training/Adam/ReadVariableOp_637"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_79"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_399"
  op: "Mul"
  input: "training/Adam/sub_240"
  input: "training/Adam/Square_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_239"
  op: "Add"
  input: "training/Adam/mul_398"
  input: "training/Adam/mul_399"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_400"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_161"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_162"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_80/Minimum"
  op: "Minimum"
  input: "training/Adam/add_239"
  input: "training/Adam/Const_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_80"
  op: "Maximum"
  input: "training/Adam/clip_by_value_80/Minimum"
  input: "training/Adam/Const_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_80"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_240/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_240"
  op: "Add"
  input: "training/Adam/Sqrt_80"
  input: "training/Adam/add_240/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_80"
  op: "RealDiv"
  input: "training/Adam/mul_400"
  input: "training/Adam/add_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_638"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_241"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_638"
  input: "training/Adam/truediv_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "training/Adam/m_79_1"
  input: "training/Adam/add_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_639"
  op: "ReadVariableOp"
  input: "training/Adam/m_79_1"
  input: "^training/Adam/AssignVariableOp_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "training/Adam/v_79_1"
  input: "training/Adam/add_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_640"
  op: "ReadVariableOp"
  input: "training/Adam/v_79_1"
  input: "^training/Adam/AssignVariableOp_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/gamma"
  input: "training/Adam/sub_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_641"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/gamma"
  input: "^training/Adam/AssignVariableOp_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_642"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_401/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_80_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_401"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_642"
  input: "training/Adam/mul_401/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_643"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_242/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_242"
  op: "Sub"
  input: "training/Adam/sub_242/x"
  input: "training/Adam/ReadVariableOp_643"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_402"
  op: "Mul"
  input: "training/Adam/sub_242"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_241"
  op: "Add"
  input: "training/Adam/mul_401"
  input: "training/Adam/mul_402"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_644"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_403/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_80_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_403"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_644"
  input: "training/Adam/mul_403/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_645"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_243/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_243"
  op: "Sub"
  input: "training/Adam/sub_243/x"
  input: "training/Adam/ReadVariableOp_645"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_80"
  op: "Square"
  input: "training/Adam/gradients/conv_pw_13_bn/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_404"
  op: "Mul"
  input: "training/Adam/sub_243"
  input: "training/Adam/Square_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_242"
  op: "Add"
  input: "training/Adam/mul_403"
  input: "training/Adam/mul_404"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_405"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_163"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_164"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_81/Minimum"
  op: "Minimum"
  input: "training/Adam/add_242"
  input: "training/Adam/Const_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_81"
  op: "Maximum"
  input: "training/Adam/clip_by_value_81/Minimum"
  input: "training/Adam/Const_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_81"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_243/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_243"
  op: "Add"
  input: "training/Adam/Sqrt_81"
  input: "training/Adam/add_243/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_81"
  op: "RealDiv"
  input: "training/Adam/mul_405"
  input: "training/Adam/add_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_646"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_244"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_646"
  input: "training/Adam/truediv_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "training/Adam/m_80_1"
  input: "training/Adam/add_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_647"
  op: "ReadVariableOp"
  input: "training/Adam/m_80_1"
  input: "^training/Adam/AssignVariableOp_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "training/Adam/v_80_1"
  input: "training/Adam/add_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_648"
  op: "ReadVariableOp"
  input: "training/Adam/v_80_1"
  input: "^training/Adam/AssignVariableOp_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "conv_pw_13_bn/beta"
  input: "training/Adam/sub_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_649"
  op: "ReadVariableOp"
  input: "conv_pw_13_bn/beta"
  input: "^training/Adam/AssignVariableOp_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_650"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_406/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_81_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_406"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_650"
  input: "training/Adam/mul_406/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_651"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_245/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_245"
  op: "Sub"
  input: "training/Adam/sub_245/x"
  input: "training/Adam/ReadVariableOp_651"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_407"
  op: "Mul"
  input: "training/Adam/sub_245"
  input: "training/Adam/gradients/conv_cat/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_244"
  op: "Add"
  input: "training/Adam/mul_406"
  input: "training/Adam/mul_407"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_652"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_408/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_81_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_408"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_652"
  input: "training/Adam/mul_408/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_653"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_246/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_246"
  op: "Sub"
  input: "training/Adam/sub_246/x"
  input: "training/Adam/ReadVariableOp_653"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_81"
  op: "Square"
  input: "training/Adam/gradients/conv_cat/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_409"
  op: "Mul"
  input: "training/Adam/sub_246"
  input: "training/Adam/Square_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_245"
  op: "Add"
  input: "training/Adam/mul_408"
  input: "training/Adam/mul_409"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_410"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_165"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_166"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_82/Minimum"
  op: "Minimum"
  input: "training/Adam/add_245"
  input: "training/Adam/Const_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_82"
  op: "Maximum"
  input: "training/Adam/clip_by_value_82/Minimum"
  input: "training/Adam/Const_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_82"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_246/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_246"
  op: "Add"
  input: "training/Adam/Sqrt_82"
  input: "training/Adam/add_246/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_82"
  op: "RealDiv"
  input: "training/Adam/mul_410"
  input: "training/Adam/add_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_654"
  op: "ReadVariableOp"
  input: "conv_cat/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_247"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_654"
  input: "training/Adam/truediv_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "training/Adam/m_81_1"
  input: "training/Adam/add_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_655"
  op: "ReadVariableOp"
  input: "training/Adam/m_81_1"
  input: "^training/Adam/AssignVariableOp_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "training/Adam/v_81_1"
  input: "training/Adam/add_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_656"
  op: "ReadVariableOp"
  input: "training/Adam/v_81_1"
  input: "^training/Adam/AssignVariableOp_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "conv_cat/kernel"
  input: "training/Adam/sub_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_657"
  op: "ReadVariableOp"
  input: "conv_cat/kernel"
  input: "^training/Adam/AssignVariableOp_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_658"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_411/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_82_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_411"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_658"
  input: "training/Adam/mul_411/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_659"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_248/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_248"
  op: "Sub"
  input: "training/Adam/sub_248/x"
  input: "training/Adam/ReadVariableOp_659"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_412"
  op: "Mul"
  input: "training/Adam/sub_248"
  input: "training/Adam/gradients/conv_cat/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_247"
  op: "Add"
  input: "training/Adam/mul_411"
  input: "training/Adam/mul_412"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_660"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_413/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_82_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_413"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_660"
  input: "training/Adam/mul_413/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_661"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_249/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_249"
  op: "Sub"
  input: "training/Adam/sub_249/x"
  input: "training/Adam/ReadVariableOp_661"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_82"
  op: "Square"
  input: "training/Adam/gradients/conv_cat/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_414"
  op: "Mul"
  input: "training/Adam/sub_249"
  input: "training/Adam/Square_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_248"
  op: "Add"
  input: "training/Adam/mul_413"
  input: "training/Adam/mul_414"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_415"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_167"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_168"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_83/Minimum"
  op: "Minimum"
  input: "training/Adam/add_248"
  input: "training/Adam/Const_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_83"
  op: "Maximum"
  input: "training/Adam/clip_by_value_83/Minimum"
  input: "training/Adam/Const_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_83"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_249/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_249"
  op: "Add"
  input: "training/Adam/Sqrt_83"
  input: "training/Adam/add_249/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_83"
  op: "RealDiv"
  input: "training/Adam/mul_415"
  input: "training/Adam/add_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_662"
  op: "ReadVariableOp"
  input: "conv_cat/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_250"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_662"
  input: "training/Adam/truediv_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "training/Adam/m_82_1"
  input: "training/Adam/add_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_663"
  op: "ReadVariableOp"
  input: "training/Adam/m_82_1"
  input: "^training/Adam/AssignVariableOp_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "training/Adam/v_82_1"
  input: "training/Adam/add_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_664"
  op: "ReadVariableOp"
  input: "training/Adam/v_82_1"
  input: "^training/Adam/AssignVariableOp_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "conv_cat/bias"
  input: "training/Adam/sub_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_665"
  op: "ReadVariableOp"
  input: "conv_cat/bias"
  input: "^training/Adam/AssignVariableOp_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_666"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_416/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_83_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_416"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_666"
  input: "training/Adam/mul_416/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_667"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_251/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_251"
  op: "Sub"
  input: "training/Adam/sub_251/x"
  input: "training/Adam/ReadVariableOp_667"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_417"
  op: "Mul"
  input: "training/Adam/sub_251"
  input: "training/Adam/gradients/conv_reg/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_250"
  op: "Add"
  input: "training/Adam/mul_416"
  input: "training/Adam/mul_417"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_668"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_418/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_83_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_418"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_668"
  input: "training/Adam/mul_418/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_669"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_252/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_252"
  op: "Sub"
  input: "training/Adam/sub_252/x"
  input: "training/Adam/ReadVariableOp_669"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_83"
  op: "Square"
  input: "training/Adam/gradients/conv_reg/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_419"
  op: "Mul"
  input: "training/Adam/sub_252"
  input: "training/Adam/Square_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_251"
  op: "Add"
  input: "training/Adam/mul_418"
  input: "training/Adam/mul_419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_420"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_169"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_170"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_84/Minimum"
  op: "Minimum"
  input: "training/Adam/add_251"
  input: "training/Adam/Const_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_84"
  op: "Maximum"
  input: "training/Adam/clip_by_value_84/Minimum"
  input: "training/Adam/Const_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_84"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_252/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_252"
  op: "Add"
  input: "training/Adam/Sqrt_84"
  input: "training/Adam/add_252/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_84"
  op: "RealDiv"
  input: "training/Adam/mul_420"
  input: "training/Adam/add_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_670"
  op: "ReadVariableOp"
  input: "conv_reg/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_253"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_670"
  input: "training/Adam/truediv_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "training/Adam/m_83_1"
  input: "training/Adam/add_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_671"
  op: "ReadVariableOp"
  input: "training/Adam/m_83_1"
  input: "^training/Adam/AssignVariableOp_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "training/Adam/v_83_1"
  input: "training/Adam/add_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_672"
  op: "ReadVariableOp"
  input: "training/Adam/v_83_1"
  input: "^training/Adam/AssignVariableOp_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "conv_reg/kernel"
  input: "training/Adam/sub_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_673"
  op: "ReadVariableOp"
  input: "conv_reg/kernel"
  input: "^training/Adam/AssignVariableOp_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_674"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_421/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_84_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_421"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_674"
  input: "training/Adam/mul_421/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_675"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_254/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_254"
  op: "Sub"
  input: "training/Adam/sub_254/x"
  input: "training/Adam/ReadVariableOp_675"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_422"
  op: "Mul"
  input: "training/Adam/sub_254"
  input: "training/Adam/gradients/conv_reg/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_253"
  op: "Add"
  input: "training/Adam/mul_421"
  input: "training/Adam/mul_422"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_676"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_423/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_84_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_423"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_676"
  input: "training/Adam/mul_423/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_677"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_255/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_255"
  op: "Sub"
  input: "training/Adam/sub_255/x"
  input: "training/Adam/ReadVariableOp_677"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_84"
  op: "Square"
  input: "training/Adam/gradients/conv_reg/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_424"
  op: "Mul"
  input: "training/Adam/sub_255"
  input: "training/Adam/Square_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_254"
  op: "Add"
  input: "training/Adam/mul_423"
  input: "training/Adam/mul_424"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_425"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_171"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_172"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_85/Minimum"
  op: "Minimum"
  input: "training/Adam/add_254"
  input: "training/Adam/Const_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_85"
  op: "Maximum"
  input: "training/Adam/clip_by_value_85/Minimum"
  input: "training/Adam/Const_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_85"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_255/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_255"
  op: "Add"
  input: "training/Adam/Sqrt_85"
  input: "training/Adam/add_255/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_85"
  op: "RealDiv"
  input: "training/Adam/mul_425"
  input: "training/Adam/add_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_678"
  op: "ReadVariableOp"
  input: "conv_reg/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_256"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_678"
  input: "training/Adam/truediv_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "training/Adam/m_84_1"
  input: "training/Adam/add_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_679"
  op: "ReadVariableOp"
  input: "training/Adam/m_84_1"
  input: "^training/Adam/AssignVariableOp_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "training/Adam/v_84_1"
  input: "training/Adam/add_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_680"
  op: "ReadVariableOp"
  input: "training/Adam/v_84_1"
  input: "^training/Adam/AssignVariableOp_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "conv_reg/bias"
  input: "training/Adam/sub_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_681"
  op: "ReadVariableOp"
  input: "conv_reg/bias"
  input: "^training/Adam/AssignVariableOp_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_682"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_426/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_85_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_426"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_682"
  input: "training/Adam/mul_426/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_683"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_257/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_257"
  op: "Sub"
  input: "training/Adam/sub_257/x"
  input: "training/Adam/ReadVariableOp_683"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_427"
  op: "Mul"
  input: "training/Adam/sub_257"
  input: "training/Adam/gradients/conv_bin/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_256"
  op: "Add"
  input: "training/Adam/mul_426"
  input: "training/Adam/mul_427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_684"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_428/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_85_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_428"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_684"
  input: "training/Adam/mul_428/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_685"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_258/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_258"
  op: "Sub"
  input: "training/Adam/sub_258/x"
  input: "training/Adam/ReadVariableOp_685"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_85"
  op: "Square"
  input: "training/Adam/gradients/conv_bin/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_429"
  op: "Mul"
  input: "training/Adam/sub_258"
  input: "training/Adam/Square_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_257"
  op: "Add"
  input: "training/Adam/mul_428"
  input: "training/Adam/mul_429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_430"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_173"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_174"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_86/Minimum"
  op: "Minimum"
  input: "training/Adam/add_257"
  input: "training/Adam/Const_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_86"
  op: "Maximum"
  input: "training/Adam/clip_by_value_86/Minimum"
  input: "training/Adam/Const_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_86"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_258/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_258"
  op: "Add"
  input: "training/Adam/Sqrt_86"
  input: "training/Adam/add_258/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_86"
  op: "RealDiv"
  input: "training/Adam/mul_430"
  input: "training/Adam/add_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_686"
  op: "ReadVariableOp"
  input: "conv_bin/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_259"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_686"
  input: "training/Adam/truediv_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "training/Adam/m_85_1"
  input: "training/Adam/add_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_687"
  op: "ReadVariableOp"
  input: "training/Adam/m_85_1"
  input: "^training/Adam/AssignVariableOp_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "training/Adam/v_85_1"
  input: "training/Adam/add_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_688"
  op: "ReadVariableOp"
  input: "training/Adam/v_85_1"
  input: "^training/Adam/AssignVariableOp_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "conv_bin/kernel"
  input: "training/Adam/sub_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_689"
  op: "ReadVariableOp"
  input: "conv_bin/kernel"
  input: "^training/Adam/AssignVariableOp_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_690"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_431/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/m_86_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_431"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_690"
  input: "training/Adam/mul_431/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_691"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_260/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_260"
  op: "Sub"
  input: "training/Adam/sub_260/x"
  input: "training/Adam/ReadVariableOp_691"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_432"
  op: "Mul"
  input: "training/Adam/sub_260"
  input: "training/Adam/gradients/conv_bin/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_259"
  op: "Add"
  input: "training/Adam/mul_431"
  input: "training/Adam/mul_432"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_692"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_433/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/v_86_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_433"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_692"
  input: "training/Adam/mul_433/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_693"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_261/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_261"
  op: "Sub"
  input: "training/Adam/sub_261/x"
  input: "training/Adam/ReadVariableOp_693"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_86"
  op: "Square"
  input: "training/Adam/gradients/conv_bin/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_434"
  op: "Mul"
  input: "training/Adam/sub_261"
  input: "training/Adam/Square_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_260"
  op: "Add"
  input: "training/Adam/mul_433"
  input: "training/Adam/mul_434"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_435"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_175"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_176"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_87/Minimum"
  op: "Minimum"
  input: "training/Adam/add_260"
  input: "training/Adam/Const_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_87"
  op: "Maximum"
  input: "training/Adam/clip_by_value_87/Minimum"
  input: "training/Adam/Const_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_87"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_261/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_261"
  op: "Add"
  input: "training/Adam/Sqrt_87"
  input: "training/Adam/add_261/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_87"
  op: "RealDiv"
  input: "training/Adam/mul_435"
  input: "training/Adam/add_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_694"
  op: "ReadVariableOp"
  input: "conv_bin/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_262"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_694"
  input: "training/Adam/truediv_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "training/Adam/m_86_1"
  input: "training/Adam/add_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_695"
  op: "ReadVariableOp"
  input: "training/Adam/m_86_1"
  input: "^training/Adam/AssignVariableOp_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "training/Adam/v_86_1"
  input: "training/Adam/add_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_696"
  op: "ReadVariableOp"
  input: "training/Adam/v_86_1"
  input: "^training/Adam/AssignVariableOp_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "conv_bin/bias"
  input: "training/Adam/sub_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_697"
  op: "ReadVariableOp"
  input: "conv_bin/bias"
  input: "^training/Adam/AssignVariableOp_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "training/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "training/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_72_1"
}
node {
  name: "training/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_56_1"
}
node {
  name: "training/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_3_1"
}
node {
  name: "training/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_75_1"
}
node {
  name: "training/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_67_1"
}
node {
  name: "training/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_66_1"
}
node {
  name: "training/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_38_1"
}
node {
  name: "training/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_6_1"
}
node {
  name: "training/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_35_1"
}
node {
  name: "training/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_59_1"
}
node {
  name: "training/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_76_1"
}
node {
  name: "training/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_39_1"
}
node {
  name: "training/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "count_5"
}
node {
  name: "training/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_7_1"
}
node {
  name: "training/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_4_1"
}
node {
  name: "training/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_73_1"
}
node {
  name: "training/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_68_1"
}
node {
  name: "training/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_9_1"
}
node {
  name: "training/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_8_1"
}
node {
  name: "training/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_57_1"
}
node {
  name: "training/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_5_1"
}
node {
  name: "training/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_74_1"
}
node {
  name: "training/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_36_1"
}
node {
  name: "training/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_60_1"
}
node {
  name: "training/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_58_1"
}
node {
  name: "training/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "total_3"
}
node {
  name: "training/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_16_1"
}
node {
  name: "training/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_42_1"
}
node {
  name: "training/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_66_1"
}
node {
  name: "training/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_56_1"
}
node {
  name: "training/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_27_1"
}
node {
  name: "training/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_75_1"
}
node {
  name: "training/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_84_1"
}
node {
  name: "training/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_60_1"
}
node {
  name: "training/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_84_1"
}
node {
  name: "training/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_17_1"
}
node {
  name: "training/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_47_1"
}
node {
  name: "training/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_71_1"
}
node {
  name: "training/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_10_1"
}
node {
  name: "training/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_82_1"
}
node {
  name: "training/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_19_1"
}
node {
  name: "training/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_43_1"
}
node {
  name: "training/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_67_1"
}
node {
  name: "training/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_51_1"
}
node {
  name: "training/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_61_1"
}
node {
  name: "training/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_85_1"
}
node {
  name: "training/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_48_1"
}
node {
  name: "training/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_72_1"
}
node {
  name: "training/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_11_1"
}
node {
  name: "training/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_83_1"
}
node {
  name: "training/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_28_1"
}
node {
  name: "training/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_76_1"
}
node {
  name: "training/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_83_1"
}
node {
  name: "training/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_20_1"
}
node {
  name: "training/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_18_1"
}
node {
  name: "training/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_44_1"
}
node {
  name: "training/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_68_1"
}
node {
  name: "training/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_52_1"
}
node {
  name: "training/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_77_1"
}
node {
  name: "training/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_29_1"
}
node {
  name: "training/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_18_1"
}
node {
  name: "training/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_57_1"
}
node {
  name: "training/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_35_1"
}
node {
  name: "training/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_3_1"
}
node {
  name: "training/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_62_1"
}
node {
  name: "training/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_25_1"
}
node {
  name: "training/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_12_1"
}
node {
  name: "training/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_18_1"
}
node {
  name: "training/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_4_1"
}
node {
  name: "training/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_63_1"
}
node {
  name: "training/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_27_1"
}
node {
  name: "training/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_75_1"
}
node {
  name: "training/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_26_1"
}
node {
  name: "training/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_13_1"
}
node {
  name: "training/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_19_1"
}
node {
  name: "training/VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_5_1"
}
node {
  name: "training/VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_36_1"
}
node {
  name: "training/VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_7_1"
}
node {
  name: "training/VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_28_1"
}
node {
  name: "training/VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_76_1"
}
node {
  name: "training/VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_37_1"
}
node {
  name: "training/VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_20_1"
}
node {
  name: "training/VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "Adam/learning_rate"
}
node {
  name: "training/VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "training/VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_6_1"
}
node {
  name: "training/VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "training/VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_77_1"
}
node {
  name: "training/VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_40_1"
}
node {
  name: "training/VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_62_1"
}
node {
  name: "training/VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_38_1"
}
node {
  name: "training/VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_43_1"
}
node {
  name: "training/VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_42_1"
}
node {
  name: "training/VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_19_1"
}
node {
  name: "training/VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_51_1"
}
node {
  name: "training/VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_78_1"
}
node {
  name: "training/VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_41_1"
}
node {
  name: "training/VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_13_1"
}
node {
  name: "training/VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_34_1"
}
node {
  name: "training/VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_10_1"
}
node {
  name: "training/VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_44_1"
}
node {
  name: "training/VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_8_1"
}
node {
  name: "training/VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_14_1"
}
node {
  name: "training/VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_12_1"
}
node {
  name: "training/VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_35_1"
}
node {
  name: "training/VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_52_1"
}
node {
  name: "training/VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_11_1"
}
node {
  name: "training/VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_10_1"
}
node {
  name: "training/VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_0_1"
}
node {
  name: "training/VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_39_1"
}
node {
  name: "training/VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_63_1"
}
node {
  name: "training/VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_20_1"
}
node {
  name: "training/VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_1_1"
}
node {
  name: "training/VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_53_1"
}
node {
  name: "training/VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_9_1"
}
node {
  name: "training/VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_42_1"
}
node {
  name: "training/VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_2_1"
}
node {
  name: "training/VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_79_1"
}
node {
  name: "training/VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_59_1"
}
node {
  name: "training/VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_21_1"
}
node {
  name: "training/VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_0_1"
}
node {
  name: "training/VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_84_1"
}
node {
  name: "training/VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_45_1"
}
node {
  name: "training/VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_27_1"
}
node {
  name: "training/VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "training/VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "total_4"
}
node {
  name: "training/VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "count_4"
}
node {
  name: "training/VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_43_1"
}
node {
  name: "training/VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_86_1"
}
node {
  name: "training/VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_86_1"
}
node {
  name: "training/VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "training/VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_28_1"
}
node {
  name: "training/VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_30_1"
}
node {
  name: "training/VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_78_1"
}
node {
  name: "training/VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_21_1"
}
node {
  name: "training/VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_13_1"
}
node {
  name: "training/VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_38_1"
}
node {
  name: "training/VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_80_1"
}
node {
  name: "training/VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_37_1"
}
node {
  name: "training/VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_83_1"
}
node {
  name: "training/VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "training/VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_46_1"
}
node {
  name: "training/VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_23_1"
}
node {
  name: "training/VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_22_1"
}
node {
  name: "training/VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_85_1"
}
node {
  name: "training/VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_60_1"
}
node {
  name: "training/VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "training/VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_14_1"
}
node {
  name: "training/VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_31_1"
}
node {
  name: "training/VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_79_1"
}
node {
  name: "training/VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_12_1"
}
node {
  name: "training/VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "training/VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_61_1"
}
node {
  name: "training/VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "training/VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_47_1"
}
node {
  name: "training/VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_22_1"
}
node {
  name: "training/VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_44_1"
}
node {
  name: "training/VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_81_1"
}
node {
  name: "training/VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "count_3"
}
node {
  name: "training/VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "total_5"
}
node {
  name: "training/VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_15_1"
}
node {
  name: "training/VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_21_1"
}
node {
  name: "training/VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_49_1"
}
node {
  name: "training/VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_73_1"
}
node {
  name: "training/VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_40_1"
}
node {
  name: "training/VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_16_1"
}
node {
  name: "training/VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_54_1"
}
node {
  name: "training/VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_56_1"
}
node {
  name: "training/VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_50_1"
}
node {
  name: "training/VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_74_1"
}
node {
  name: "training/VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_62_1"
}
node {
  name: "training/VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_22_1"
}
node {
  name: "training/VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_61_1"
}
node {
  name: "training/VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_53_1"
}
node {
  name: "training/VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_77_1"
}
node {
  name: "training/VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_57_1"
}
node {
  name: "training/VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_41_1"
}
node {
  name: "training/VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_39_1"
}
node {
  name: "training/VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_54_1"
}
node {
  name: "training/VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_78_1"
}
node {
  name: "training/VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_17_1"
}
node {
  name: "training/VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_55_1"
}
node {
  name: "training/VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_23_1"
}
node {
  name: "training/VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_58_1"
}
node {
  name: "training/VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_55_1"
}
node {
  name: "training/VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_79_1"
}
node {
  name: "training/VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_0_1"
}
node {
  name: "training/VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_86_1"
}
node {
  name: "training/VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_64_1"
}
node {
  name: "training/VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_5_1"
}
node {
  name: "training/VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_53_1"
}
node {
  name: "training/VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_1_1"
}
node {
  name: "training/VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_32_1"
}
node {
  name: "training/VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_80_1"
}
node {
  name: "training/VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_1_1"
}
node {
  name: "training/VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_64_1"
}
node {
  name: "training/VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_69_1"
}
node {
  name: "training/VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_14_1"
}
node {
  name: "training/VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_67_1"
}
node {
  name: "training/VarIsInitializedOp_200"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_24_1"
}
node {
  name: "training/VarIsInitializedOp_201"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_6_1"
}
node {
  name: "training/VarIsInitializedOp_202"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_54_1"
}
node {
  name: "training/VarIsInitializedOp_203"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_36_1"
}
node {
  name: "training/VarIsInitializedOp_204"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_65_1"
}
node {
  name: "training/VarIsInitializedOp_205"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_46_1"
}
node {
  name: "training/VarIsInitializedOp_206"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_58_1"
}
node {
  name: "training/VarIsInitializedOp_207"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_4_1"
}
node {
  name: "training/VarIsInitializedOp_208"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_65_1"
}
node {
  name: "training/VarIsInitializedOp_209"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_15_1"
}
node {
  name: "training/VarIsInitializedOp_210"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_32_1"
}
node {
  name: "training/VarIsInitializedOp_211"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_2_1"
}
node {
  name: "training/VarIsInitializedOp_212"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_8_1"
}
node {
  name: "training/VarIsInitializedOp_213"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_32_1"
}
node {
  name: "training/VarIsInitializedOp_214"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_29_1"
}
node {
  name: "training/VarIsInitializedOp_215"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_37_1"
}
node {
  name: "training/VarIsInitializedOp_216"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_33_1"
}
node {
  name: "training/VarIsInitializedOp_217"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_70_1"
}
node {
  name: "training/VarIsInitializedOp_218"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_59_1"
}
node {
  name: "training/VarIsInitializedOp_219"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_2_1"
}
node {
  name: "training/VarIsInitializedOp_220"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_30_1"
}
node {
  name: "training/VarIsInitializedOp_221"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_47_1"
}
node {
  name: "training/VarIsInitializedOp_222"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_25_1"
}
node {
  name: "training/VarIsInitializedOp_223"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_45_1"
}
node {
  name: "training/VarIsInitializedOp_224"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_33_1"
}
node {
  name: "training/VarIsInitializedOp_225"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_81_1"
}
node {
  name: "training/VarIsInitializedOp_226"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_71_1"
}
node {
  name: "training/VarIsInitializedOp_227"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_85_1"
}
node {
  name: "training/VarIsInitializedOp_228"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_34_1"
}
node {
  name: "training/VarIsInitializedOp_229"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_68_1"
}
node {
  name: "training/VarIsInitializedOp_230"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_31_1"
}
node {
  name: "training/VarIsInitializedOp_231"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_9_1"
}
node {
  name: "training/VarIsInitializedOp_232"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_33_1"
}
node {
  name: "training/VarIsInitializedOp_233"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_66_1"
}
node {
  name: "training/VarIsInitializedOp_234"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_3_1"
}
node {
  name: "training/VarIsInitializedOp_235"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_26_1"
}
node {
  name: "training/VarIsInitializedOp_236"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_7_1"
}
node {
  name: "training/VarIsInitializedOp_237"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_34_1"
}
node {
  name: "training/VarIsInitializedOp_238"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_82_1"
}
node {
  name: "training/VarIsInitializedOp_239"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_55_1"
}
node {
  name: "training/VarIsInitializedOp_240"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_15_1"
}
node {
  name: "training/VarIsInitializedOp_241"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_40_1"
}
node {
  name: "training/VarIsInitializedOp_242"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_29_1"
}
node {
  name: "training/VarIsInitializedOp_243"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_48_1"
}
node {
  name: "training/VarIsInitializedOp_244"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_51_1"
}
node {
  name: "training/VarIsInitializedOp_245"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_30_1"
}
node {
  name: "training/VarIsInitializedOp_246"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_64_1"
}
node {
  name: "training/VarIsInitializedOp_247"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_48_1"
}
node {
  name: "training/VarIsInitializedOp_248"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_72_1"
}
node {
  name: "training/VarIsInitializedOp_249"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_23_1"
}
node {
  name: "training/VarIsInitializedOp_250"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_70_1"
}
node {
  name: "training/VarIsInitializedOp_251"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_52_1"
}
node {
  name: "training/VarIsInitializedOp_252"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_41_1"
}
node {
  name: "training/VarIsInitializedOp_253"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_45_1"
}
node {
  name: "training/VarIsInitializedOp_254"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_69_1"
}
node {
  name: "training/VarIsInitializedOp_255"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_80_1"
}
node {
  name: "training/VarIsInitializedOp_256"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_25_1"
}
node {
  name: "training/VarIsInitializedOp_257"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_49_1"
}
node {
  name: "training/VarIsInitializedOp_258"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_81_1"
}
node {
  name: "training/VarIsInitializedOp_259"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_16_1"
}
node {
  name: "training/VarIsInitializedOp_260"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_24_1"
}
node {
  name: "training/VarIsInitializedOp_261"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_11_1"
}
node {
  name: "training/VarIsInitializedOp_262"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_65_1"
}
node {
  name: "training/VarIsInitializedOp_263"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_63_1"
}
node {
  name: "training/VarIsInitializedOp_264"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_71_1"
}
node {
  name: "training/VarIsInitializedOp_265"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_49_1"
}
node {
  name: "training/VarIsInitializedOp_266"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_73_1"
}
node {
  name: "training/VarIsInitializedOp_267"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_69_1"
}
node {
  name: "training/VarIsInitializedOp_268"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_26_1"
}
node {
  name: "training/VarIsInitializedOp_269"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_50_1"
}
node {
  name: "training/VarIsInitializedOp_270"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_24_1"
}
node {
  name: "training/VarIsInitializedOp_271"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_17_1"
}
node {
  name: "training/VarIsInitializedOp_272"
  op: "VarIsInitializedOp"
  input: "training/Adam/v_82_1"
}
node {
  name: "training/VarIsInitializedOp_273"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_46_1"
}
node {
  name: "training/VarIsInitializedOp_274"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_70_1"
}
node {
  name: "training/VarIsInitializedOp_275"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_50_1"
}
node {
  name: "training/VarIsInitializedOp_276"
  op: "VarIsInitializedOp"
  input: "training/Adam/m_74_1"
}
node {
  name: "training/VarIsInitializedOp_277"
  op: "VarIsInitializedOp"
  input: "training/Adam/vhat_31_1"
}
node {
  name: "training/init"
  op: "NoOp"
  input: "^Adam/beta_1/Assign"
  input: "^Adam/beta_2/Assign"
  input: "^Adam/decay/Assign"
  input: "^Adam/iterations/Assign"
  input: "^Adam/learning_rate/Assign"
  input: "^count/Assign"
  input: "^count_1/Assign"
  input: "^count_2/Assign"
  input: "^count_3/Assign"
  input: "^count_4/Assign"
  input: "^count_5/Assign"
  input: "^total/Assign"
  input: "^total_1/Assign"
  input: "^total_2/Assign"
  input: "^total_3/Assign"
  input: "^total_4/Assign"
  input: "^total_5/Assign"
  input: "^training/Adam/m_0_1/Assign"
  input: "^training/Adam/m_10_1/Assign"
  input: "^training/Adam/m_11_1/Assign"
  input: "^training/Adam/m_12_1/Assign"
  input: "^training/Adam/m_13_1/Assign"
  input: "^training/Adam/m_14_1/Assign"
  input: "^training/Adam/m_15_1/Assign"
  input: "^training/Adam/m_16_1/Assign"
  input: "^training/Adam/m_17_1/Assign"
  input: "^training/Adam/m_18_1/Assign"
  input: "^training/Adam/m_19_1/Assign"
  input: "^training/Adam/m_1_1/Assign"
  input: "^training/Adam/m_20_1/Assign"
  input: "^training/Adam/m_21_1/Assign"
  input: "^training/Adam/m_22_1/Assign"
  input: "^training/Adam/m_23_1/Assign"
  input: "^training/Adam/m_24_1/Assign"
  input: "^training/Adam/m_25_1/Assign"
  input: "^training/Adam/m_26_1/Assign"
  input: "^training/Adam/m_27_1/Assign"
  input: "^training/Adam/m_28_1/Assign"
  input: "^training/Adam/m_29_1/Assign"
  input: "^training/Adam/m_2_1/Assign"
  input: "^training/Adam/m_30_1/Assign"
  input: "^training/Adam/m_31_1/Assign"
  input: "^training/Adam/m_32_1/Assign"
  input: "^training/Adam/m_33_1/Assign"
  input: "^training/Adam/m_34_1/Assign"
  input: "^training/Adam/m_35_1/Assign"
  input: "^training/Adam/m_36_1/Assign"
  input: "^training/Adam/m_37_1/Assign"
  input: "^training/Adam/m_38_1/Assign"
  input: "^training/Adam/m_39_1/Assign"
  input: "^training/Adam/m_3_1/Assign"
  input: "^training/Adam/m_40_1/Assign"
  input: "^training/Adam/m_41_1/Assign"
  input: "^training/Adam/m_42_1/Assign"
  input: "^training/Adam/m_43_1/Assign"
  input: "^training/Adam/m_44_1/Assign"
  input: "^training/Adam/m_45_1/Assign"
  input: "^training/Adam/m_46_1/Assign"
  input: "^training/Adam/m_47_1/Assign"
  input: "^training/Adam/m_48_1/Assign"
  input: "^training/Adam/m_49_1/Assign"
  input: "^training/Adam/m_4_1/Assign"
  input: "^training/Adam/m_50_1/Assign"
  input: "^training/Adam/m_51_1/Assign"
  input: "^training/Adam/m_52_1/Assign"
  input: "^training/Adam/m_53_1/Assign"
  input: "^training/Adam/m_54_1/Assign"
  input: "^training/Adam/m_55_1/Assign"
  input: "^training/Adam/m_56_1/Assign"
  input: "^training/Adam/m_57_1/Assign"
  input: "^training/Adam/m_58_1/Assign"
  input: "^training/Adam/m_59_1/Assign"
  input: "^training/Adam/m_5_1/Assign"
  input: "^training/Adam/m_60_1/Assign"
  input: "^training/Adam/m_61_1/Assign"
  input: "^training/Adam/m_62_1/Assign"
  input: "^training/Adam/m_63_1/Assign"
  input: "^training/Adam/m_64_1/Assign"
  input: "^training/Adam/m_65_1/Assign"
  input: "^training/Adam/m_66_1/Assign"
  input: "^training/Adam/m_67_1/Assign"
  input: "^training/Adam/m_68_1/Assign"
  input: "^training/Adam/m_69_1/Assign"
  input: "^training/Adam/m_6_1/Assign"
  input: "^training/Adam/m_70_1/Assign"
  input: "^training/Adam/m_71_1/Assign"
  input: "^training/Adam/m_72_1/Assign"
  input: "^training/Adam/m_73_1/Assign"
  input: "^training/Adam/m_74_1/Assign"
  input: "^training/Adam/m_75_1/Assign"
  input: "^training/Adam/m_76_1/Assign"
  input: "^training/Adam/m_77_1/Assign"
  input: "^training/Adam/m_78_1/Assign"
  input: "^training/Adam/m_79_1/Assign"
  input: "^training/Adam/m_7_1/Assign"
  input: "^training/Adam/m_80_1/Assign"
  input: "^training/Adam/m_81_1/Assign"
  input: "^training/Adam/m_82_1/Assign"
  input: "^training/Adam/m_83_1/Assign"
  input: "^training/Adam/m_84_1/Assign"
  input: "^training/Adam/m_85_1/Assign"
  input: "^training/Adam/m_86_1/Assign"
  input: "^training/Adam/m_8_1/Assign"
  input: "^training/Adam/m_9_1/Assign"
  input: "^training/Adam/v_0_1/Assign"
  input: "^training/Adam/v_10_1/Assign"
  input: "^training/Adam/v_11_1/Assign"
  input: "^training/Adam/v_12_1/Assign"
  input: "^training/Adam/v_13_1/Assign"
  input: "^training/Adam/v_14_1/Assign"
  input: "^training/Adam/v_15_1/Assign"
  input: "^training/Adam/v_16_1/Assign"
  input: "^training/Adam/v_17_1/Assign"
  input: "^training/Adam/v_18_1/Assign"
  input: "^training/Adam/v_19_1/Assign"
  input: "^training/Adam/v_1_1/Assign"
  input: "^training/Adam/v_20_1/Assign"
  input: "^training/Adam/v_21_1/Assign"
  input: "^training/Adam/v_22_1/Assign"
  input: "^training/Adam/v_23_1/Assign"
  input: "^training/Adam/v_24_1/Assign"
  input: "^training/Adam/v_25_1/Assign"
  input: "^training/Adam/v_26_1/Assign"
  input: "^training/Adam/v_27_1/Assign"
  input: "^training/Adam/v_28_1/Assign"
  input: "^training/Adam/v_29_1/Assign"
  input: "^training/Adam/v_2_1/Assign"
  input: "^training/Adam/v_30_1/Assign"
  input: "^training/Adam/v_31_1/Assign"
  input: "^training/Adam/v_32_1/Assign"
  input: "^training/Adam/v_33_1/Assign"
  input: "^training/Adam/v_34_1/Assign"
  input: "^training/Adam/v_35_1/Assign"
  input: "^training/Adam/v_36_1/Assign"
  input: "^training/Adam/v_37_1/Assign"
  input: "^training/Adam/v_38_1/Assign"
  input: "^training/Adam/v_39_1/Assign"
  input: "^training/Adam/v_3_1/Assign"
  input: "^training/Adam/v_40_1/Assign"
  input: "^training/Adam/v_41_1/Assign"
  input: "^training/Adam/v_42_1/Assign"
  input: "^training/Adam/v_43_1/Assign"
  input: "^training/Adam/v_44_1/Assign"
  input: "^training/Adam/v_45_1/Assign"
  input: "^training/Adam/v_46_1/Assign"
  input: "^training/Adam/v_47_1/Assign"
  input: "^training/Adam/v_48_1/Assign"
  input: "^training/Adam/v_49_1/Assign"
  input: "^training/Adam/v_4_1/Assign"
  input: "^training/Adam/v_50_1/Assign"
  input: "^training/Adam/v_51_1/Assign"
  input: "^training/Adam/v_52_1/Assign"
  input: "^training/Adam/v_53_1/Assign"
  input: "^training/Adam/v_54_1/Assign"
  input: "^training/Adam/v_55_1/Assign"
  input: "^training/Adam/v_56_1/Assign"
  input: "^training/Adam/v_57_1/Assign"
  input: "^training/Adam/v_58_1/Assign"
  input: "^training/Adam/v_59_1/Assign"
  input: "^training/Adam/v_5_1/Assign"
  input: "^training/Adam/v_60_1/Assign"
  input: "^training/Adam/v_61_1/Assign"
  input: "^training/Adam/v_62_1/Assign"
  input: "^training/Adam/v_63_1/Assign"
  input: "^training/Adam/v_64_1/Assign"
  input: "^training/Adam/v_65_1/Assign"
  input: "^training/Adam/v_66_1/Assign"
  input: "^training/Adam/v_67_1/Assign"
  input: "^training/Adam/v_68_1/Assign"
  input: "^training/Adam/v_69_1/Assign"
  input: "^training/Adam/v_6_1/Assign"
  input: "^training/Adam/v_70_1/Assign"
  input: "^training/Adam/v_71_1/Assign"
  input: "^training/Adam/v_72_1/Assign"
  input: "^training/Adam/v_73_1/Assign"
  input: "^training/Adam/v_74_1/Assign"
  input: "^training/Adam/v_75_1/Assign"
  input: "^training/Adam/v_76_1/Assign"
  input: "^training/Adam/v_77_1/Assign"
  input: "^training/Adam/v_78_1/Assign"
  input: "^training/Adam/v_79_1/Assign"
  input: "^training/Adam/v_7_1/Assign"
  input: "^training/Adam/v_80_1/Assign"
  input: "^training/Adam/v_81_1/Assign"
  input: "^training/Adam/v_82_1/Assign"
  input: "^training/Adam/v_83_1/Assign"
  input: "^training/Adam/v_84_1/Assign"
  input: "^training/Adam/v_85_1/Assign"
  input: "^training/Adam/v_86_1/Assign"
  input: "^training/Adam/v_8_1/Assign"
  input: "^training/Adam/v_9_1/Assign"
  input: "^training/Adam/vhat_0_1/Assign"
  input: "^training/Adam/vhat_10_1/Assign"
  input: "^training/Adam/vhat_11_1/Assign"
  input: "^training/Adam/vhat_12_1/Assign"
  input: "^training/Adam/vhat_13_1/Assign"
  input: "^training/Adam/vhat_14_1/Assign"
  input: "^training/Adam/vhat_15_1/Assign"
  input: "^training/Adam/vhat_16_1/Assign"
  input: "^training/Adam/vhat_17_1/Assign"
  input: "^training/Adam/vhat_18_1/Assign"
  input: "^training/Adam/vhat_19_1/Assign"
  input: "^training/Adam/vhat_1_1/Assign"
  input: "^training/Adam/vhat_20_1/Assign"
  input: "^training/Adam/vhat_21_1/Assign"
  input: "^training/Adam/vhat_22_1/Assign"
  input: "^training/Adam/vhat_23_1/Assign"
  input: "^training/Adam/vhat_24_1/Assign"
  input: "^training/Adam/vhat_25_1/Assign"
  input: "^training/Adam/vhat_26_1/Assign"
  input: "^training/Adam/vhat_27_1/Assign"
  input: "^training/Adam/vhat_28_1/Assign"
  input: "^training/Adam/vhat_29_1/Assign"
  input: "^training/Adam/vhat_2_1/Assign"
  input: "^training/Adam/vhat_30_1/Assign"
  input: "^training/Adam/vhat_31_1/Assign"
  input: "^training/Adam/vhat_32_1/Assign"
  input: "^training/Adam/vhat_33_1/Assign"
  input: "^training/Adam/vhat_34_1/Assign"
  input: "^training/Adam/vhat_35_1/Assign"
  input: "^training/Adam/vhat_36_1/Assign"
  input: "^training/Adam/vhat_37_1/Assign"
  input: "^training/Adam/vhat_38_1/Assign"
  input: "^training/Adam/vhat_39_1/Assign"
  input: "^training/Adam/vhat_3_1/Assign"
  input: "^training/Adam/vhat_40_1/Assign"
  input: "^training/Adam/vhat_41_1/Assign"
  input: "^training/Adam/vhat_42_1/Assign"
  input: "^training/Adam/vhat_43_1/Assign"
  input: "^training/Adam/vhat_44_1/Assign"
  input: "^training/Adam/vhat_45_1/Assign"
  input: "^training/Adam/vhat_46_1/Assign"
  input: "^training/Adam/vhat_47_1/Assign"
  input: "^training/Adam/vhat_48_1/Assign"
  input: "^training/Adam/vhat_49_1/Assign"
  input: "^training/Adam/vhat_4_1/Assign"
  input: "^training/Adam/vhat_50_1/Assign"
  input: "^training/Adam/vhat_51_1/Assign"
  input: "^training/Adam/vhat_52_1/Assign"
  input: "^training/Adam/vhat_53_1/Assign"
  input: "^training/Adam/vhat_54_1/Assign"
  input: "^training/Adam/vhat_55_1/Assign"
  input: "^training/Adam/vhat_56_1/Assign"
  input: "^training/Adam/vhat_57_1/Assign"
  input: "^training/Adam/vhat_58_1/Assign"
  input: "^training/Adam/vhat_59_1/Assign"
  input: "^training/Adam/vhat_5_1/Assign"
  input: "^training/Adam/vhat_60_1/Assign"
  input: "^training/Adam/vhat_61_1/Assign"
  input: "^training/Adam/vhat_62_1/Assign"
  input: "^training/Adam/vhat_63_1/Assign"
  input: "^training/Adam/vhat_64_1/Assign"
  input: "^training/Adam/vhat_65_1/Assign"
  input: "^training/Adam/vhat_66_1/Assign"
  input: "^training/Adam/vhat_67_1/Assign"
  input: "^training/Adam/vhat_68_1/Assign"
  input: "^training/Adam/vhat_69_1/Assign"
  input: "^training/Adam/vhat_6_1/Assign"
  input: "^training/Adam/vhat_70_1/Assign"
  input: "^training/Adam/vhat_71_1/Assign"
  input: "^training/Adam/vhat_72_1/Assign"
  input: "^training/Adam/vhat_73_1/Assign"
  input: "^training/Adam/vhat_74_1/Assign"
  input: "^training/Adam/vhat_75_1/Assign"
  input: "^training/Adam/vhat_76_1/Assign"
  input: "^training/Adam/vhat_77_1/Assign"
  input: "^training/Adam/vhat_78_1/Assign"
  input: "^training/Adam/vhat_79_1/Assign"
  input: "^training/Adam/vhat_7_1/Assign"
  input: "^training/Adam/vhat_80_1/Assign"
  input: "^training/Adam/vhat_81_1/Assign"
  input: "^training/Adam/vhat_82_1/Assign"
  input: "^training/Adam/vhat_83_1/Assign"
  input: "^training/Adam/vhat_84_1/Assign"
  input: "^training/Adam/vhat_85_1/Assign"
  input: "^training/Adam/vhat_86_1/Assign"
  input: "^training/Adam/vhat_8_1/Assign"
  input: "^training/Adam/vhat_9_1/Assign"
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^Mean"
  input: "^conv1_bn/AssignSubVariableOp"
  input: "^conv1_bn/AssignSubVariableOp_1"
  input: "^conv_dw_10_bn/AssignSubVariableOp"
  input: "^conv_dw_10_bn/AssignSubVariableOp_1"
  input: "^conv_dw_11_bn/AssignSubVariableOp"
  input: "^conv_dw_11_bn/AssignSubVariableOp_1"
  input: "^conv_dw_12_bn/AssignSubVariableOp"
  input: "^conv_dw_12_bn/AssignSubVariableOp_1"
  input: "^conv_dw_13_bn/AssignSubVariableOp"
  input: "^conv_dw_13_bn/AssignSubVariableOp_1"
  input: "^conv_dw_1_bn/AssignSubVariableOp"
  input: "^conv_dw_1_bn/AssignSubVariableOp_1"
  input: "^conv_dw_2_bn/AssignSubVariableOp"
  input: "^conv_dw_2_bn/AssignSubVariableOp_1"
  input: "^conv_dw_3_bn/AssignSubVariableOp"
  input: "^conv_dw_3_bn/AssignSubVariableOp_1"
  input: "^conv_dw_4_bn/AssignSubVariableOp"
  input: "^conv_dw_4_bn/AssignSubVariableOp_1"
  input: "^conv_dw_5_bn/AssignSubVariableOp"
  input: "^conv_dw_5_bn/AssignSubVariableOp_1"
  input: "^conv_dw_6_bn/AssignSubVariableOp"
  input: "^conv_dw_6_bn/AssignSubVariableOp_1"
  input: "^conv_dw_7_bn/AssignSubVariableOp"
  input: "^conv_dw_7_bn/AssignSubVariableOp_1"
  input: "^conv_dw_8_bn/AssignSubVariableOp"
  input: "^conv_dw_8_bn/AssignSubVariableOp_1"
  input: "^conv_dw_9_bn/AssignSubVariableOp"
  input: "^conv_dw_9_bn/AssignSubVariableOp_1"
  input: "^conv_pw_10_bn/AssignSubVariableOp"
  input: "^conv_pw_10_bn/AssignSubVariableOp_1"
  input: "^conv_pw_11_bn/AssignSubVariableOp"
  input: "^conv_pw_11_bn/AssignSubVariableOp_1"
  input: "^conv_pw_12_bn/AssignSubVariableOp"
  input: "^conv_pw_12_bn/AssignSubVariableOp_1"
  input: "^conv_pw_13_bn/AssignSubVariableOp"
  input: "^conv_pw_13_bn/AssignSubVariableOp_1"
  input: "^conv_pw_1_bn/AssignSubVariableOp"
  input: "^conv_pw_1_bn/AssignSubVariableOp_1"
  input: "^conv_pw_2_bn/AssignSubVariableOp"
  input: "^conv_pw_2_bn/AssignSubVariableOp_1"
  input: "^conv_pw_3_bn/AssignSubVariableOp"
  input: "^conv_pw_3_bn/AssignSubVariableOp_1"
  input: "^conv_pw_4_bn/AssignSubVariableOp"
  input: "^conv_pw_4_bn/AssignSubVariableOp_1"
  input: "^conv_pw_5_bn/AssignSubVariableOp"
  input: "^conv_pw_5_bn/AssignSubVariableOp_1"
  input: "^conv_pw_6_bn/AssignSubVariableOp"
  input: "^conv_pw_6_bn/AssignSubVariableOp_1"
  input: "^conv_pw_7_bn/AssignSubVariableOp"
  input: "^conv_pw_7_bn/AssignSubVariableOp_1"
  input: "^conv_pw_8_bn/AssignSubVariableOp"
  input: "^conv_pw_8_bn/AssignSubVariableOp_1"
  input: "^conv_pw_9_bn/AssignSubVariableOp"
  input: "^conv_pw_9_bn/AssignSubVariableOp_1"
  input: "^loss/AssignAddVariableOp"
  input: "^loss/AssignAddVariableOp_1"
  input: "^loss/AssignAddVariableOp_2"
  input: "^loss/AssignAddVariableOp_3"
  input: "^loss/AssignAddVariableOp_4"
  input: "^loss/AssignAddVariableOp_5"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp"
  input: "^metrics/bin_out_angle_bin_error/AssignAddVariableOp_1"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp"
  input: "^metrics/cat_out_accuracy/AssignAddVariableOp_1"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp"
  input: "^metrics/reg_out_angle_mae/AssignAddVariableOp_1"
  input: "^training/Adam/AssignAddVariableOp"
  input: "^training/Adam/AssignVariableOp"
  input: "^training/Adam/AssignVariableOp_1"
  input: "^training/Adam/AssignVariableOp_10"
  input: "^training/Adam/AssignVariableOp_100"
  input: "^training/Adam/AssignVariableOp_101"
  input: "^training/Adam/AssignVariableOp_102"
  input: "^training/Adam/AssignVariableOp_103"
  input: "^training/Adam/AssignVariableOp_104"
  input: "^training/Adam/AssignVariableOp_105"
  input: "^training/Adam/AssignVariableOp_106"
  input: "^training/Adam/AssignVariableOp_107"
  input: "^training/Adam/AssignVariableOp_108"
  input: "^training/Adam/AssignVariableOp_109"
  input: "^training/Adam/AssignVariableOp_11"
  input: "^training/Adam/AssignVariableOp_110"
  input: "^training/Adam/AssignVariableOp_111"
  input: "^training/Adam/AssignVariableOp_112"
  input: "^training/Adam/AssignVariableOp_113"
  input: "^training/Adam/AssignVariableOp_114"
  input: "^training/Adam/AssignVariableOp_115"
  input: "^training/Adam/AssignVariableOp_116"
  input: "^training/Adam/AssignVariableOp_117"
  input: "^training/Adam/AssignVariableOp_118"
  input: "^training/Adam/AssignVariableOp_119"
  input: "^training/Adam/AssignVariableOp_12"
  input: "^training/Adam/AssignVariableOp_120"
  input: "^training/Adam/AssignVariableOp_121"
  input: "^training/Adam/AssignVariableOp_122"
  input: "^training/Adam/AssignVariableOp_123"
  input: "^training/Adam/AssignVariableOp_124"
  input: "^training/Adam/AssignVariableOp_125"
  input: "^training/Adam/AssignVariableOp_126"
  input: "^training/Adam/AssignVariableOp_127"
  input: "^training/Adam/AssignVariableOp_128"
  input: "^training/Adam/AssignVariableOp_129"
  input: "^training/Adam/AssignVariableOp_13"
  input: "^training/Adam/AssignVariableOp_130"
  input: "^training/Adam/AssignVariableOp_131"
  input: "^training/Adam/AssignVariableOp_132"
  input: "^training/Adam/AssignVariableOp_133"
  input: "^training/Adam/AssignVariableOp_134"
  input: "^training/Adam/AssignVariableOp_135"
  input: "^training/Adam/AssignVariableOp_136"
  input: "^training/Adam/AssignVariableOp_137"
  input: "^training/Adam/AssignVariableOp_138"
  input: "^training/Adam/AssignVariableOp_139"
  input: "^training/Adam/AssignVariableOp_14"
  input: "^training/Adam/AssignVariableOp_140"
  input: "^training/Adam/AssignVariableOp_141"
  input: "^training/Adam/AssignVariableOp_142"
  input: "^training/Adam/AssignVariableOp_143"
  input: "^training/Adam/AssignVariableOp_144"
  input: "^training/Adam/AssignVariableOp_145"
  input: "^training/Adam/AssignVariableOp_146"
  input: "^training/Adam/AssignVariableOp_147"
  input: "^training/Adam/AssignVariableOp_148"
  input: "^training/Adam/AssignVariableOp_149"
  input: "^training/Adam/AssignVariableOp_15"
  input: "^training/Adam/AssignVariableOp_150"
  input: "^training/Adam/AssignVariableOp_151"
  input: "^training/Adam/AssignVariableOp_152"
  input: "^training/Adam/AssignVariableOp_153"
  input: "^training/Adam/AssignVariableOp_154"
  input: "^training/Adam/AssignVariableOp_155"
  input: "^training/Adam/AssignVariableOp_156"
  input: "^training/Adam/AssignVariableOp_157"
  input: "^training/Adam/AssignVariableOp_158"
  input: "^training/Adam/AssignVariableOp_159"
  input: "^training/Adam/AssignVariableOp_16"
  input: "^training/Adam/AssignVariableOp_160"
  input: "^training/Adam/AssignVariableOp_161"
  input: "^training/Adam/AssignVariableOp_162"
  input: "^training/Adam/AssignVariableOp_163"
  input: "^training/Adam/AssignVariableOp_164"
  input: "^training/Adam/AssignVariableOp_165"
  input: "^training/Adam/AssignVariableOp_166"
  input: "^training/Adam/AssignVariableOp_167"
  input: "^training/Adam/AssignVariableOp_168"
  input: "^training/Adam/AssignVariableOp_169"
  input: "^training/Adam/AssignVariableOp_17"
  input: "^training/Adam/AssignVariableOp_170"
  input: "^training/Adam/AssignVariableOp_171"
  input: "^training/Adam/AssignVariableOp_172"
  input: "^training/Adam/AssignVariableOp_173"
  input: "^training/Adam/AssignVariableOp_174"
  input: "^training/Adam/AssignVariableOp_175"
  input: "^training/Adam/AssignVariableOp_176"
  input: "^training/Adam/AssignVariableOp_177"
  input: "^training/Adam/AssignVariableOp_178"
  input: "^training/Adam/AssignVariableOp_179"
  input: "^training/Adam/AssignVariableOp_18"
  input: "^training/Adam/AssignVariableOp_180"
  input: "^training/Adam/AssignVariableOp_181"
  input: "^training/Adam/AssignVariableOp_182"
  input: "^training/Adam/AssignVariableOp_183"
  input: "^training/Adam/AssignVariableOp_184"
  input: "^training/Adam/AssignVariableOp_185"
  input: "^training/Adam/AssignVariableOp_186"
  input: "^training/Adam/AssignVariableOp_187"
  input: "^training/Adam/AssignVariableOp_188"
  input: "^training/Adam/AssignVariableOp_189"
  input: "^training/Adam/AssignVariableOp_19"
  input: "^training/Adam/AssignVariableOp_190"
  input: "^training/Adam/AssignVariableOp_191"
  input: "^training/Adam/AssignVariableOp_192"
  input: "^training/Adam/AssignVariableOp_193"
  input: "^training/Adam/AssignVariableOp_194"
  input: "^training/Adam/AssignVariableOp_195"
  input: "^training/Adam/AssignVariableOp_196"
  input: "^training/Adam/AssignVariableOp_197"
  input: "^training/Adam/AssignVariableOp_198"
  input: "^training/Adam/AssignVariableOp_199"
  input: "^training/Adam/AssignVariableOp_2"
  input: "^training/Adam/AssignVariableOp_20"
  input: "^training/Adam/AssignVariableOp_200"
  input: "^training/Adam/AssignVariableOp_201"
  input: "^training/Adam/AssignVariableOp_202"
  input: "^training/Adam/AssignVariableOp_203"
  input: "^training/Adam/AssignVariableOp_204"
  input: "^training/Adam/AssignVariableOp_205"
  input: "^training/Adam/AssignVariableOp_206"
  input: "^training/Adam/AssignVariableOp_207"
  input: "^training/Adam/AssignVariableOp_208"
  input: "^training/Adam/AssignVariableOp_209"
  input: "^training/Adam/AssignVariableOp_21"
  input: "^training/Adam/AssignVariableOp_210"
  input: "^training/Adam/AssignVariableOp_211"
  input: "^training/Adam/AssignVariableOp_212"
  input: "^training/Adam/AssignVariableOp_213"
  input: "^training/Adam/AssignVariableOp_214"
  input: "^training/Adam/AssignVariableOp_215"
  input: "^training/Adam/AssignVariableOp_216"
  input: "^training/Adam/AssignVariableOp_217"
  input: "^training/Adam/AssignVariableOp_218"
  input: "^training/Adam/AssignVariableOp_219"
  input: "^training/Adam/AssignVariableOp_22"
  input: "^training/Adam/AssignVariableOp_220"
  input: "^training/Adam/AssignVariableOp_221"
  input: "^training/Adam/AssignVariableOp_222"
  input: "^training/Adam/AssignVariableOp_223"
  input: "^training/Adam/AssignVariableOp_224"
  input: "^training/Adam/AssignVariableOp_225"
  input: "^training/Adam/AssignVariableOp_226"
  input: "^training/Adam/AssignVariableOp_227"
  input: "^training/Adam/AssignVariableOp_228"
  input: "^training/Adam/AssignVariableOp_229"
  input: "^training/Adam/AssignVariableOp_23"
  input: "^training/Adam/AssignVariableOp_230"
  input: "^training/Adam/AssignVariableOp_231"
  input: "^training/Adam/AssignVariableOp_232"
  input: "^training/Adam/AssignVariableOp_233"
  input: "^training/Adam/AssignVariableOp_234"
  input: "^training/Adam/AssignVariableOp_235"
  input: "^training/Adam/AssignVariableOp_236"
  input: "^training/Adam/AssignVariableOp_237"
  input: "^training/Adam/AssignVariableOp_238"
  input: "^training/Adam/AssignVariableOp_239"
  input: "^training/Adam/AssignVariableOp_24"
  input: "^training/Adam/AssignVariableOp_240"
  input: "^training/Adam/AssignVariableOp_241"
  input: "^training/Adam/AssignVariableOp_242"
  input: "^training/Adam/AssignVariableOp_243"
  input: "^training/Adam/AssignVariableOp_244"
  input: "^training/Adam/AssignVariableOp_245"
  input: "^training/Adam/AssignVariableOp_246"
  input: "^training/Adam/AssignVariableOp_247"
  input: "^training/Adam/AssignVariableOp_248"
  input: "^training/Adam/AssignVariableOp_249"
  input: "^training/Adam/AssignVariableOp_25"
  input: "^training/Adam/AssignVariableOp_250"
  input: "^training/Adam/AssignVariableOp_251"
  input: "^training/Adam/AssignVariableOp_252"
  input: "^training/Adam/AssignVariableOp_253"
  input: "^training/Adam/AssignVariableOp_254"
  input: "^training/Adam/AssignVariableOp_255"
  input: "^training/Adam/AssignVariableOp_256"
  input: "^training/Adam/AssignVariableOp_257"
  input: "^training/Adam/AssignVariableOp_258"
  input: "^training/Adam/AssignVariableOp_259"
  input: "^training/Adam/AssignVariableOp_26"
  input: "^training/Adam/AssignVariableOp_260"
  input: "^training/Adam/AssignVariableOp_27"
  input: "^training/Adam/AssignVariableOp_28"
  input: "^training/Adam/AssignVariableOp_29"
  input: "^training/Adam/AssignVariableOp_3"
  input: "^training/Adam/AssignVariableOp_30"
  input: "^training/Adam/AssignVariableOp_31"
  input: "^training/Adam/AssignVariableOp_32"
  input: "^training/Adam/AssignVariableOp_33"
  input: "^training/Adam/AssignVariableOp_34"
  input: "^training/Adam/AssignVariableOp_35"
  input: "^training/Adam/AssignVariableOp_36"
  input: "^training/Adam/AssignVariableOp_37"
  input: "^training/Adam/AssignVariableOp_38"
  input: "^training/Adam/AssignVariableOp_39"
  input: "^training/Adam/AssignVariableOp_4"
  input: "^training/Adam/AssignVariableOp_40"
  input: "^training/Adam/AssignVariableOp_41"
  input: "^training/Adam/AssignVariableOp_42"
  input: "^training/Adam/AssignVariableOp_43"
  input: "^training/Adam/AssignVariableOp_44"
  input: "^training/Adam/AssignVariableOp_45"
  input: "^training/Adam/AssignVariableOp_46"
  input: "^training/Adam/AssignVariableOp_47"
  input: "^training/Adam/AssignVariableOp_48"
  input: "^training/Adam/AssignVariableOp_49"
  input: "^training/Adam/AssignVariableOp_5"
  input: "^training/Adam/AssignVariableOp_50"
  input: "^training/Adam/AssignVariableOp_51"
  input: "^training/Adam/AssignVariableOp_52"
  input: "^training/Adam/AssignVariableOp_53"
  input: "^training/Adam/AssignVariableOp_54"
  input: "^training/Adam/AssignVariableOp_55"
  input: "^training/Adam/AssignVariableOp_56"
  input: "^training/Adam/AssignVariableOp_57"
  input: "^training/Adam/AssignVariableOp_58"
  input: "^training/Adam/AssignVariableOp_59"
  input: "^training/Adam/AssignVariableOp_6"
  input: "^training/Adam/AssignVariableOp_60"
  input: "^training/Adam/AssignVariableOp_61"
  input: "^training/Adam/AssignVariableOp_62"
  input: "^training/Adam/AssignVariableOp_63"
  input: "^training/Adam/AssignVariableOp_64"
  input: "^training/Adam/AssignVariableOp_65"
  input: "^training/Adam/AssignVariableOp_66"
  input: "^training/Adam/AssignVariableOp_67"
  input: "^training/Adam/AssignVariableOp_68"
  input: "^training/Adam/AssignVariableOp_69"
  input: "^training/Adam/AssignVariableOp_7"
  input: "^training/Adam/AssignVariableOp_70"
  input: "^training/Adam/AssignVariableOp_71"
  input: "^training/Adam/AssignVariableOp_72"
  input: "^training/Adam/AssignVariableOp_73"
  input: "^training/Adam/AssignVariableOp_74"
  input: "^training/Adam/AssignVariableOp_75"
  input: "^training/Adam/AssignVariableOp_76"
  input: "^training/Adam/AssignVariableOp_77"
  input: "^training/Adam/AssignVariableOp_78"
  input: "^training/Adam/AssignVariableOp_79"
  input: "^training/Adam/AssignVariableOp_8"
  input: "^training/Adam/AssignVariableOp_80"
  input: "^training/Adam/AssignVariableOp_81"
  input: "^training/Adam/AssignVariableOp_82"
  input: "^training/Adam/AssignVariableOp_83"
  input: "^training/Adam/AssignVariableOp_84"
  input: "^training/Adam/AssignVariableOp_85"
  input: "^training/Adam/AssignVariableOp_86"
  input: "^training/Adam/AssignVariableOp_87"
  input: "^training/Adam/AssignVariableOp_88"
  input: "^training/Adam/AssignVariableOp_89"
  input: "^training/Adam/AssignVariableOp_9"
  input: "^training/Adam/AssignVariableOp_90"
  input: "^training/Adam/AssignVariableOp_91"
  input: "^training/Adam/AssignVariableOp_92"
  input: "^training/Adam/AssignVariableOp_93"
  input: "^training/Adam/AssignVariableOp_94"
  input: "^training/Adam/AssignVariableOp_95"
  input: "^training/Adam/AssignVariableOp_96"
  input: "^training/Adam/AssignVariableOp_97"
  input: "^training/Adam/AssignVariableOp_98"
  input: "^training/Adam/AssignVariableOp_99"
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training/Adam/m_0_1"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "training/Adam/m_0_1"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "training/Adam/m_1_1"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "training/Adam/m_1_1"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training/Adam/m_2_1"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "training/Adam/m_2_1"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training/Adam/m_3_1"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "training/Adam/m_3_1"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "training/Adam/m_4_1"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "training/Adam/m_4_1"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training/Adam/m_5_1"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "training/Adam/m_5_1"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training/Adam/m_6_1"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "training/Adam/m_6_1"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "training/Adam/m_7_1"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "training/Adam/m_7_1"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "training/Adam/m_8_1"
  input: "Placeholder_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "training/Adam/m_8_1"
  input: "^AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "training/Adam/m_9_1"
  input: "Placeholder_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "training/Adam/m_9_1"
  input: "^AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "training/Adam/m_10_1"
  input: "Placeholder_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "training/Adam/m_10_1"
  input: "^AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "training/Adam/m_11_1"
  input: "Placeholder_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "training/Adam/m_11_1"
  input: "^AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "training/Adam/m_12_1"
  input: "Placeholder_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "training/Adam/m_12_1"
  input: "^AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "training/Adam/m_13_1"
  input: "Placeholder_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "training/Adam/m_13_1"
  input: "^AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "training/Adam/m_14_1"
  input: "Placeholder_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "training/Adam/m_14_1"
  input: "^AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "training/Adam/m_15_1"
  input: "Placeholder_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "training/Adam/m_15_1"
  input: "^AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "training/Adam/m_16_1"
  input: "Placeholder_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "training/Adam/m_16_1"
  input: "^AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "training/Adam/m_17_1"
  input: "Placeholder_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "training/Adam/m_17_1"
  input: "^AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "training/Adam/m_18_1"
  input: "Placeholder_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "training/Adam/m_18_1"
  input: "^AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "training/Adam/m_19_1"
  input: "Placeholder_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "training/Adam/m_19_1"
  input: "^AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "training/Adam/m_20_1"
  input: "Placeholder_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "training/Adam/m_20_1"
  input: "^AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "training/Adam/m_21_1"
  input: "Placeholder_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "training/Adam/m_21_1"
  input: "^AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "training/Adam/m_22_1"
  input: "Placeholder_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "training/Adam/m_22_1"
  input: "^AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "training/Adam/m_23_1"
  input: "Placeholder_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "training/Adam/m_23_1"
  input: "^AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "training/Adam/m_24_1"
  input: "Placeholder_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "training/Adam/m_24_1"
  input: "^AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "training/Adam/m_25_1"
  input: "Placeholder_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "training/Adam/m_25_1"
  input: "^AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "training/Adam/m_26_1"
  input: "Placeholder_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "training/Adam/m_26_1"
  input: "^AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "training/Adam/m_27_1"
  input: "Placeholder_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "training/Adam/m_27_1"
  input: "^AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "training/Adam/m_28_1"
  input: "Placeholder_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "training/Adam/m_28_1"
  input: "^AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "training/Adam/m_29_1"
  input: "Placeholder_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "training/Adam/m_29_1"
  input: "^AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "training/Adam/m_30_1"
  input: "Placeholder_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "training/Adam/m_30_1"
  input: "^AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "training/Adam/m_31_1"
  input: "Placeholder_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "training/Adam/m_31_1"
  input: "^AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "training/Adam/m_32_1"
  input: "Placeholder_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "training/Adam/m_32_1"
  input: "^AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "training/Adam/m_33_1"
  input: "Placeholder_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "training/Adam/m_33_1"
  input: "^AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "training/Adam/m_34_1"
  input: "Placeholder_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "training/Adam/m_34_1"
  input: "^AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "training/Adam/m_35_1"
  input: "Placeholder_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "training/Adam/m_35_1"
  input: "^AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "training/Adam/m_36_1"
  input: "Placeholder_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "training/Adam/m_36_1"
  input: "^AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "training/Adam/m_37_1"
  input: "Placeholder_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "training/Adam/m_37_1"
  input: "^AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "training/Adam/m_38_1"
  input: "Placeholder_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "training/Adam/m_38_1"
  input: "^AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "training/Adam/m_39_1"
  input: "Placeholder_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "training/Adam/m_39_1"
  input: "^AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "training/Adam/m_40_1"
  input: "Placeholder_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "training/Adam/m_40_1"
  input: "^AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "training/Adam/m_41_1"
  input: "Placeholder_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "training/Adam/m_41_1"
  input: "^AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "training/Adam/m_42_1"
  input: "Placeholder_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "training/Adam/m_42_1"
  input: "^AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "training/Adam/m_43_1"
  input: "Placeholder_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "training/Adam/m_43_1"
  input: "^AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "training/Adam/m_44_1"
  input: "Placeholder_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "training/Adam/m_44_1"
  input: "^AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "training/Adam/m_45_1"
  input: "Placeholder_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "training/Adam/m_45_1"
  input: "^AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "training/Adam/m_46_1"
  input: "Placeholder_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "training/Adam/m_46_1"
  input: "^AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "training/Adam/m_47_1"
  input: "Placeholder_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "training/Adam/m_47_1"
  input: "^AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "training/Adam/m_48_1"
  input: "Placeholder_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "training/Adam/m_48_1"
  input: "^AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "training/Adam/m_49_1"
  input: "Placeholder_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "training/Adam/m_49_1"
  input: "^AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "training/Adam/m_50_1"
  input: "Placeholder_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "training/Adam/m_50_1"
  input: "^AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "training/Adam/m_51_1"
  input: "Placeholder_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "training/Adam/m_51_1"
  input: "^AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "training/Adam/m_52_1"
  input: "Placeholder_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "training/Adam/m_52_1"
  input: "^AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "training/Adam/m_53_1"
  input: "Placeholder_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "training/Adam/m_53_1"
  input: "^AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "training/Adam/m_54_1"
  input: "Placeholder_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "training/Adam/m_54_1"
  input: "^AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "training/Adam/m_55_1"
  input: "Placeholder_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "training/Adam/m_55_1"
  input: "^AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "training/Adam/m_56_1"
  input: "Placeholder_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "training/Adam/m_56_1"
  input: "^AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_199"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "training/Adam/m_57_1"
  input: "Placeholder_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "training/Adam/m_57_1"
  input: "^AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_200"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "training/Adam/m_58_1"
  input: "Placeholder_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "training/Adam/m_58_1"
  input: "^AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_201"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "training/Adam/m_59_1"
  input: "Placeholder_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "training/Adam/m_59_1"
  input: "^AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_202"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "training/Adam/m_60_1"
  input: "Placeholder_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "training/Adam/m_60_1"
  input: "^AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_203"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "training/Adam/m_61_1"
  input: "Placeholder_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "training/Adam/m_61_1"
  input: "^AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_204"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "training/Adam/m_62_1"
  input: "Placeholder_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "training/Adam/m_62_1"
  input: "^AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_205"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "training/Adam/m_63_1"
  input: "Placeholder_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "training/Adam/m_63_1"
  input: "^AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_206"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "training/Adam/m_64_1"
  input: "Placeholder_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "training/Adam/m_64_1"
  input: "^AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_207"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "training/Adam/m_65_1"
  input: "Placeholder_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "training/Adam/m_65_1"
  input: "^AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_208"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "training/Adam/m_66_1"
  input: "Placeholder_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "training/Adam/m_66_1"
  input: "^AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_209"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "training/Adam/m_67_1"
  input: "Placeholder_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "training/Adam/m_67_1"
  input: "^AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_210"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "training/Adam/m_68_1"
  input: "Placeholder_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "training/Adam/m_68_1"
  input: "^AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_211"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "training/Adam/m_69_1"
  input: "Placeholder_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "training/Adam/m_69_1"
  input: "^AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_212"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "training/Adam/m_70_1"
  input: "Placeholder_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "training/Adam/m_70_1"
  input: "^AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_213"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "training/Adam/m_71_1"
  input: "Placeholder_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "training/Adam/m_71_1"
  input: "^AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_214"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "training/Adam/m_72_1"
  input: "Placeholder_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "training/Adam/m_72_1"
  input: "^AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_215"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "training/Adam/m_73_1"
  input: "Placeholder_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "training/Adam/m_73_1"
  input: "^AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_216"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "training/Adam/m_74_1"
  input: "Placeholder_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "training/Adam/m_74_1"
  input: "^AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_217"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "training/Adam/m_75_1"
  input: "Placeholder_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "training/Adam/m_75_1"
  input: "^AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_218"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "training/Adam/m_76_1"
  input: "Placeholder_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "training/Adam/m_76_1"
  input: "^AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_219"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "training/Adam/m_77_1"
  input: "Placeholder_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "training/Adam/m_77_1"
  input: "^AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_220"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "training/Adam/m_78_1"
  input: "Placeholder_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "training/Adam/m_78_1"
  input: "^AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_221"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "training/Adam/m_79_1"
  input: "Placeholder_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "training/Adam/m_79_1"
  input: "^AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_222"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "training/Adam/m_80_1"
  input: "Placeholder_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "training/Adam/m_80_1"
  input: "^AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_223"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "training/Adam/m_81_1"
  input: "Placeholder_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "training/Adam/m_81_1"
  input: "^AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_224"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "training/Adam/m_82_1"
  input: "Placeholder_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "training/Adam/m_82_1"
  input: "^AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_225"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "training/Adam/m_83_1"
  input: "Placeholder_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "training/Adam/m_83_1"
  input: "^AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_226"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "training/Adam/m_84_1"
  input: "Placeholder_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "training/Adam/m_84_1"
  input: "^AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_227"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "training/Adam/m_85_1"
  input: "Placeholder_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "training/Adam/m_85_1"
  input: "^AssignVariableOp_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_228"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "training/Adam/m_86_1"
  input: "Placeholder_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "training/Adam/m_86_1"
  input: "^AssignVariableOp_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_229"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "training/Adam/v_0_1"
  input: "Placeholder_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "training/Adam/v_0_1"
  input: "^AssignVariableOp_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_230"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "training/Adam/v_1_1"
  input: "Placeholder_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "training/Adam/v_1_1"
  input: "^AssignVariableOp_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_231"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "training/Adam/v_2_1"
  input: "Placeholder_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "training/Adam/v_2_1"
  input: "^AssignVariableOp_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_232"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "training/Adam/v_3_1"
  input: "Placeholder_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "training/Adam/v_3_1"
  input: "^AssignVariableOp_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_233"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "training/Adam/v_4_1"
  input: "Placeholder_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "training/Adam/v_4_1"
  input: "^AssignVariableOp_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_234"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "training/Adam/v_5_1"
  input: "Placeholder_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "training/Adam/v_5_1"
  input: "^AssignVariableOp_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_235"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "training/Adam/v_6_1"
  input: "Placeholder_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "training/Adam/v_6_1"
  input: "^AssignVariableOp_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_236"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "training/Adam/v_7_1"
  input: "Placeholder_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "training/Adam/v_7_1"
  input: "^AssignVariableOp_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_237"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "training/Adam/v_8_1"
  input: "Placeholder_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "training/Adam/v_8_1"
  input: "^AssignVariableOp_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_238"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "training/Adam/v_9_1"
  input: "Placeholder_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "training/Adam/v_9_1"
  input: "^AssignVariableOp_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_239"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "training/Adam/v_10_1"
  input: "Placeholder_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "training/Adam/v_10_1"
  input: "^AssignVariableOp_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_240"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "training/Adam/v_11_1"
  input: "Placeholder_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "training/Adam/v_11_1"
  input: "^AssignVariableOp_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_241"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "training/Adam/v_12_1"
  input: "Placeholder_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "training/Adam/v_12_1"
  input: "^AssignVariableOp_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_242"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "training/Adam/v_13_1"
  input: "Placeholder_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "training/Adam/v_13_1"
  input: "^AssignVariableOp_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_243"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "training/Adam/v_14_1"
  input: "Placeholder_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "training/Adam/v_14_1"
  input: "^AssignVariableOp_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_244"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "training/Adam/v_15_1"
  input: "Placeholder_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "training/Adam/v_15_1"
  input: "^AssignVariableOp_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_245"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "training/Adam/v_16_1"
  input: "Placeholder_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "training/Adam/v_16_1"
  input: "^AssignVariableOp_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_246"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "training/Adam/v_17_1"
  input: "Placeholder_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "training/Adam/v_17_1"
  input: "^AssignVariableOp_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_247"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "training/Adam/v_18_1"
  input: "Placeholder_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "training/Adam/v_18_1"
  input: "^AssignVariableOp_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_248"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "training/Adam/v_19_1"
  input: "Placeholder_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "training/Adam/v_19_1"
  input: "^AssignVariableOp_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_249"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "training/Adam/v_20_1"
  input: "Placeholder_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "training/Adam/v_20_1"
  input: "^AssignVariableOp_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_250"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "training/Adam/v_21_1"
  input: "Placeholder_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "training/Adam/v_21_1"
  input: "^AssignVariableOp_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_251"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "training/Adam/v_22_1"
  input: "Placeholder_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "training/Adam/v_22_1"
  input: "^AssignVariableOp_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_252"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "training/Adam/v_23_1"
  input: "Placeholder_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "training/Adam/v_23_1"
  input: "^AssignVariableOp_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_253"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "training/Adam/v_24_1"
  input: "Placeholder_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "training/Adam/v_24_1"
  input: "^AssignVariableOp_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_254"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "training/Adam/v_25_1"
  input: "Placeholder_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "training/Adam/v_25_1"
  input: "^AssignVariableOp_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_255"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "training/Adam/v_26_1"
  input: "Placeholder_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "training/Adam/v_26_1"
  input: "^AssignVariableOp_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_256"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "training/Adam/v_27_1"
  input: "Placeholder_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "training/Adam/v_27_1"
  input: "^AssignVariableOp_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_257"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "training/Adam/v_28_1"
  input: "Placeholder_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "training/Adam/v_28_1"
  input: "^AssignVariableOp_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_258"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "training/Adam/v_29_1"
  input: "Placeholder_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "training/Adam/v_29_1"
  input: "^AssignVariableOp_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_259"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "training/Adam/v_30_1"
  input: "Placeholder_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "training/Adam/v_30_1"
  input: "^AssignVariableOp_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_260"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "training/Adam/v_31_1"
  input: "Placeholder_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "training/Adam/v_31_1"
  input: "^AssignVariableOp_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_261"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "training/Adam/v_32_1"
  input: "Placeholder_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "training/Adam/v_32_1"
  input: "^AssignVariableOp_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_262"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "training/Adam/v_33_1"
  input: "Placeholder_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_262"
  op: "ReadVariableOp"
  input: "training/Adam/v_33_1"
  input: "^AssignVariableOp_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_263"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "training/Adam/v_34_1"
  input: "Placeholder_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_263"
  op: "ReadVariableOp"
  input: "training/Adam/v_34_1"
  input: "^AssignVariableOp_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_264"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_264"
  op: "AssignVariableOp"
  input: "training/Adam/v_35_1"
  input: "Placeholder_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_264"
  op: "ReadVariableOp"
  input: "training/Adam/v_35_1"
  input: "^AssignVariableOp_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_265"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_265"
  op: "AssignVariableOp"
  input: "training/Adam/v_36_1"
  input: "Placeholder_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_265"
  op: "ReadVariableOp"
  input: "training/Adam/v_36_1"
  input: "^AssignVariableOp_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_266"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_266"
  op: "AssignVariableOp"
  input: "training/Adam/v_37_1"
  input: "Placeholder_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_266"
  op: "ReadVariableOp"
  input: "training/Adam/v_37_1"
  input: "^AssignVariableOp_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_267"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_267"
  op: "AssignVariableOp"
  input: "training/Adam/v_38_1"
  input: "Placeholder_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_267"
  op: "ReadVariableOp"
  input: "training/Adam/v_38_1"
  input: "^AssignVariableOp_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_268"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_268"
  op: "AssignVariableOp"
  input: "training/Adam/v_39_1"
  input: "Placeholder_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_268"
  op: "ReadVariableOp"
  input: "training/Adam/v_39_1"
  input: "^AssignVariableOp_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_269"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_269"
  op: "AssignVariableOp"
  input: "training/Adam/v_40_1"
  input: "Placeholder_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_269"
  op: "ReadVariableOp"
  input: "training/Adam/v_40_1"
  input: "^AssignVariableOp_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_270"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_270"
  op: "AssignVariableOp"
  input: "training/Adam/v_41_1"
  input: "Placeholder_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_270"
  op: "ReadVariableOp"
  input: "training/Adam/v_41_1"
  input: "^AssignVariableOp_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_271"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_271"
  op: "AssignVariableOp"
  input: "training/Adam/v_42_1"
  input: "Placeholder_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_271"
  op: "ReadVariableOp"
  input: "training/Adam/v_42_1"
  input: "^AssignVariableOp_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_272"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_272"
  op: "AssignVariableOp"
  input: "training/Adam/v_43_1"
  input: "Placeholder_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_272"
  op: "ReadVariableOp"
  input: "training/Adam/v_43_1"
  input: "^AssignVariableOp_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_273"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_273"
  op: "AssignVariableOp"
  input: "training/Adam/v_44_1"
  input: "Placeholder_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_273"
  op: "ReadVariableOp"
  input: "training/Adam/v_44_1"
  input: "^AssignVariableOp_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_274"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_274"
  op: "AssignVariableOp"
  input: "training/Adam/v_45_1"
  input: "Placeholder_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_274"
  op: "ReadVariableOp"
  input: "training/Adam/v_45_1"
  input: "^AssignVariableOp_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_275"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_275"
  op: "AssignVariableOp"
  input: "training/Adam/v_46_1"
  input: "Placeholder_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_275"
  op: "ReadVariableOp"
  input: "training/Adam/v_46_1"
  input: "^AssignVariableOp_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_276"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_276"
  op: "AssignVariableOp"
  input: "training/Adam/v_47_1"
  input: "Placeholder_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_276"
  op: "ReadVariableOp"
  input: "training/Adam/v_47_1"
  input: "^AssignVariableOp_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_277"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_277"
  op: "AssignVariableOp"
  input: "training/Adam/v_48_1"
  input: "Placeholder_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_277"
  op: "ReadVariableOp"
  input: "training/Adam/v_48_1"
  input: "^AssignVariableOp_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_278"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_278"
  op: "AssignVariableOp"
  input: "training/Adam/v_49_1"
  input: "Placeholder_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_278"
  op: "ReadVariableOp"
  input: "training/Adam/v_49_1"
  input: "^AssignVariableOp_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_279"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_279"
  op: "AssignVariableOp"
  input: "training/Adam/v_50_1"
  input: "Placeholder_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_279"
  op: "ReadVariableOp"
  input: "training/Adam/v_50_1"
  input: "^AssignVariableOp_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_280"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_280"
  op: "AssignVariableOp"
  input: "training/Adam/v_51_1"
  input: "Placeholder_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_280"
  op: "ReadVariableOp"
  input: "training/Adam/v_51_1"
  input: "^AssignVariableOp_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_281"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_281"
  op: "AssignVariableOp"
  input: "training/Adam/v_52_1"
  input: "Placeholder_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_281"
  op: "ReadVariableOp"
  input: "training/Adam/v_52_1"
  input: "^AssignVariableOp_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_282"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_282"
  op: "AssignVariableOp"
  input: "training/Adam/v_53_1"
  input: "Placeholder_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_282"
  op: "ReadVariableOp"
  input: "training/Adam/v_53_1"
  input: "^AssignVariableOp_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_283"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_283"
  op: "AssignVariableOp"
  input: "training/Adam/v_54_1"
  input: "Placeholder_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_283"
  op: "ReadVariableOp"
  input: "training/Adam/v_54_1"
  input: "^AssignVariableOp_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_284"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_284"
  op: "AssignVariableOp"
  input: "training/Adam/v_55_1"
  input: "Placeholder_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_284"
  op: "ReadVariableOp"
  input: "training/Adam/v_55_1"
  input: "^AssignVariableOp_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_285"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_285"
  op: "AssignVariableOp"
  input: "training/Adam/v_56_1"
  input: "Placeholder_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_285"
  op: "ReadVariableOp"
  input: "training/Adam/v_56_1"
  input: "^AssignVariableOp_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_286"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_286"
  op: "AssignVariableOp"
  input: "training/Adam/v_57_1"
  input: "Placeholder_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_286"
  op: "ReadVariableOp"
  input: "training/Adam/v_57_1"
  input: "^AssignVariableOp_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_287"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_287"
  op: "AssignVariableOp"
  input: "training/Adam/v_58_1"
  input: "Placeholder_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_287"
  op: "ReadVariableOp"
  input: "training/Adam/v_58_1"
  input: "^AssignVariableOp_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_288"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_288"
  op: "AssignVariableOp"
  input: "training/Adam/v_59_1"
  input: "Placeholder_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_288"
  op: "ReadVariableOp"
  input: "training/Adam/v_59_1"
  input: "^AssignVariableOp_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_289"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_289"
  op: "AssignVariableOp"
  input: "training/Adam/v_60_1"
  input: "Placeholder_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_289"
  op: "ReadVariableOp"
  input: "training/Adam/v_60_1"
  input: "^AssignVariableOp_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_290"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_290"
  op: "AssignVariableOp"
  input: "training/Adam/v_61_1"
  input: "Placeholder_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_290"
  op: "ReadVariableOp"
  input: "training/Adam/v_61_1"
  input: "^AssignVariableOp_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_291"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_291"
  op: "AssignVariableOp"
  input: "training/Adam/v_62_1"
  input: "Placeholder_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_291"
  op: "ReadVariableOp"
  input: "training/Adam/v_62_1"
  input: "^AssignVariableOp_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_292"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_292"
  op: "AssignVariableOp"
  input: "training/Adam/v_63_1"
  input: "Placeholder_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_292"
  op: "ReadVariableOp"
  input: "training/Adam/v_63_1"
  input: "^AssignVariableOp_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_293"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_293"
  op: "AssignVariableOp"
  input: "training/Adam/v_64_1"
  input: "Placeholder_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_293"
  op: "ReadVariableOp"
  input: "training/Adam/v_64_1"
  input: "^AssignVariableOp_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_294"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_294"
  op: "AssignVariableOp"
  input: "training/Adam/v_65_1"
  input: "Placeholder_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_294"
  op: "ReadVariableOp"
  input: "training/Adam/v_65_1"
  input: "^AssignVariableOp_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_295"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_295"
  op: "AssignVariableOp"
  input: "training/Adam/v_66_1"
  input: "Placeholder_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_295"
  op: "ReadVariableOp"
  input: "training/Adam/v_66_1"
  input: "^AssignVariableOp_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_296"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_296"
  op: "AssignVariableOp"
  input: "training/Adam/v_67_1"
  input: "Placeholder_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_296"
  op: "ReadVariableOp"
  input: "training/Adam/v_67_1"
  input: "^AssignVariableOp_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_297"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_297"
  op: "AssignVariableOp"
  input: "training/Adam/v_68_1"
  input: "Placeholder_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_297"
  op: "ReadVariableOp"
  input: "training/Adam/v_68_1"
  input: "^AssignVariableOp_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_298"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_298"
  op: "AssignVariableOp"
  input: "training/Adam/v_69_1"
  input: "Placeholder_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_298"
  op: "ReadVariableOp"
  input: "training/Adam/v_69_1"
  input: "^AssignVariableOp_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_299"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_299"
  op: "AssignVariableOp"
  input: "training/Adam/v_70_1"
  input: "Placeholder_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_299"
  op: "ReadVariableOp"
  input: "training/Adam/v_70_1"
  input: "^AssignVariableOp_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_300"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_300"
  op: "AssignVariableOp"
  input: "training/Adam/v_71_1"
  input: "Placeholder_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_300"
  op: "ReadVariableOp"
  input: "training/Adam/v_71_1"
  input: "^AssignVariableOp_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_301"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_301"
  op: "AssignVariableOp"
  input: "training/Adam/v_72_1"
  input: "Placeholder_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_301"
  op: "ReadVariableOp"
  input: "training/Adam/v_72_1"
  input: "^AssignVariableOp_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_302"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_302"
  op: "AssignVariableOp"
  input: "training/Adam/v_73_1"
  input: "Placeholder_302"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_302"
  op: "ReadVariableOp"
  input: "training/Adam/v_73_1"
  input: "^AssignVariableOp_302"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_303"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_303"
  op: "AssignVariableOp"
  input: "training/Adam/v_74_1"
  input: "Placeholder_303"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_303"
  op: "ReadVariableOp"
  input: "training/Adam/v_74_1"
  input: "^AssignVariableOp_303"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_304"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_304"
  op: "AssignVariableOp"
  input: "training/Adam/v_75_1"
  input: "Placeholder_304"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_304"
  op: "ReadVariableOp"
  input: "training/Adam/v_75_1"
  input: "^AssignVariableOp_304"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_305"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_305"
  op: "AssignVariableOp"
  input: "training/Adam/v_76_1"
  input: "Placeholder_305"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_305"
  op: "ReadVariableOp"
  input: "training/Adam/v_76_1"
  input: "^AssignVariableOp_305"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_306"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_306"
  op: "AssignVariableOp"
  input: "training/Adam/v_77_1"
  input: "Placeholder_306"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_306"
  op: "ReadVariableOp"
  input: "training/Adam/v_77_1"
  input: "^AssignVariableOp_306"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_307"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_307"
  op: "AssignVariableOp"
  input: "training/Adam/v_78_1"
  input: "Placeholder_307"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_307"
  op: "ReadVariableOp"
  input: "training/Adam/v_78_1"
  input: "^AssignVariableOp_307"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_308"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_308"
  op: "AssignVariableOp"
  input: "training/Adam/v_79_1"
  input: "Placeholder_308"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_308"
  op: "ReadVariableOp"
  input: "training/Adam/v_79_1"
  input: "^AssignVariableOp_308"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_309"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_309"
  op: "AssignVariableOp"
  input: "training/Adam/v_80_1"
  input: "Placeholder_309"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_309"
  op: "ReadVariableOp"
  input: "training/Adam/v_80_1"
  input: "^AssignVariableOp_309"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_310"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_310"
  op: "AssignVariableOp"
  input: "training/Adam/v_81_1"
  input: "Placeholder_310"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_310"
  op: "ReadVariableOp"
  input: "training/Adam/v_81_1"
  input: "^AssignVariableOp_310"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_311"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_311"
  op: "AssignVariableOp"
  input: "training/Adam/v_82_1"
  input: "Placeholder_311"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_311"
  op: "ReadVariableOp"
  input: "training/Adam/v_82_1"
  input: "^AssignVariableOp_311"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_312"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_312"
  op: "AssignVariableOp"
  input: "training/Adam/v_83_1"
  input: "Placeholder_312"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_312"
  op: "ReadVariableOp"
  input: "training/Adam/v_83_1"
  input: "^AssignVariableOp_312"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_313"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_313"
  op: "AssignVariableOp"
  input: "training/Adam/v_84_1"
  input: "Placeholder_313"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_313"
  op: "ReadVariableOp"
  input: "training/Adam/v_84_1"
  input: "^AssignVariableOp_313"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_314"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_314"
  op: "AssignVariableOp"
  input: "training/Adam/v_85_1"
  input: "Placeholder_314"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_314"
  op: "ReadVariableOp"
  input: "training/Adam/v_85_1"
  input: "^AssignVariableOp_314"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_315"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 360
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_315"
  op: "AssignVariableOp"
  input: "training/Adam/v_86_1"
  input: "Placeholder_315"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_315"
  op: "ReadVariableOp"
  input: "training/Adam/v_86_1"
  input: "^AssignVariableOp_315"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_316"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_316"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "Placeholder_316"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_316"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_0_1"
  input: "^AssignVariableOp_316"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_317"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_317"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "Placeholder_317"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_317"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_1_1"
  input: "^AssignVariableOp_317"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_318"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_318"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "Placeholder_318"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_318"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_2_1"
  input: "^AssignVariableOp_318"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_319"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_319"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "Placeholder_319"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_319"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_3_1"
  input: "^AssignVariableOp_319"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_320"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_320"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "Placeholder_320"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_320"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_4_1"
  input: "^AssignVariableOp_320"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_321"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_321"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "Placeholder_321"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_321"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_5_1"
  input: "^AssignVariableOp_321"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_322"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_322"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_6_1"
  input: "Placeholder_322"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_322"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_6_1"
  input: "^AssignVariableOp_322"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_323"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_323"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_7_1"
  input: "Placeholder_323"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_323"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_7_1"
  input: "^AssignVariableOp_323"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_324"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_324"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_8_1"
  input: "Placeholder_324"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_324"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_8_1"
  input: "^AssignVariableOp_324"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_325"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_325"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_9_1"
  input: "Placeholder_325"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_325"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_9_1"
  input: "^AssignVariableOp_325"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_326"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_326"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_10_1"
  input: "Placeholder_326"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_326"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_10_1"
  input: "^AssignVariableOp_326"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_327"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_327"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_11_1"
  input: "Placeholder_327"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_327"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_11_1"
  input: "^AssignVariableOp_327"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_328"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_328"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_12_1"
  input: "Placeholder_328"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_328"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_12_1"
  input: "^AssignVariableOp_328"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_329"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_329"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_13_1"
  input: "Placeholder_329"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_329"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_13_1"
  input: "^AssignVariableOp_329"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_330"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_330"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_14_1"
  input: "Placeholder_330"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_330"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_14_1"
  input: "^AssignVariableOp_330"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_331"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_331"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_15_1"
  input: "Placeholder_331"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_331"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_15_1"
  input: "^AssignVariableOp_331"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_332"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_332"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_16_1"
  input: "Placeholder_332"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_332"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_16_1"
  input: "^AssignVariableOp_332"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_333"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_333"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_17_1"
  input: "Placeholder_333"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_333"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_17_1"
  input: "^AssignVariableOp_333"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_334"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_334"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_18_1"
  input: "Placeholder_334"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_334"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_18_1"
  input: "^AssignVariableOp_334"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_335"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_335"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_19_1"
  input: "Placeholder_335"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_335"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_19_1"
  input: "^AssignVariableOp_335"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_336"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_336"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_20_1"
  input: "Placeholder_336"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_336"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_20_1"
  input: "^AssignVariableOp_336"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_337"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_337"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_21_1"
  input: "Placeholder_337"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_337"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_21_1"
  input: "^AssignVariableOp_337"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_338"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_338"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_22_1"
  input: "Placeholder_338"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_338"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_22_1"
  input: "^AssignVariableOp_338"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_339"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_339"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_23_1"
  input: "Placeholder_339"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_339"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_23_1"
  input: "^AssignVariableOp_339"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_340"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_340"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_24_1"
  input: "Placeholder_340"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_340"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_24_1"
  input: "^AssignVariableOp_340"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_341"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_341"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_25_1"
  input: "Placeholder_341"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_341"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_25_1"
  input: "^AssignVariableOp_341"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_342"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_342"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_26_1"
  input: "Placeholder_342"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_342"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_26_1"
  input: "^AssignVariableOp_342"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_343"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_343"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_27_1"
  input: "Placeholder_343"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_343"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_27_1"
  input: "^AssignVariableOp_343"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_344"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_344"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_28_1"
  input: "Placeholder_344"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_344"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_28_1"
  input: "^AssignVariableOp_344"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_345"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_345"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_29_1"
  input: "Placeholder_345"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_345"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_29_1"
  input: "^AssignVariableOp_345"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_346"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_346"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_30_1"
  input: "Placeholder_346"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_346"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_30_1"
  input: "^AssignVariableOp_346"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_347"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_347"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_31_1"
  input: "Placeholder_347"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_347"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_31_1"
  input: "^AssignVariableOp_347"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_348"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_348"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_32_1"
  input: "Placeholder_348"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_348"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_32_1"
  input: "^AssignVariableOp_348"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_349"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_349"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_33_1"
  input: "Placeholder_349"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_349"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_33_1"
  input: "^AssignVariableOp_349"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_350"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_350"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_34_1"
  input: "Placeholder_350"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_350"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_34_1"
  input: "^AssignVariableOp_350"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_351"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_351"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_35_1"
  input: "Placeholder_351"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_351"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_35_1"
  input: "^AssignVariableOp_351"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_352"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_352"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_36_1"
  input: "Placeholder_352"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_352"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_36_1"
  input: "^AssignVariableOp_352"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_353"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_353"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_37_1"
  input: "Placeholder_353"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_353"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_37_1"
  input: "^AssignVariableOp_353"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_354"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_354"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_38_1"
  input: "Placeholder_354"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_354"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_38_1"
  input: "^AssignVariableOp_354"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_355"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_355"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_39_1"
  input: "Placeholder_355"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_355"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_39_1"
  input: "^AssignVariableOp_355"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_356"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_356"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_40_1"
  input: "Placeholder_356"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_356"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_40_1"
  input: "^AssignVariableOp_356"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_357"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_357"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_41_1"
  input: "Placeholder_357"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_357"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_41_1"
  input: "^AssignVariableOp_357"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_358"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_358"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_42_1"
  input: "Placeholder_358"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_358"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_42_1"
  input: "^AssignVariableOp_358"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_359"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_359"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_43_1"
  input: "Placeholder_359"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_359"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_43_1"
  input: "^AssignVariableOp_359"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_360"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_360"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_44_1"
  input: "Placeholder_360"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_360"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_44_1"
  input: "^AssignVariableOp_360"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_361"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_361"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_45_1"
  input: "Placeholder_361"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_361"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_45_1"
  input: "^AssignVariableOp_361"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_362"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_362"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_46_1"
  input: "Placeholder_362"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_362"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_46_1"
  input: "^AssignVariableOp_362"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_363"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_363"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_47_1"
  input: "Placeholder_363"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_363"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_47_1"
  input: "^AssignVariableOp_363"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_364"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_364"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_48_1"
  input: "Placeholder_364"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_364"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_48_1"
  input: "^AssignVariableOp_364"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_365"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_365"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_49_1"
  input: "Placeholder_365"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_365"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_49_1"
  input: "^AssignVariableOp_365"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_366"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_366"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_50_1"
  input: "Placeholder_366"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_366"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_50_1"
  input: "^AssignVariableOp_366"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_367"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_367"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_51_1"
  input: "Placeholder_367"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_367"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_51_1"
  input: "^AssignVariableOp_367"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_368"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_368"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_52_1"
  input: "Placeholder_368"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_368"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_52_1"
  input: "^AssignVariableOp_368"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_369"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_369"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_53_1"
  input: "Placeholder_369"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_369"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_53_1"
  input: "^AssignVariableOp_369"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_370"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_370"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_54_1"
  input: "Placeholder_370"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_370"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_54_1"
  input: "^AssignVariableOp_370"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_371"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_371"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_55_1"
  input: "Placeholder_371"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_371"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_55_1"
  input: "^AssignVariableOp_371"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_372"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_372"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_56_1"
  input: "Placeholder_372"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_372"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_56_1"
  input: "^AssignVariableOp_372"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_373"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_373"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_57_1"
  input: "Placeholder_373"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_373"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_57_1"
  input: "^AssignVariableOp_373"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_374"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_374"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_58_1"
  input: "Placeholder_374"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_374"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_58_1"
  input: "^AssignVariableOp_374"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_375"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_375"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_59_1"
  input: "Placeholder_375"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_375"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_59_1"
  input: "^AssignVariableOp_375"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_376"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_376"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_60_1"
  input: "Placeholder_376"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_376"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_60_1"
  input: "^AssignVariableOp_376"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_377"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_377"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_61_1"
  input: "Placeholder_377"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_377"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_61_1"
  input: "^AssignVariableOp_377"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_378"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_378"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_62_1"
  input: "Placeholder_378"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_378"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_62_1"
  input: "^AssignVariableOp_378"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_379"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_379"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_63_1"
  input: "Placeholder_379"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_379"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_63_1"
  input: "^AssignVariableOp_379"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_380"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_380"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_64_1"
  input: "Placeholder_380"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_380"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_64_1"
  input: "^AssignVariableOp_380"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_381"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_381"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_65_1"
  input: "Placeholder_381"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_381"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_65_1"
  input: "^AssignVariableOp_381"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_382"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_382"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_66_1"
  input: "Placeholder_382"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_382"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_66_1"
  input: "^AssignVariableOp_382"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_383"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_383"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_67_1"
  input: "Placeholder_383"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_383"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_67_1"
  input: "^AssignVariableOp_383"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_384"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_384"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_68_1"
  input: "Placeholder_384"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_384"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_68_1"
  input: "^AssignVariableOp_384"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_385"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_385"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_69_1"
  input: "Placeholder_385"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_385"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_69_1"
  input: "^AssignVariableOp_385"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_386"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_386"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_70_1"
  input: "Placeholder_386"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_386"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_70_1"
  input: "^AssignVariableOp_386"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_387"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_387"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_71_1"
  input: "Placeholder_387"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_387"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_71_1"
  input: "^AssignVariableOp_387"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_388"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_388"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_72_1"
  input: "Placeholder_388"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_388"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_72_1"
  input: "^AssignVariableOp_388"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_389"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_389"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_73_1"
  input: "Placeholder_389"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_389"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_73_1"
  input: "^AssignVariableOp_389"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_390"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_390"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_74_1"
  input: "Placeholder_390"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_390"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_74_1"
  input: "^AssignVariableOp_390"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_391"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_391"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_75_1"
  input: "Placeholder_391"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_391"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_75_1"
  input: "^AssignVariableOp_391"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_392"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_392"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_76_1"
  input: "Placeholder_392"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_392"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_76_1"
  input: "^AssignVariableOp_392"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_393"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_393"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_77_1"
  input: "Placeholder_393"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_393"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_77_1"
  input: "^AssignVariableOp_393"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_394"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_394"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_78_1"
  input: "Placeholder_394"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_394"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_78_1"
  input: "^AssignVariableOp_394"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_395"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_395"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_79_1"
  input: "Placeholder_395"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_395"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_79_1"
  input: "^AssignVariableOp_395"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_396"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_396"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_80_1"
  input: "Placeholder_396"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_396"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_80_1"
  input: "^AssignVariableOp_396"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_397"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_397"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_81_1"
  input: "Placeholder_397"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_397"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_81_1"
  input: "^AssignVariableOp_397"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_398"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_398"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_82_1"
  input: "Placeholder_398"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_398"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_82_1"
  input: "^AssignVariableOp_398"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_399"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_399"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_83_1"
  input: "Placeholder_399"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_399"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_83_1"
  input: "^AssignVariableOp_399"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_400"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_400"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_84_1"
  input: "Placeholder_400"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_400"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_84_1"
  input: "^AssignVariableOp_400"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_401"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_401"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_85_1"
  input: "Placeholder_401"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_401"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_85_1"
  input: "^AssignVariableOp_401"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_402"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_402"
  op: "AssignVariableOp"
  input: "training/Adam/vhat_86_1"
  input: "Placeholder_402"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_402"
  op: "ReadVariableOp"
  input: "training/Adam/vhat_86_1"
  input: "^AssignVariableOp_402"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "k2tfout_0"
  op: "Identity"
  input: "cat_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "k2tfout_1"
  op: "Identity"
  input: "reg_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "k2tfout_2"
  op: "Identity"
  input: "bin_out/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 38
}
